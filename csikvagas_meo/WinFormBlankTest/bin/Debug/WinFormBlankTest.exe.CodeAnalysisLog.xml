<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 12.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="12.0">
 <Namespaces>
  <Namespace Name="WinFormBlankTest.UI.Forms.Classes_for_Show_DataGrid">
   <Messages>
    <Message Id="for" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'for' in namespace name 'WinFormBlankTest.UI.Forms.Classes_for_Show_DataGrid' by changing it to 'For'.</Issue>
    </Message>
    <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="95" Level="Error">Remove the underscores from namespace name 'WinFormBlankTest.UI.Forms.Classes_for_Show_DataGrid'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="WinFormBlankTest.UI.Forms.Other_Forms">
   <Messages>
    <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="95" Level="Error">Remove the underscores from namespace name 'WinFormBlankTest.UI.Forms.Other_Forms'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="WinFormBlankTest.UI.Forms.Result_Forms_With_DataGrid">
   <Messages>
    <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="95" Level="Error">Remove the underscores from namespace name 'WinFormBlankTest.UI.Forms.Result_Forms_With_DataGrid'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="F:\work\csikv_MEO\WinFormBlankTest\bin\Debug\WinFormBlankTest.exe">
   <Modules>
    <Module Name="winformblanktest.exe">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'WinFormBlankTest.exe' with a strong name key.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'WinFormBlankTest.exe' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkWindowsFormsEntryPointsWithStaThread" Category="Microsoft.Usage" CheckId="CA2232" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="205">Mark the entry point method 'Program.Main(string[])' in assembly 'WinFormBlankTest.exe' with an STAThreadAttribute.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="WinFormBlankTest">
       <Types>
        <Type Name="BlankTest" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'Homo_avg' and 'homo_avg' so that they differ by more than case.</Issue>
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'Homo_avg_ok' and 'homo_avg_ok' so that they differ by more than case.</Issue>
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'Homo_cv_ok' and 'homo_cv_ok' so that they differ by more than case.</Issue>
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'Homo_h62' and 'homo_h62' so that they differ by more than case.</Issue>
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'Homo_not_h62' and 'homo_not_h62' so that they differ by more than case.</Issue>
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'Remeasure' and 'remeasure' so that they differ by more than case.</Issue>
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'glucose' and 'Glucose' so that they differ by more than case.</Issue>
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'homo_cv' and 'Homo_cv' so that they differ by more than case.</Issue>
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'homo_h62_ok' and 'Homo_h62_ok' so that they differ by more than case.</Issue>
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'homo_not_h62_ok' and 'Homo_not_h62_ok' so that they differ by more than case.</Issue>
          </Message>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'BlankTest' because it creates members of the following IDisposable types: 'Button'. If 'BlankTest' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.Double,System.Double,System.DateTime,System.Int32,System.Boolean,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, double, double, DateTime, int, bool, string)', correct the casing of 'count' in parameter name 'tube_count' by changing it to 'Count'.</Issue>
            </Message>
            <Message Id="date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, double, double, DateTime, int, bool, string)', correct the casing of 'date' in parameter name 'test_date' by changing it to 'Date'.</Issue>
            </Message>
            <Message Id="is" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, double, double, DateTime, int, bool, string)', correct the casing of 'is' in parameter name 'blank_is_valid' by changing it to 'Is'.</Issue>
            </Message>
            <Message Id="valid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, double, double, DateTime, int, bool, string)', correct the casing of 'valid' in parameter name 'blank_is_valid' by changing it to 'Valid'.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, double, double, DateTime, int, bool, string)', correct the spelling of 'ceve' in parameter name 'ceve' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, double, double, DateTime, int, bool, string)', remove the underscores from parameter name 'blank_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, double, double, DateTime, int, bool, string)', remove the underscores from parameter name 'test_date'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, double, double, DateTime, int, bool, string)', remove the underscores from parameter name 'tube_count'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.Double,System.Double,System.Int32,System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="glu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, double, double, int, string, bool)', correct the spelling of 'glu' in parameter name 'glu' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="meas" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, double, double, int, string, bool)', correct the spelling of 'meas' in parameter name 'meas' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="nano" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, double, double, int, string, bool)', correct the spelling of 'nano' in parameter name 'nano' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="remeas" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, double, double, int, string, bool)', correct the spelling of 'remeas' in parameter name 'remeas' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, double, double, int, string, bool)', correct the spelling of 'sn' in parameter name 'sn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.String,System.Boolean,System.Double,System.String,System.DateTime)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="cv" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, bool, double, string, DateTime)', correct the casing of 'cv' in parameter name 'blank_cv' by changing it to 'CV'.</Issue>
            </Message>
            <Message Id="ok" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, bool, double, string, DateTime)', correct the casing of 'ok' in parameter name 'avg_ok' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, string, bool, double, string, DateTime)', correct the spelling of 'avg' in parameter name 'avg_ok' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="dt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, string, bool, double, string, DateTime)', correct the spelling of 'dt' in parameter name 'dt' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, bool, double, string, DateTime)', remove the underscores from parameter name 'avg_ok'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, bool, double, string, DateTime)', remove the underscores from parameter name 'blank_cv'.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="643">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'BlankTest.BlankTest(string, string, string, string, bool, double, string, DateTime)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string)', correct the casing of 'date' in parameter name 'test_date' by changing it to 'Date'.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, string, string, string)', correct the spelling of 'ceve' in parameter name 'ceve' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string)', remove the underscores from parameter name 'test_date'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Double,System.Boolean,System.Boolean,System.DateTime,System.DateTime)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, double, bool, bool, DateTime, DateTime)', correct the casing of 'h' in parameter name 'not_h62' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="text" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, double, bool, bool, DateTime, DateTime)', correct the casing of 'text' in parameter name 'error_text' by changing it to 'Text'.</Issue>
            </Message>
            <Message Id="glu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, string, string, string, string, double, bool, bool, DateTime, DateTime)', correct the spelling of 'glu' in parameter name 'glu' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, string, string, string, string, double, bool, bool, DateTime, DateTime)', correct the spelling of 'h' in parameter name 'h62' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, string, string, string, string, double, bool, bool, DateTime, DateTime)', correct the spelling of 'sn' in parameter name 'sn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, double, bool, bool, DateTime, DateTime)', remove the underscores from parameter name 'error_text'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, double, bool, bool, DateTime, DateTime)', remove the underscores from parameter name 'not_h62'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="693">Modify 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, bool)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, bool)', correct the casing of 'count' in parameter name 'wrong_strip_count' by changing it to 'Count'.</Issue>
            </Message>
            <Message Id="date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, bool)', correct the casing of 'date' in parameter name 'test_date' by changing it to 'Date'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, bool)', correct the casing of 'h' in parameter name 'not_h62' by changing it to 'H'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, bool)', correct the casing of 'h' in parameter name 'not_h62_ok' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="ok" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, bool)', correct the casing of 'ok' in parameter name 'not_h62_ok' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="strip" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, bool)', correct the casing of 'strip' in parameter name 'wrong_strip_count' by changing it to 'Strip'.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, bool)', correct the spelling of 'ceve' in parameter name 'ceve' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, bool)', correct the spelling of 'h' in parameter name 'h62' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="meas" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, bool)', correct the spelling of 'meas' in parameter name 'meas' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, bool)', remove the underscores from parameter name 'not_h62'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, bool)', remove the underscores from parameter name 'not_h62_ok'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, bool)', remove the underscores from parameter name 'test_date'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, bool)', remove the underscores from parameter name 'wrong_strip_count'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="outstrip" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', the compound word 'outstrip' in parameter name 'out_strip' exists as a discrete term. If your usage is intended to be single word, case it as 'outstrip' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', the compound word 'outstrip' in parameter name 'out_strip_ok' exists as a discrete term. If your usage is intended to be single word, case it as 'outstrip' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'avg' in parameter name 'homogenity_avg' by changing it to 'Avg'.</Issue>
            </Message>
            <Message Id="count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'count' in parameter name 'srip_count' by changing it to 'Count'.</Issue>
            </Message>
            <Message Id="cv" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'cv' in parameter name 'homogenity_cv' by changing it to 'CV'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'h' in parameter name 'not_h62' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'id' in parameter name 'lot_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'id' in parameter name 'roll_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="ok" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'ok' in parameter name 'avg_ok' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'ok' in parameter name 'cv_ok' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'ok' in parameter name 'out_strip_ok' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="strip" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'strip' in parameter name 'out_strip' by changing it to 'Strip'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'strip' in parameter name 'out_strip_ok' by changing it to 'Strip'.</Issue>
            </Message>
            <Message Id="actdate" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the spelling of 'actdate' in parameter name 'actdate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the spelling of 'avg' in parameter name 'avg_ok' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the spelling of 'avg' in parameter name 'homogenity_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the spelling of 'h' in parameter name 'h62' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the spelling of 'homogenity' in parameter name 'homogenity_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the spelling of 'homogenity' in parameter name 'homogenity_cv' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="srip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In method 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the spelling of 'srip' in parameter name 'srip_count' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', remove the underscores from parameter name 'avg_ok'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', remove the underscores from parameter name 'cv_ok'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', remove the underscores from parameter name 'homogenity_avg'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', remove the underscores from parameter name 'homogenity_cv'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', remove the underscores from parameter name 'lot_id'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', remove the underscores from parameter name 'not_h62'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', remove the underscores from parameter name 'out_strip'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', remove the underscores from parameter name 'out_strip_ok'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', remove the underscores from parameter name 'roll_id'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">In member 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)', remove the underscores from parameter name 'srip_count'.</Issue>
            </Message>
            <Message Id="srip_count" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="20">Parameter 'srip_count' of 'BlankTest.BlankTest(string, string, string, string, string, string, string, string, string, string, string, string, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#after_blank_avg_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.after_blank_avg_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'BlankTest.after_blank_avg_ok' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#After_blank_ok" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="blank" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="734">Correct the casing of 'blank' in member name 'BlankTest.After_blank_ok' by changing it to 'Blank'.</Issue>
            </Message>
            <Message Id="ok" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="734">Correct the casing of 'ok' in member name 'BlankTest.After_blank_ok' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="734">Remove the underscores from member name 'BlankTest.After_blank_ok'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#After_H_AVG" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AVG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="362">Correct the casing of 'AVG' in member name 'BlankTest.After_H_AVG' by changing it to 'Avg'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="362">Remove the underscores from member name 'BlankTest.After_H_AVG'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#After_H_AVG_ok" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AVG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="393">Correct the casing of 'AVG' in member name 'BlankTest.After_H_AVG_ok' by changing it to 'Avg'.</Issue>
            </Message>
            <Message Id="ok" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="393">Correct the casing of 'ok' in member name 'BlankTest.After_H_AVG_ok' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="393">Remove the underscores from member name 'BlankTest.After_H_AVG_ok'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_After_H_AVG_ok()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToBoolean(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="393">Because the behavior of 'Convert.ToBoolean(string)' could vary based on the current user's locale settings, replace this call in 'BlankTest.After_H_AVG_ok.get()' with a call to 'Convert.ToBoolean(string, IFormatProvider)'. If the result of 'Convert.ToBoolean(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#After_H_CV" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="451">Remove the underscores from member name 'BlankTest.After_H_CV'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#After_H_CV_ok" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ok" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="429">Correct the casing of 'ok' in member name 'BlankTest.After_H_CV_ok' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="429">Remove the underscores from member name 'BlankTest.After_H_CV_ok'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_After_H_CV_ok()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToBoolean(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="429">Because the behavior of 'Convert.ToBoolean(string)' could vary based on the current user's locale settings, replace this call in 'BlankTest.After_H_CV_ok.get()' with a call to 'Convert.ToBoolean(string, IFormatProvider)'. If the result of 'Convert.ToBoolean(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#After_H_H62" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="328">Remove the underscores from member name 'BlankTest.After_H_H62'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#After_H_MeasureType" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="378">Remove the underscores from member name 'BlankTest.After_H_MeasureType'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_After_H_MeasureType(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="value" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
               <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="382">Parameter 'value' of 'BlankTest.After_H_MeasureType.set(string)' is never used. Remove the parameter or use it in the method body.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#After_H_NotH62" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="311">Remove the underscores from member name 'BlankTest.After_H_NotH62'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#After_H_OutOfRange" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="345">Remove the underscores from member name 'BlankTest.After_H_OutOfRange'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_After_H_OutOfRange()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="345">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'BlankTest.After_H_OutOfRange.get()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_After_H_OutOfRange(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="value" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
               <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="350">Parameter 'value' of 'BlankTest.After_H_OutOfRange.set(string)' is never used. Remove the parameter or use it in the method body.</Issue>
              </Message>
              <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="350">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'BlankTest.After_H_OutOfRange.set(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#After_H_OutOfRange_OK" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="OK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="414">Correct the casing of 'OK' in member name 'BlankTest.After_H_OutOfRange_OK' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="414">Remove the underscores from member name 'BlankTest.After_H_OutOfRange_OK'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#after_homo_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.after_homo_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'BlankTest.after_homo_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#after_homo_avg_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.after_homo_avg_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'BlankTest.after_homo_avg_ok' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#after_homo_cv" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.after_homo_cv' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#after_homo_cv_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.after_homo_cv_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#after_homo_h62" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.after_homo_h62' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#after_homo_not_h62" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.after_homo_not_h62' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#after_homo_out_of_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.after_homo_out_of_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#after_homo_outofrange" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.after_homo_outofrange' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="outofrange" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'outofrange' in member name 'BlankTest.after_homo_outofrange' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#all_blank_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.all_blank_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'BlankTest.all_blank_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#all_blank_cv" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.all_blank_cv' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#all_blank_date" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.all_blank_date' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#all_blank_tubecount" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.all_blank_tubecount' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="tubecount" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'tubecount' in member name 'BlankTest.all_blank_tubecount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#all_blank_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.all_blank_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Averages" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Averages()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToDouble(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="934">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'BlankTest.Averages.get()' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
              <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="934">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'BlankTest.Averages.get()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#bar" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.bar' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BlankAVG" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AVG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="893">Correct the casing of 'AVG' in member name 'BlankTest.BlankAVG' by changing it to 'Avg'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btRemeasure" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.btRemeasure' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Remeasure" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Remeasure' in member name 'BlankTest.btRemeasure' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="bt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'bt' in member name 'BlankTest.btRemeasure' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CV" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_CV()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToDouble(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="870">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'BlankTest.CV.get()' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
              <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="870">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'BlankTest.CV.get()' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Glu" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Glu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="810">Correct the spelling of 'Glu' in member name 'BlankTest.Glu' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#glucose" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.glucose' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#H62_count" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="997">Correct the casing of 'count' in member name 'BlankTest.H62_count' by changing it to 'Count'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="997">Remove the underscores from member name 'BlankTest.H62_count'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homo_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.homo_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'BlankTest.homo_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Homo_avg" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="avg" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="463">Correct the casing of 'avg' in member name 'BlankTest.Homo_avg' by changing it to 'Avg'.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="463">Correct the spelling of 'avg' in member name 'BlankTest.Homo_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="463">Remove the underscores from member name 'BlankTest.Homo_avg'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homo_avg_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.homo_avg_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'BlankTest.homo_avg_ok' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Homo_avg_ok" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="avg" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="475">Correct the casing of 'avg' in member name 'BlankTest.Homo_avg_ok' by changing it to 'Avg'.</Issue>
            </Message>
            <Message Id="ok" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="475">Correct the casing of 'ok' in member name 'BlankTest.Homo_avg_ok' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="475">Correct the spelling of 'avg' in member name 'BlankTest.Homo_avg_ok' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="475">Remove the underscores from member name 'BlankTest.Homo_avg_ok'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homo_bt" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.homo_bt' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="bt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'bt' in member name 'BlankTest.homo_bt' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homo_cv" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.homo_cv' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Homo_cv" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="cv" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="469">Correct the casing of 'cv' in member name 'BlankTest.Homo_cv' by changing it to 'CV'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="469">Remove the underscores from member name 'BlankTest.Homo_cv'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homo_cv_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.homo_cv_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Homo_cv_ok" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="cv" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="481">Correct the casing of 'cv' in member name 'BlankTest.Homo_cv_ok' by changing it to 'CV'.</Issue>
            </Message>
            <Message Id="ok" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="481">Correct the casing of 'ok' in member name 'BlankTest.Homo_cv_ok' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="481">Remove the underscores from member name 'BlankTest.Homo_cv_ok'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homo_h62" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.homo_h62' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Homo_h62" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="487">Correct the casing of 'h' in member name 'BlankTest.Homo_h62' by changing it to 'H'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="487">Remove the underscores from member name 'BlankTest.Homo_h62'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homo_h62_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.homo_h62_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Homo_h62_ok" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="500">Correct the casing of 'h' in member name 'BlankTest.Homo_h62_ok' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="ok" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="500">Correct the casing of 'ok' in member name 'BlankTest.Homo_h62_ok' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="500">Remove the underscores from member name 'BlankTest.Homo_h62_ok'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homo_not_h62" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.homo_not_h62' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Homo_not_h62" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="493">Correct the casing of 'h' in member name 'BlankTest.Homo_not_h62' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="not" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="493">Correct the casing of 'not' in member name 'BlankTest.Homo_not_h62' by changing it to 'Not'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="493">Remove the underscores from member name 'BlankTest.Homo_not_h62'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homo_not_h62_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.homo_not_h62_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Homo_not_h62_ok" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="506">Correct the casing of 'h' in member name 'BlankTest.Homo_not_h62_ok' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="not" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="506">Correct the casing of 'not' in member name 'BlankTest.Homo_not_h62_ok' by changing it to 'Not'.</Issue>
            </Message>
            <Message Id="ok" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="506">Correct the casing of 'ok' in member name 'BlankTest.Homo_not_h62_ok' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="506">Remove the underscores from member name 'BlankTest.Homo_not_h62_ok'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homo_out_of_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.homo_out_of_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homo_outofrange" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.homo_outofrange' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="outofrange" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'outofrange' in member name 'BlankTest.homo_outofrange' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LOT" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="155">Correct the casing of 'LOT' in member name 'BlankTest.LOT' by changing it to 'Lot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Lot_Averages" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="747">Remove the underscores from member name 'BlankTest.Lot_Averages'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Lot_CV" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="759">Remove the underscores from member name 'BlankTest.Lot_CV'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LotID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="972">Correct the casing of 'ID' in member name 'BlankTest.LotID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#n_amper" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.n_amper' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="amper" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'amper' in member name 'BlankTest.n_amper' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NanoA" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Nano" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="820">Correct the spelling of 'Nano' in member name 'BlankTest.NanoA' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Not_H62" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="258">Remove the underscores from member name 'BlankTest.Not_H62'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Not_H62_count" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="1034">Correct the casing of 'count' in member name 'BlankTest.Not_H62_count' by changing it to 'Count'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="1034">Remove the underscores from member name 'BlankTest.Not_H62_count'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Out_of_range" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="of" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="513">Correct the casing of 'of' in member name 'BlankTest.Out_of_range' by changing it to 'Of'.</Issue>
            </Message>
            <Message Id="range" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="513">Correct the casing of 'range' in member name 'BlankTest.Out_of_range' by changing it to 'Range'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="513">Remove the underscores from member name 'BlankTest.Out_of_range'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Out_of_range_valid" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="of" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="519">Correct the casing of 'of' in member name 'BlankTest.Out_of_range_valid' by changing it to 'Of'.</Issue>
            </Message>
            <Message Id="range" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="519">Correct the casing of 'range' in member name 'BlankTest.Out_of_range_valid' by changing it to 'Range'.</Issue>
            </Message>
            <Message Id="valid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="519">Correct the casing of 'valid' in member name 'BlankTest.Out_of_range_valid' by changing it to 'Valid'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="519">Remove the underscores from member name 'BlankTest.Out_of_range_valid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#remeasure" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.remeasure' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="remeasure" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'remeasure' in member name 'BlankTest.remeasure' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Remeasure" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Remeasure" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="1026">Correct the spelling of 'Remeasure' in member name 'BlankTest.Remeasure' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Remeasured" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Remeasured" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="855">Correct the spelling of 'Remeasured' in member name 'BlankTest.Remeasured' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ROLL" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ROLL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="168">Correct the casing of 'ROLL' in member name 'BlankTest.ROLL' by changing it to 'Roll'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Roll_Averages" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="772">Remove the underscores from member name 'BlankTest.Roll_Averages'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Roll_CV" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="784">Remove the underscores from member name 'BlankTest.Roll_CV'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RollID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTest.cs" Line="959">Correct the casing of 'ID' in member name 'BlankTest.RollID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#serial" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankTest.serial' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BlankTestEnvironment" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ACCESS_RIGHTS" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTestEnvironment.cs" Line="54">Change 'BlankTestEnvironment.ACCESS_RIGHTS' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTestEnvironment.cs" Line="54">Change 'List&lt;string&gt;' in 'BlankTestEnvironment.ACCESS_RIGHTS' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="ACCESS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTestEnvironment.cs" Line="54">Correct the casing of 'ACCESS' in member name 'BlankTestEnvironment.ACCESS_RIGHTS' by changing it to 'Access'.</Issue>
            </Message>
            <Message Id="RIGHTS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTestEnvironment.cs" Line="54">Correct the casing of 'RIGHTS' in member name 'BlankTestEnvironment.ACCESS_RIGHTS' by changing it to 'Rights'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTestEnvironment.cs" Line="54">Remove the underscores from member name 'BlankTestEnvironment.ACCESS_RIGHTS'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_ACCESS_RIGHTS(System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTestEnvironment.cs" Line="58">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'BlankTestEnvironment.ACCESS_RIGHTS.set(List&lt;string&gt;)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#AccessRights" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'BlankTestEnvironment.AccessRights' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BlankTestEnvironment.AccessRights' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRoomID()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTestEnvironment.cs" Line="64">Correct the casing of 'ID' in member name 'BlankTestEnvironment.GetRoomID()' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTestEnvironment.cs" Line="76">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'BlankTestEnvironment.GetRoomID()' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTestEnvironment.cs" Line="103">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'BlankTestEnvironment.GetRoomID()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTestEnvironment.cs" Line="71">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'BlankTestEnvironment.GetRoomID()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTestEnvironment.cs" Line="80">Because the behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings, replace this call in 'BlankTestEnvironment.GetRoomID()' with a call to 'string.EndsWith(string, StringComparison)'. If the result of 'string.EndsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTestEnvironment.cs" Line="80">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'BlankTestEnvironment.GetRoomID()' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTestEnvironment.cs" Line="78">Replace the call to 'string.operator !=(string, string)' in 'BlankTestEnvironment.GetRoomID()' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Operator" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BlankTestEnvironment.Operator' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#room_id" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BlankTestEnvironment.room_id' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BlankTestSwVersion" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#SwVersions" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_SwVersions()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="BlankTestSwVersion.cs" Line="15">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'BlankTestSwVersion.SwVersions.get()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="CheckError" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Int32,WinFormBlankTest.UserPanel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="97">'CheckError.CheckError(int, UserPanel)' has a cyclomatic complexity of 37. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="Users" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="97">In member 'CheckError.CheckError(int, UserPanel)', correct the casing of 'Users' in parameter name 'Users_form' by changing it to 'users'.</Issue>
            </Message>
            <Message Id="form" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="97">In member 'CheckError.CheckError(int, UserPanel)', correct the casing of 'form' in parameter name 'Users_form' by changing it to 'Form'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="97">In member 'CheckError.CheckError(int, UserPanel)', correct the casing of 'h' in parameter name 'error_h' by changing it to 'H'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="97">In member 'CheckError.CheckError(int, UserPanel)', remove the underscores from parameter name 'Users_form'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="97">In member 'CheckError.CheckError(int, UserPanel)', remove the underscores from parameter name 'error_h'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="107">In externally visible method 'CheckError.CheckError(int, UserPanel)', validate parameter 'Users_form' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AppendingWhenInvoked(System.String,System.Drawing.Color,System.Windows.Forms.Control)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="67">'c', a parameter, is cast to type 'RichTextBox' multiple times in method 'CheckError.AppendingWhenInvoked(string, Color, Control)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="68">'c', a parameter, is cast to type 'RichTextBox' multiple times in method 'CheckError.AppendingWhenInvoked(string, Color, Control)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="69">'c', a parameter, is cast to type 'RichTextBox' multiple times in method 'CheckError.AppendingWhenInvoked(string, Color, Control)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="70">'c', a parameter, is cast to type 'RichTextBox' multiple times in method 'CheckError.AppendingWhenInvoked(string, Color, Control)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="c" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="65">In method 'CheckError.AppendingWhenInvoked(string, Color, Control)', consider providing a more meaningful name than parameter name 'c'.</Issue>
            </Message>
            <Message Id="txt" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="65">Parameter 'txt' of 'CheckError.AppendingWhenInvoked(string, Color, Control)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AppendTextToUser(System.String,System.Windows.Forms.Panel,System.Drawing.Color)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="76">In method 'CheckError.AppendTextToUser(string, Panel, Color)', call System.IDisposable.Dispose on object 'current' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="80">'c', a variable, is cast to type 'RichTextBox' multiple times in method 'CheckError.AppendTextToUser(string, Panel, Color)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="77">In externally visible method 'CheckError.AppendTextToUser(string, Panel, Color)', validate parameter 'myForm' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckCorrectDribble(WinFormBlankTest.UserPanel)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="312">Method 'CheckError.CheckCorrectDribble(UserPanel)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Megfelelően cseppentett?".</Issue>
            </Message>
            <Message Id="Megfelelően" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="312">Correct the spelling of the unrecognized token 'Megfelelően' in the literal '"Megfelelően cseppentett?"'.</Issue>
            </Message>
            <Message Id="cseppentett" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="312">Correct the spelling of the unrecognized token 'cseppentett' in the literal '"Megfelelően cseppentett?"'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="312">Change 'CheckError.CheckCorrectDribble(UserPanel)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckEarlyDribble(WinFormBlankTest.UserPanel)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="335">Method 'CheckError.CheckEarlyDribble(UserPanel)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Korábban cseppentett?".</Issue>
            </Message>
            <Message Id="Korábban" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="335">Correct the spelling of the unrecognized token 'Korábban' in the literal '"Korábban cseppentett?"'.</Issue>
            </Message>
            <Message Id="cseppentett" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="335">Correct the spelling of the unrecognized token 'cseppentett' in the literal '"Korábban cseppentett?"'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="335">Change 'CheckError.CheckEarlyDribble(UserPanel)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckEarlyDribbleWithDeviceReplace(WinFormBlankTest.UserPanel)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="358">Method 'CheckError.CheckEarlyDribbleWithDeviceReplace(UserPanel)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Korábban cseppentett?".</Issue>
            </Message>
            <Message Id="Korábban" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="358">Correct the spelling of the unrecognized token 'Korábban' in the literal '"Korábban cseppentett?"'.</Issue>
            </Message>
            <Message Id="cseppentett" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="358">Correct the spelling of the unrecognized token 'cseppentett' in the literal '"Korábban cseppentett?"'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="358">Change 'CheckError.CheckEarlyDribbleWithDeviceReplace(UserPanel)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckPostError(WinFormBlankTest.UserPanel)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="405">The 'this' parameter (or 'Me' in Visual Basic) of 'CheckError.CheckPostError(UserPanel)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckPostErrorAtDeviceReplace(WinFormBlankTest.UserPanel)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="395">The 'this' parameter (or 'Me' in Visual Basic) of 'CheckError.CheckPostErrorAtDeviceReplace(UserPanel)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CleanStrip(WinFormBlankTest.UserPanel)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="308">The 'this' parameter (or 'Me' in Visual Basic) of 'CheckError.CleanStrip(UserPanel)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="Users_form" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="308">Parameter 'Users_form' of 'CheckError.CleanStrip(UserPanel)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EarlyDripp" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dripp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Dripp' in member name 'CheckError.EarlyDripp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LOT" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LOT' in member name 'CheckError.LOT' by changing it to 'Lot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NOT_H62" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NOT' in member name 'CheckError.NOT_H62' by changing it to 'Not'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'CheckError.NOT_H62'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_lot_id" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'CheckError.selected_lot_id' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetLabelVisible(WinFormBlankTest.UserPanel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="58">'lb', a variable, is cast to type 'Label' multiple times in method 'CheckError.SetLabelVisible(UserPanel)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="Users" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="49">In member 'CheckError.SetLabelVisible(UserPanel)', correct the casing of 'Users' in parameter name 'Users_form' by changing it to 'users'.</Issue>
            </Message>
            <Message Id="form" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="49">In member 'CheckError.SetLabelVisible(UserPanel)', correct the casing of 'form' in parameter name 'Users_form' by changing it to 'Form'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="49">In member 'CheckError.SetLabelVisible(UserPanel)', remove the underscores from parameter name 'Users_form'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="49">In externally visible method 'CheckError.SetLabelVisible(UserPanel)', validate parameter 'Users_form' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetLotId(System.String,System.String,WinFormBlankTest.UserPanel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="32">'item', a variable, is cast to type 'TextBox' multiple times in method 'CheckError.SetLotId(string, string, UserPanel)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="34">'item', a variable, is cast to type 'TextBox' multiple times in method 'CheckError.SetLotId(string, string, UserPanel)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="38">'item', a variable, is cast to type 'TextBox' multiple times in method 'CheckError.SetLotId(string, string, UserPanel)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="40">'item', a variable, is cast to type 'TextBox' multiple times in method 'CheckError.SetLotId(string, string, UserPanel)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="Users" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="23">In member 'CheckError.SetLotId(string, string, UserPanel)', correct the casing of 'Users' in parameter name 'Users_form' by changing it to 'users'.</Issue>
            </Message>
            <Message Id="form" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="23">In member 'CheckError.SetLotId(string, string, UserPanel)', correct the casing of 'form' in parameter name 'Users_form' by changing it to 'Form'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="23">In member 'CheckError.SetLotId(string, string, UserPanel)', remove the underscores from parameter name 'Users_form'.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="CheckError.cs" Line="23">In externally visible method 'CheckError.SetLotId(string, string, UserPanel)', validate parameter 'Users_form' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DetailedPanel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.IO.Ports.SerialPort,WinFormBlankTest.UserPanel,WinFormBlankTest.Device)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="21">In member 'DetailedPanel.DetailedPanel(SerialPort, UserPanel, Device)', remove the underscores from parameter name '_port'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="21">In member 'DetailedPanel.DetailedPanel(SerialPort, UserPanel, Device)', remove the underscores from parameter name '_usersPanel'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="40">In externally visible method 'DetailedPanel.DetailedPanel(SerialPort, UserPanel, Device)', validate parameter '_port' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AppendText(System.String,System.Windows.Forms.Panel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="98">In method 'DetailedPanel.AppendText(string, Panel)', call System.IDisposable.Dispose on object 'current' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="102">'c', a variable, is cast to type 'RichTextBox' multiple times in method 'DetailedPanel.AppendText(string, Panel)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="100">In externally visible method 'DetailedPanel.AppendText(string, Panel)', validate parameter 'myForm' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChangeText(System.String,System.Windows.Forms.Panel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="140">In method 'DetailedPanel.ChangeText(string, Panel)', call System.IDisposable.Dispose on object 'current' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="143">'c', a variable, is cast to type 'RichTextBox' multiple times in method 'DetailedPanel.ChangeText(string, Panel)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="141">In externally visible method 'DetailedPanel.ChangeText(string, Panel)', validate parameter 'myForm' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ErrorReceived(System.Object,System.IO.Ports.SerialErrorReceivedEventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="89">Method 'DetailedPanel.ErrorReceived(object, SerialErrorReceivedEventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "\nKommunikációs (paritásbit)hiba!\nKezdje Újra a mérést a ,  porton!\n".</Issue>
            </Message>
            <Message Id="System.Threading.Thread" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="89">'DetailedPanel.ErrorReceived(object, SerialErrorReceivedEventArgs)' creates a new instance of 'Thread' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="Kezdje" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="89">Correct the spelling of the unrecognized token 'Kezdje' in the literal '"\nKommunikációs (paritásbit)hiba!\nKezdje Újra a mérést a "'.</Issue>
            </Message>
            <Message Id="Kommunikációs" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="89">Correct the spelling of the unrecognized token 'Kommunikációs' in the literal '"\nKommunikációs (paritásbit)hiba!\nKezdje Újra a mérést a "'.</Issue>
            </Message>
            <Message Id="hiba" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="89">Correct the spelling of the unrecognized token 'hiba' in the literal '"\nKommunikációs (paritásbit)hiba!\nKezdje Újra a mérést a "'.</Issue>
            </Message>
            <Message Id="mérést" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="89">Correct the spelling of the unrecognized token 'mérést' in the literal '"\nKommunikációs (paritásbit)hiba!\nKezdje Újra a mérést a "'.</Issue>
            </Message>
            <Message Id="paritásbit" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="89">Correct the spelling of the unrecognized token 'paritásbit' in the literal '"\nKommunikációs (paritásbit)hiba!\nKezdje Újra a mérést a "'.</Issue>
            </Message>
            <Message Id="porton" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="89">Correct the spelling of the unrecognized token 'porton' in the literal '" porton!\n"'.</Issue>
            </Message>
            <Message Id="Újra" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="89">Correct the spelling of the unrecognized token 'Újra' in the literal '"\nKommunikációs (paritásbit)hiba!\nKezdje Újra a mérést a "'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="89">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DetailedPanel.ErrorReceived(object, SerialErrorReceivedEventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="89">Change 'DetailedPanel.ErrorReceived(object, SerialErrorReceivedEventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMonth()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="360">Change 'DetailedPanel.GetMonth()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.Designer.cs" Line="63">Method 'DetailedPanel.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Clear".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.Designer.cs" Line="78">Method 'DetailedPanel.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Form1".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#month" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DetailedPanel.month' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#myPort" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DetailedPanel.myPort' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#myThread" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'DetailedPanel.myThread' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#portsAvailable" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DetailedPanel.portsAvailable' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Process(WinFormBlankTest.MessageCompletedEventArgs,System.Windows.Forms.Panel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ar" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="84">In method 'DetailedPanel.Process(MessageCompletedEventArgs, Panel)', correct the spelling of 'ar' in parameter name 'ar' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadPort(System.IO.Ports.SerialPort)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="WinFormBlankTest.DetailedPanel.AppendText(System.String,System.Windows.Forms.Panel)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="200">Method 'DetailedPanel.ReadPort(SerialPort)' passes a literal string as parameter 'text' of a call to 'DetailedPanel.AppendText(string, Panel)'. Retrieve the following string(s) from a resource table instead: "\nWaiting for data on port:, \n".</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="198">In member 'DetailedPanel.ReadPort(SerialPort)', remove the underscores from parameter name '_port'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="200">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DetailedPanel.ReadPort(SerialPort)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="200">In externally visible method 'DetailedPanel.ReadPort(SerialPort)', validate parameter '_port' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadRemainingBytes(System.IO.Ports.SerialPort,System.Int32,System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="304">In member 'DetailedPanel.ReadRemainingBytes(SerialPort, int, byte[])', remove the underscores from parameter name '_port'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="307">In externally visible method 'DetailedPanel.ReadRemainingBytes(SerialPort, int, byte[])', validate parameter '_port' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#receivedPackets" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DetailedPanel.receivedPackets' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#richTextBox1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DetailedPanel.richTextBox1' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RichTextBox1_TextChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="65">'DetailedPanel.RichTextBox1_TextChanged(object, EventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetLabelInvisible()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="187">'lb', a variable, is cast to type 'Label' multiple times in method 'DetailedPanel.SetLabelInvisible()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="189">'lb', a variable, is cast to type 'Label' multiple times in method 'DetailedPanel.SetLabelInvisible()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetLabelVisible()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="169">'lb', a variable, is cast to type 'Label' multiple times in method 'DetailedPanel.SetLabelVisible()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetReceivedBytes(System.Byte[],System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="WinFormBlankTest.DetailedPanel.AppendText(System.String,System.Windows.Forms.Panel)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="326">Method 'DetailedPanel.SetReceivedBytes(byte[], int)' passes a literal string as parameter 'text' of a call to 'DetailedPanel.AppendText(string, Panel)'. Retrieve the following string(s) from a resource table instead: "\nHeader OK".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tbBarcode" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DetailedPanel.tbBarcode' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tbBarcode_textchanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="tb" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="366">Correct the casing of 'tb' in member name 'DetailedPanel.tbBarcode_textchanged(object, EventArgs)' by changing it to 'TB'.</Issue>
            </Message>
            <Message Id="textchanged" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="366">Correct the casing of 'textchanged' in member name 'DetailedPanel.tbBarcode_textchanged(object, EventArgs)' by changing it to 'Textchanged'.</Issue>
            </Message>
            <Message Id="textchanged" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="366">Correct the spelling of 'textchanged' in member name 'DetailedPanel.tbBarcode_textchanged(object, EventArgs)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="366">Remove the underscores from member name 'DetailedPanel.tbBarcode_textchanged(object, EventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TheDevice" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DetailedPanel.TheDevice' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThePanel" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DetailedPanel.ThePanel' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#usersPanel" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DetailedPanel.usersPanel' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#worker" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DetailedPanel.worker' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteNote(WinFormBlankTest.NoteWriteEventArgs,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="346">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DetailedPanel.WriteNote(NoteWriteEventArgs, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="348">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DetailedPanel.WriteNote(NoteWriteEventArgs, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="353">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'DetailedPanel.WriteNote(NoteWriteEventArgs, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="DetailedPanel.cs" Line="351">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'DetailedPanel.WriteNote(NoteWriteEventArgs, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MessageComplete" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'DetailedPanel.MessageCompletedEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'DetailedPanel.MessageCompletedEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NoteWriting" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'DetailedPanel.NoteWriteEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'DetailedPanel.NoteWriteEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
             <Issue Name="TooMany" Certainty="95" Level="Error">Remove all but the first two parameters of 'DetailedPanel.NoteWriteEventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DetailedPanel+MessageCompletedEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="DelegateParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In delegate 'DetailedPanel.MessageCompletedEventHandler', consider providing a more meaningful name than parameter name 'a'.</Issue>
          </Message>
          <Message Id="curr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="DelegateParameter" Certainty="75" Level="CriticalWarning">In delegate 'DetailedPanel.MessageCompletedEventHandler', correct the spelling of 'curr' in parameter name 'currForm' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'DetailedPanel.MessageCompletedEventHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DetailedPanel+NoteWriteEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="portname" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="DelegateParameter" Certainty="75" Level="CriticalWarning">In delegate 'DetailedPanel.NoteWriteEventHandler', correct the spelling of 'portname' in parameter name 'portname' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'DetailedPanel.NoteWriteEventHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Device" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.IO.Ports.SerialPort)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Device.cs" Line="154">In member 'Device.Device(SerialPort)', remove the underscores from parameter name '_port'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_code_OK" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device._code_OK' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_drop_detect_OK" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device._drop_detect_OK' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_drop_wait_OK" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device._drop_wait_OK' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_IsBatteryShown" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device._IsBatteryShown' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_IsDialogShown" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device._IsDialogShown' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_lot_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device._lot_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_sn" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device._sn' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sn' in member name 'Device._sn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_strip_in_OK" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device._strip_in_OK' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_strip_wait_OK" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device._strip_wait_OK' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#actPort" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Device.actPort' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AfterFirstLOt" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LOt" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'LOt' in member name 'Device.AfterFirstLOt' exists as a discrete term. If your usage is intended to be single word, case it as 'Lot' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Ot" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Ot' in member name 'Device.AfterFirstLOt' by changing it to 'OT'.</Issue>
            </Message>
            <Message Id="Ot" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ot' in member name 'Device.AfterFirstLOt' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Averages_ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'Device.Averages_ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Device.Averages_ID'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BarCode" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BarCode" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'BarCode' in member name 'Device.BarCode' exists as a discrete term. If your usage is intended to be single word, case it as 'Barcode' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BarcodeLOTReaded" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.BarcodeLOTReaded' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Readed" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Readed' in member name 'Device.BarcodeLOTReaded' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BarcodeLOTReadedAndSaved" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.BarcodeLOTReadedAndSaved' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Readed" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Readed' in member name 'Device.BarcodeLOTReadedAndSaved' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BarcodeLOTValue" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.BarcodeLOTValue' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BarCodeOK" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BarCode" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'BarCode' in member name 'Device.BarCodeOK' exists as a discrete term. If your usage is intended to be single word, case it as 'Barcode' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.BarCodeOK' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BarCodeOK_lot" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BarCode" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'BarCode' in member name 'Device.BarCodeOK_lot' exists as a discrete term. If your usage is intended to be single word, case it as 'Barcode' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.BarCodeOK_lot' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BarcodeRoll" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.BarcodeRoll' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BarcodeSN" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.BarcodeSN' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BarcodeSNAndRollValue" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.BarcodeSNAndRollValue' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#batterIsLowCounter" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.batterIsLowCounter' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BatteryFlagOn" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FlagOn" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'FlagOn' in member name 'Device.BatteryFlagOn' exists as a discrete term. If your usage is intended to be single word, case it as 'Flagon' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.BatteryFlagOn' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'Flag' in member name 'Device.BatteryFlagOn' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ClearAfterFirstReceive" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.ClearAfterFirstReceive' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#code_OK" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="OK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'OK' in member name 'Device.code_OK' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="code" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'code' in member name 'Device.code_OK' by changing it to 'Code'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Device.code_OK'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#drop_detect_OK" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="OK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Device.cs" Line="121">Correct the casing of 'OK' in member name 'Device.drop_detect_OK' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="detect" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Device.cs" Line="121">Correct the casing of 'detect' in member name 'Device.drop_detect_OK' by changing it to 'Detect'.</Issue>
            </Message>
            <Message Id="drop" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Device.cs" Line="121">Correct the casing of 'drop' in member name 'Device.drop_detect_OK' by changing it to 'Drop'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Device.cs" Line="121">Remove the underscores from member name 'Device.drop_detect_OK'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#drop_wait_OK" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="OK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Device.cs" Line="109">Correct the casing of 'OK' in member name 'Device.drop_wait_OK' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="drop" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Device.cs" Line="109">Correct the casing of 'drop' in member name 'Device.drop_wait_OK' by changing it to 'Drop'.</Issue>
            </Message>
            <Message Id="wait" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Device.cs" Line="109">Correct the casing of 'wait' in member name 'Device.drop_wait_OK' by changing it to 'Wait'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Device.cs" Line="109">Remove the underscores from member name 'Device.drop_wait_OK'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#End_Date" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.End_Date' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#endTimeStored" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.endTimeStored' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Error_H_Text" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Device.Error_H_Text'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#H62_Error" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Device.H62_Error'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#H62_error_count_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.H62_error_count_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#H62_error_happened" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'error' in member name 'Device.H62_error_happened' by changing it to 'Error'.</Issue>
            </Message>
            <Message Id="happened" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'happened' in member name 'Device.H62_error_happened' by changing it to 'Happened'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Device.H62_error_happened'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasError" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.HasError' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#headerFirstIsOk" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.headerFirstIsOk' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#headerSecondIsOk" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.headerSecondIsOk' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Homogenity_Is_Valid" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Homogenity' in member name 'Device.Homogenity_Is_Valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Device.Homogenity_Is_Valid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsBatteryShown" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.IsBatteryShown' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsErrorShown" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.IsErrorShown' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsLogging" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.IsLogging' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsLOTReady" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LOT' in member name 'Device.IsLOTReady' by changing it to 'Lot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#isNoteing" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.isNoteing' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Noteing" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Noteing' in member name 'Device.isNoteing' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_count_in_one_roll" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.lot_count_in_one_roll' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LOT_ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'Device.LOT_ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="LOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LOT' in member name 'Device.LOT_ID' by changing it to 'Lot'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Device.LOT_ID'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_is_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.lot_is_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_strip_count_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.lot_strip_count_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MixCheck_MeasureID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.MixCheck_MeasureID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MixCheck_SerialNumber" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.MixCheck_SerialNumber' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Not_H62_error_count_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.Not_H62_error_count_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Not_H62_error_happened" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'error' in member name 'Device.Not_H62_error_happened' by changing it to 'Error'.</Issue>
            </Message>
            <Message Id="happened" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'happened' in member name 'Device.Not_H62_error_happened' by changing it to 'Happened'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Device.Not_H62_error_happened'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NotH62_Error" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Device.NotH62_Error'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Original_MeasureID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.Original_MeasureID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Original_SerialNumber" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.Original_SerialNumber' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PacketIsPreProcessed" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PreProcessed" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'PreProcessed' in member name 'Device.PacketIsPreProcessed' exists as a discrete term. If your usage is intended to be single word, case it as 'Preprocessed' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.PacketIsPreProcessed' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PacketIsReady" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.PacketIsReady' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Panelnames" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Panelnames" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Panelnames' in member name 'Device.Panelnames' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Remeasured" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.Remeasured' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Remeasured" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Remeasured' in member name 'Device.Remeasured' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#rtIsDisabled" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.rtIsDisabled' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="rt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'rt' in member name 'Device.rtIsDisabled' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SNAndRollReaded" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.SNAndRollReaded' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Readed" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Readed' in member name 'Device.SNAndRollReaded' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SNAndRollReadedAndSaved" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.SNAndRollReadedAndSaved' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Readed" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Readed' in member name 'Device.SNAndRollReadedAndSaved' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Start_Date" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.Start_Date' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#startTimeStored" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.startTimeStored' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#strip_in_OK" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="OK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Device.cs" Line="83">Correct the casing of 'OK' in member name 'Device.strip_in_OK' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="in" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Device.cs" Line="83">Correct the casing of 'in' in member name 'Device.strip_in_OK' by changing it to 'In'.</Issue>
            </Message>
            <Message Id="strip" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Device.cs" Line="83">Correct the casing of 'strip' in member name 'Device.strip_in_OK' by changing it to 'Strip'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Device.cs" Line="83">Remove the underscores from member name 'Device.strip_in_OK'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#strip_wait_OK" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="OK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Device.cs" Line="97">Correct the casing of 'OK' in member name 'Device.strip_wait_OK' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="strip" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Device.cs" Line="97">Correct the casing of 'strip' in member name 'Device.strip_wait_OK' by changing it to 'Strip'.</Issue>
            </Message>
            <Message Id="wait" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Device.cs" Line="97">Correct the casing of 'wait' in member name 'Device.strip_wait_OK' by changing it to 'Wait'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Device.cs" Line="97">Remove the underscores from member name 'Device.strip_wait_OK'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stripCount" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="strip" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'strip' in member name 'Device.stripCount' by changing it to 'Strip'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SubRoll_ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'Device.SubRoll_ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Device.SubRoll_ID'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThaCode" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tha' in member name 'Device.ThaCode' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VialID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.VialID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#wrong_step" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Device.wrong_step' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ECommands" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
           <Issue Name="NotFlagsNoZeroValue" Certainty="95" Level="CriticalError">Add a member to 'ECommands' that has a value of zero with a suggested name of 'None'.</Issue>
          </Message>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'ECommands' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#batFlag" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="bat" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'bat' in member name 'ECommands.batFlag' by changing it to 'Bat'.</Issue>
            </Message>
            <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'Flag' in member name 'ECommands.batFlag' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#code" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="code" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'code' in member name 'ECommands.code' by changing it to 'Code'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dropDetect" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="drop" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'drop' in member name 'ECommands.dropDetect' by changing it to 'Drop'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dropWait" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="drop" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'drop' in member name 'ECommands.dropWait' by changing it to 'Drop'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#error_e" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="e" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'e' in member name 'ECommands.error_e' by changing it to 'E'.</Issue>
            </Message>
            <Message Id="error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'error' in member name 'ECommands.error_e' by changing it to 'Error'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ECommands.error_e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#error_h" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'error' in member name 'ECommands.error_h' by changing it to 'Error'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'h' in member name 'ECommands.error_h' by changing it to 'H'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ECommands.error_h'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#meterOff" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="meter" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'meter' in member name 'ECommands.meterOff' by changing it to 'Meter'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stripIn" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="strip" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'strip' in member name 'ECommands.stripIn' by changing it to 'Strip'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stripWait" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="strip" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'strip' in member name 'ECommands.stripWait' by changing it to 'Strip'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#usedStrip" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="used" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'used' in member name 'ECommands.usedStrip' by changing it to 'Used'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HomogenityTest" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Homogenity' in type name 'HomogenityTest'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'Lot_CV' and 'lot_cv' so that they differ by more than case.</Issue>
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'Roll_CV' and 'roll_cv' so that they differ by more than case.</Issue>
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'StripCount' and 'stripcount' so that they differ by more than case.</Issue>
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'TubeCount' and 'tubecount' so that they differ by more than case.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.Double,System.Boolean,System.Double,System.Boolean,System.DateTime,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="averages" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'averages' in parameter name 'lot_averages' by changing it to 'Averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'averages' in parameter name 'lot_averages_is_valid' by changing it to 'Averages'.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'ceve' in parameter name 'lot_ceve' by changing it to 'Ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'ceve' in parameter name 'lot_ceve_is_valid' by changing it to 'Ceve'.</Issue>
            </Message>
            <Message Id="count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'count' in parameter name 'h62_error_count' by changing it to 'Count'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'count' in parameter name 'not_h62_error_count' by changing it to 'Count'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'count' in parameter name 'out_of_range_count' by changing it to 'Count'.</Issue>
            </Message>
            <Message Id="date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'date' in parameter name 'test_date' by changing it to 'Date'.</Issue>
            </Message>
            <Message Id="error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'error' in parameter name 'h62_error_count' by changing it to 'Error'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'error' in parameter name 'not_h62_error_count' by changing it to 'Error'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'h' in parameter name 'not_h62_error_count' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="is" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'is' in parameter name 'lot_averages_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'is' in parameter name 'lot_ceve_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'is' in parameter name 'lot_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'is' in parameter name 'stripCount_is_valid' by changing it to 'Is'.</Issue>
            </Message>
            <Message Id="of" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'of' in parameter name 'out_of_range_count' by changing it to 'Of'.</Issue>
            </Message>
            <Message Id="range" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'range' in parameter name 'out_of_range_count' by changing it to 'Range'.</Issue>
            </Message>
            <Message Id="valid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'valid' in parameter name 'lot_averages_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'valid' in parameter name 'lot_ceve_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'valid' in parameter name 'lot_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the casing of 'valid' in parameter name 'stripCount_is_valid' by changing it to 'Valid'.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In method 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the spelling of 'ceve' in parameter name 'lot_ceve' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In method 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the spelling of 'ceve' in parameter name 'lot_ceve_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In method 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', correct the spelling of 'h' in parameter name 'h62_error_count' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', remove the underscores from parameter name 'h62_error_count'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', remove the underscores from parameter name 'lot_averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', remove the underscores from parameter name 'lot_averages_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', remove the underscores from parameter name 'lot_ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', remove the underscores from parameter name 'lot_ceve_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', remove the underscores from parameter name 'lot_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', remove the underscores from parameter name 'not_h62_error_count'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', remove the underscores from parameter name 'out_of_range_count'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', remove the underscores from parameter name 'stripCount_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="80">In member 'HomogenityTest.HomogenityTest(string, double, bool, double, bool, DateTime, int, int, bool, bool, int, int)', remove the underscores from parameter name 'test_date'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.Double,System.Boolean,System.Double,System.Boolean,System.DateTime,System.Int32,System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="averages" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', correct the casing of 'averages' in parameter name 'roll_averages' by changing it to 'Averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', correct the casing of 'averages' in parameter name 'roll_averages_is_valid' by changing it to 'Averages'.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', correct the casing of 'ceve' in parameter name 'roll_ceve' by changing it to 'Ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', correct the casing of 'ceve' in parameter name 'roll_ceve_is_valid' by changing it to 'Ceve'.</Issue>
            </Message>
            <Message Id="date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', correct the casing of 'date' in parameter name 'test_date' by changing it to 'Date'.</Issue>
            </Message>
            <Message Id="is" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', correct the casing of 'is' in parameter name 'roll_averages_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', correct the casing of 'is' in parameter name 'roll_ceve_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', correct the casing of 'is' in parameter name 'roll_is_valid' by changing it to 'Is'.</Issue>
            </Message>
            <Message Id="stripcount" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', correct the casing of 'stripcount' in parameter name 'outofrange_stripcount' by changing it to 'Stripcount'.</Issue>
            </Message>
            <Message Id="valid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', correct the casing of 'valid' in parameter name 'roll_averages_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', correct the casing of 'valid' in parameter name 'roll_ceve_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', correct the casing of 'valid' in parameter name 'roll_is_valid' by changing it to 'Valid'.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In method 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', correct the spelling of 'ceve' in parameter name 'roll_ceve' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In method 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', correct the spelling of 'ceve' in parameter name 'roll_ceve_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="outofrange" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In method 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', correct the spelling of 'outofrange' in parameter name 'outofrange_stripcount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="stripcount" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In method 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', correct the spelling of 'stripcount' in parameter name 'outofrange_stripcount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', remove the underscores from parameter name 'outofrange_stripcount'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', remove the underscores from parameter name 'roll_averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', remove the underscores from parameter name 'roll_averages_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', remove the underscores from parameter name 'roll_ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', remove the underscores from parameter name 'roll_ceve_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', remove the underscores from parameter name 'roll_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="172">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, double, bool, DateTime, int, int, bool)', remove the underscores from parameter name 'test_date'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.Double,System.Boolean,System.String,System.Double,System.Boolean,System.String,System.Double,System.Boolean,System.String,System.Double,System.Boolean,System.String,System.DateTime,System.Int32,System.Boolean,System.Int32,System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.String,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="averages" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'averages' in parameter name 'lot_averages' by changing it to 'Averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'averages' in parameter name 'lot_averages_is_valid' by changing it to 'Averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'averages' in parameter name 'roll_averages' by changing it to 'Averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'averages' in parameter name 'roll_averages_is_valid' by changing it to 'Averages'.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'avg' in parameter name 'lot_avg_res' by changing it to 'Avg'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'avg' in parameter name 'roll_avg_res' by changing it to 'Avg'.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'ceve' in parameter name 'lot_ceve' by changing it to 'Ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'ceve' in parameter name 'lot_ceve_is_valid' by changing it to 'Ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'ceve' in parameter name 'roll_ceve' by changing it to 'Ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'ceve' in parameter name 'roll_ceve_is_valid' by changing it to 'Ceve'.</Issue>
            </Message>
            <Message Id="count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'count' in parameter name 'h62_error_count' by changing it to 'Count'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'count' in parameter name 'not_h62_error_count' by changing it to 'Count'.</Issue>
            </Message>
            <Message Id="cv" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'cv' in parameter name 'lot_cv_res' by changing it to 'CV'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'cv' in parameter name 'roll_cv_res' by changing it to 'CV'.</Issue>
            </Message>
            <Message Id="date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'date' in parameter name 'test_date' by changing it to 'Date'.</Issue>
            </Message>
            <Message Id="error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'error' in parameter name 'h62_error_count' by changing it to 'Error'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'error' in parameter name 'not_h62_error_count' by changing it to 'Error'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'h' in parameter name 'not_h62_error_count' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="is" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'is' in parameter name 'blank_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'is' in parameter name 'homogenity_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'is' in parameter name 'lot_averages_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'is' in parameter name 'lot_ceve_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'is' in parameter name 'lot_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'is' in parameter name 'outofrange_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'is' in parameter name 'roll_averages_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'is' in parameter name 'roll_ceve_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'is' in parameter name 'roll_is_valid' by changing it to 'Is'.</Issue>
            </Message>
            <Message Id="ok" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'ok' in parameter name 'blank_ok_res' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'ok' in parameter name 'homo_ok_res' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'ok' in parameter name 'lot_ok_res' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'ok' in parameter name 'roll_ok_res' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="res" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'res' in parameter name 'blank_ok_res' by changing it to 'Res'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'res' in parameter name 'homo_ok_res' by changing it to 'Res'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'res' in parameter name 'lot_avg_res' by changing it to 'Res'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'res' in parameter name 'lot_cv_res' by changing it to 'Res'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'res' in parameter name 'lot_ok_res' by changing it to 'Res'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'res' in parameter name 'out_valid_res' by changing it to 'Res'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'res' in parameter name 'roll_avg_res' by changing it to 'Res'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'res' in parameter name 'roll_cv_res' by changing it to 'Res'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'res' in parameter name 'roll_ok_res' by changing it to 'Res'.</Issue>
            </Message>
            <Message Id="stripcount" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'stripcount' in parameter name 'outofrange_stripcount' by changing it to 'Stripcount'.</Issue>
            </Message>
            <Message Id="valid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'valid' in parameter name 'blank_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'valid' in parameter name 'homogenity_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'valid' in parameter name 'lot_averages_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'valid' in parameter name 'lot_ceve_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'valid' in parameter name 'lot_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'valid' in parameter name 'out_valid_res' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'valid' in parameter name 'outofrange_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'valid' in parameter name 'roll_averages_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'valid' in parameter name 'roll_ceve_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'valid' in parameter name 'roll_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the casing of 'valid' in parameter name 'stripCount_valid' by changing it to 'Valid'.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In method 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the spelling of 'avg' in parameter name 'lot_avg_res' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In method 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the spelling of 'avg' in parameter name 'roll_avg_res' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In method 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the spelling of 'ceve' in parameter name 'lot_ceve' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In method 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the spelling of 'ceve' in parameter name 'lot_ceve_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In method 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the spelling of 'ceve' in parameter name 'roll_ceve' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In method 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the spelling of 'ceve' in parameter name 'roll_ceve_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In method 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the spelling of 'h' in parameter name 'h62_error_count' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In method 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the spelling of 'homogenity' in parameter name 'homogenity_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="outofrange" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In method 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the spelling of 'outofrange' in parameter name 'outofrange_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In method 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the spelling of 'outofrange' in parameter name 'outofrange_stripcount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="stripcount" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In method 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', correct the spelling of 'stripcount' in parameter name 'outofrange_stripcount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'blank_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'blank_ok_res'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'h62_error_count'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'homo_ok_res'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'homogenity_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'lot_averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'lot_averages_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'lot_avg_res'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'lot_ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'lot_ceve_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'lot_cv_res'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'lot_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'lot_ok_res'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'not_h62_error_count'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'out_valid_res'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'outofrange_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'outofrange_stripcount'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'roll_averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'roll_averages_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'roll_avg_res'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'roll_ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'roll_ceve_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'roll_cv_res'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'roll_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'roll_ok_res'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'stripCount_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="213">In member 'HomogenityTest.HomogenityTest(string, string, double, bool, string, double, bool, string, double, bool, string, double, bool, string, DateTime, int, bool, int, bool, string, bool, string, bool, string, bool, string, bool, string, int, int)', remove the underscores from parameter name 'test_date'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.Double,System.Double,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="126">In member 'HomogenityTest.HomogenityTest(string, string, string, double, double, DateTime, int, int, int, int, int, double, bool)', correct the casing of 'count' in parameter name 'out_of_range_strip_count' by changing it to 'Count'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="126">In member 'HomogenityTest.HomogenityTest(string, string, string, double, double, DateTime, int, int, int, int, int, double, bool)', correct the casing of 'count' in parameter name 'tube_count' by changing it to 'Count'.</Issue>
            </Message>
            <Message Id="date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="126">In member 'HomogenityTest.HomogenityTest(string, string, string, double, double, DateTime, int, int, int, int, int, double, bool)', correct the casing of 'date' in parameter name 'test_date' by changing it to 'Date'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="126">In member 'HomogenityTest.HomogenityTest(string, string, string, double, double, DateTime, int, int, int, int, int, double, bool)', correct the casing of 'h' in parameter name 'not_h62' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="of" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="126">In member 'HomogenityTest.HomogenityTest(string, string, string, double, double, DateTime, int, int, int, int, int, double, bool)', correct the casing of 'of' in parameter name 'out_of_range_strip_count' by changing it to 'Of'.</Issue>
            </Message>
            <Message Id="range" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="126">In member 'HomogenityTest.HomogenityTest(string, string, string, double, double, DateTime, int, int, int, int, int, double, bool)', correct the casing of 'range' in parameter name 'out_of_range_strip_count' by changing it to 'Range'.</Issue>
            </Message>
            <Message Id="strip" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="126">In member 'HomogenityTest.HomogenityTest(string, string, string, double, double, DateTime, int, int, int, int, int, double, bool)', correct the casing of 'strip' in parameter name 'out_of_range_strip_count' by changing it to 'Strip'.</Issue>
            </Message>
            <Message Id="valid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="126">In member 'HomogenityTest.HomogenityTest(string, string, string, double, double, DateTime, int, int, int, int, int, double, bool)', correct the casing of 'valid' in parameter name 'is_valid' by changing it to 'Valid'.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="126">In method 'HomogenityTest.HomogenityTest(string, string, string, double, double, DateTime, int, int, int, int, int, double, bool)', correct the spelling of 'ceve' in parameter name 'ceve' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="126">In method 'HomogenityTest.HomogenityTest(string, string, string, double, double, DateTime, int, int, int, int, int, double, bool)', correct the spelling of 'h' in parameter name 'h62' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="r" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="126">In method 'HomogenityTest.HomogenityTest(string, string, string, double, double, DateTime, int, int, int, int, int, double, bool)', consider providing a more meaningful name than parameter name 'r'.</Issue>
            </Message>
            <Message Id="stddev" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="126">In method 'HomogenityTest.HomogenityTest(string, string, string, double, double, DateTime, int, int, int, int, int, double, bool)', correct the spelling of 'stddev' in parameter name 'stddev' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="126">In member 'HomogenityTest.HomogenityTest(string, string, string, double, double, DateTime, int, int, int, int, int, double, bool)', remove the underscores from parameter name 'is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="126">In member 'HomogenityTest.HomogenityTest(string, string, string, double, double, DateTime, int, int, int, int, int, double, bool)', remove the underscores from parameter name 'not_h62'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="126">In member 'HomogenityTest.HomogenityTest(string, string, string, double, double, DateTime, int, int, int, int, int, double, bool)', remove the underscores from parameter name 'out_of_range_strip_count'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="126">In member 'HomogenityTest.HomogenityTest(string, string, string, double, double, DateTime, int, int, int, int, int, double, bool)', remove the underscores from parameter name 'test_date'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="126">In member 'HomogenityTest.HomogenityTest(string, string, string, double, double, DateTime, int, int, int, int, int, double, bool)', remove the underscores from parameter name 'tube_count'.</Issue>
            </Message>
            <Message Id="stddev" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="126">Parameter 'stddev' of 'HomogenityTest.HomogenityTest(string, string, string, double, double, DateTime, int, int, int, int, int, double, bool)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BlankIsValidRes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="595">The 'this' parameter (or 'Me' in Visual Basic) of 'HomogenityTest.BlankIsValidRes' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#cellColor" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'HomogenityTest.cellColor' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CV_IsValid" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="570">Remove the underscores from member name 'HomogenityTest.CV_IsValid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#h_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.h_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'HomogenityTest.h_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#h_cv" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.h_cv' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#h62_error" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.h62_error' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#h62_is_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.h62_is_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#h62errorscount" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="errorscount" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="313">Correct the casing of 'errorscount' in member name 'HomogenityTest.h62errorscount' by changing it to 'Errorscount'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="313">Correct the casing of 'h' in member name 'HomogenityTest.h62errorscount' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="errorscount" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="313">Correct the spelling of 'errorscount' in member name 'HomogenityTest.h62errorscount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HCV" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="HCV" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="302">Correct the casing of 'HCV' in member name 'HomogenityTest.HCV' by changing it to 'Hcv'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HomogenityIsValid" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="617">Correct the spelling of 'Homogenity' in member name 'HomogenityTest.HomogenityIsValid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HomogenityIsValidRes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="606">Correct the spelling of 'Homogenity' in member name 'HomogenityTest.HomogenityIsValidRes' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="606">The 'this' parameter (or 'Me' in Visual Basic) of 'HomogenityTest.HomogenityIsValidRes' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Lot_Averages" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="399">Remove the underscores from member name 'HomogenityTest.Lot_Averages'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Lot_Averages_IsValid" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="449">Remove the underscores from member name 'HomogenityTest.Lot_Averages_IsValid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.lot_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'HomogenityTest.lot_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_avg_is_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.lot_avg_is_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'HomogenityTest.lot_avg_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Lot_AVG_IsValid_Res" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AVG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="463">Correct the casing of 'AVG' in member name 'HomogenityTest.Lot_AVG_IsValid_Res' by changing it to 'Avg'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="463">Remove the underscores from member name 'HomogenityTest.Lot_AVG_IsValid_Res'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="463">The 'this' parameter (or 'Me' in Visual Basic) of 'HomogenityTest.Lot_AVG_IsValid_Res' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_avg_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.lot_avg_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'HomogenityTest.lot_avg_ok' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_complete_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.lot_complete_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_cv" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.lot_cv' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Lot_CV" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="438">Remove the underscores from member name 'HomogenityTest.Lot_CV'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_cv_is_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.lot_cv_is_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_cv_is_valid_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.lot_cv_is_valid_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Lot_CV_IsValid" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="496">Remove the underscores from member name 'HomogenityTest.Lot_CV_IsValid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Lot_CV_IsValid_Res" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="485">Remove the underscores from member name 'HomogenityTest.Lot_CV_IsValid_Res'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="485">The 'this' parameter (or 'Me' in Visual Basic) of 'HomogenityTest.Lot_CV_IsValid_Res' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_cv_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.lot_cv_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Lot_h62_Count" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="427">Correct the casing of 'h' in member name 'HomogenityTest.Lot_h62_Count' by changing it to 'H'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="427">Remove the underscores from member name 'HomogenityTest.Lot_h62_Count'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Lot_not_h62_Count" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="416">Correct the casing of 'h' in member name 'HomogenityTest.Lot_not_h62_Count' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="not" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="416">Correct the casing of 'not' in member name 'HomogenityTest.Lot_not_h62_Count' by changing it to 'Not'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="416">Remove the underscores from member name 'HomogenityTest.Lot_not_h62_Count'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.lot_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_out_of_range_stripcount" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.lot_out_of_range_stripcount' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="stripcount" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'stripcount' in member name 'HomogenityTest.lot_out_of_range_stripcount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Lot_Result_is_Valid" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="is" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="380">Correct the casing of 'is' in member name 'HomogenityTest.Lot_Result_is_Valid' by changing it to 'Is'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="380">Remove the underscores from member name 'HomogenityTest.Lot_Result_is_Valid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_strip_count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.lot_strip_count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_strip_count_is_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.lot_strip_count_is_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_stripcount_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.lot_stripcount_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="stripcount" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'stripcount' in member name 'HomogenityTest.lot_stripcount_ok' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.lot_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LotAverages_IsValid" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="474">Remove the underscores from member name 'HomogenityTest.LotAverages_IsValid'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="474">The 'this' parameter (or 'Me' in Visual Basic) of 'HomogenityTest.LotAverages_IsValid' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LotID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="857">Correct the casing of 'ID' in member name 'HomogenityTest.LotID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LotStripCountIsValidRes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="710">The 'this' parameter (or 'Me' in Visual Basic) of 'HomogenityTest.LotStripCountIsValidRes' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#not_h62_error" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.not_h62_error' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#not_h62_is_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.not_h62_is_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#noth62errorscount" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="errorscount" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="324">Correct the casing of 'errorscount' in member name 'HomogenityTest.noth62errorscount' by changing it to 'Errorscount'.</Issue>
            </Message>
            <Message Id="noth" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="324">Correct the casing of 'noth' in member name 'HomogenityTest.noth62errorscount' by changing it to 'Noth'.</Issue>
            </Message>
            <Message Id="errorscount" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="324">Correct the spelling of 'errorscount' in member name 'HomogenityTest.noth62errorscount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="noth" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="324">Correct the spelling of 'noth' in member name 'HomogenityTest.noth62errorscount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#out_of_range_stripcount" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.out_of_range_stripcount' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="stripcount" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'stripcount' in member name 'HomogenityTest.out_of_range_stripcount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#out_of_range_stripcount_is_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.out_of_range_stripcount_is_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="stripcount" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'stripcount' in member name 'HomogenityTest.out_of_range_stripcount_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OutOfRangeStripCountIsValidRes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="698">The 'this' parameter (or 'Me' in Visual Basic) of 'HomogenityTest.OutOfRangeStripCountIsValidRes' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Roll_Averages" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="335">Remove the underscores from member name 'HomogenityTest.Roll_Averages'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Roll_Averages_IsValid" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="515">Remove the underscores from member name 'HomogenityTest.Roll_Averages_IsValid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.roll_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'HomogenityTest.roll_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_avg_is_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.roll_avg_is_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'HomogenityTest.roll_avg_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Roll_AVG_IsValid_Res" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AVG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="529">Correct the casing of 'AVG' in member name 'HomogenityTest.Roll_AVG_IsValid_Res' by changing it to 'Avg'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="529">Remove the underscores from member name 'HomogenityTest.Roll_AVG_IsValid_Res'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="529">The 'this' parameter (or 'Me' in Visual Basic) of 'HomogenityTest.Roll_AVG_IsValid_Res' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_avg_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.roll_avg_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'HomogenityTest.roll_avg_ok' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_cv" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.roll_cv' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Roll_CV" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="346">Remove the underscores from member name 'HomogenityTest.Roll_CV'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_cv_is_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.roll_cv_is_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Roll_CV_IsValid" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="552">Remove the underscores from member name 'HomogenityTest.Roll_CV_IsValid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Roll_CV_IsValid_Res" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="540">Remove the underscores from member name 'HomogenityTest.Roll_CV_IsValid_Res'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="540">The 'this' parameter (or 'Me' in Visual Basic) of 'HomogenityTest.Roll_CV_IsValid_Res' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_cv_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.roll_cv_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_is_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.roll_is_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.roll_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RollID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="846">Correct the casing of 'ID' in member name 'HomogenityTest.RollID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stripcount" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.stripcount' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="stripcount" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'stripcount' in member name 'HomogenityTest.stripcount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stripcount_is_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.stripcount_is_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="stripcount" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'stripcount' in member name 'HomogenityTest.stripcount_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StripCountIsValidRes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="HomogenityTest.cs" Line="664">The 'this' parameter (or 'Me' in Visual Basic) of 'HomogenityTest.StripCountIsValidRes' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tubecount" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTest.tubecount' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="tubecount" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'tubecount' in member name 'HomogenityTest.tubecount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#dynamicTableLayoutPanel" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.dynamicTableLayoutPanel' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#frm_FormClosed(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="MainWindow.cs" Line="39">In method 'MainWindow.frm_FormClosed(object, EventArgs)', call System.IDisposable.Dispose on object 'port' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="frm" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="MainWindow.cs" Line="36">Correct the casing of 'frm' in member name 'MainWindow.frm_FormClosed(object, EventArgs)' by changing it to 'Frm'.</Issue>
            </Message>
            <Message Id="frm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="MainWindow.cs" Line="36">Correct the spelling of 'frm' in member name 'MainWindow.frm_FormClosed(object, EventArgs)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="MainWindow.cs" Line="36">Remove the underscores from member name 'MainWindow.frm_FormClosed(object, EventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="MainWindow.Designer.cs" Line="39">Method 'MainWindow.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "MainWindow".</Issue>
            </Message>
            <Message Id="MainWindow" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="MainWindow.Designer.cs" Line="39">Correct the spelling of the unrecognized token 'MainWindow' in the literal '"MainWindow"'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MessageCompletedEventArgs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'MessageCompletedEventArgs' because it creates members of the following IDisposable types: 'Label', 'AccuracyFinishedResultView', 'BlankFinishedResultsView', 'HomogenityResultsView'. If 'MessageCompletedEventArgs' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Byte[],WinFormBlankTest.DetailedPanel,WinFormBlankTest.UserPanel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="54">'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' has a cyclomatic complexity of 63. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="54">'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' has a maintainability index of 10. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="920">Method 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Nem megfelelő kóddugó, a Blank Current vizsgálathoz 170-es kóddugót használjon!".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="914">Method 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Nem megfelelő kóddugó, a Homogenity vizsgálathoz 777-es kóddugót használjon!".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="932">Method 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Nem megfelelő kóddugó, a meo készülék vizsgálathoz 772-es kóddugót használjon!".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="926">Method 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Nem megfelelő kóddugó, az accuracy vizsgálathoz 777-es kóddugót használjon!".</Issue>
            </Message>
            <Message Id="WinFormBlankTest.CheckError" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="599">'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' creates a new instance of 'CheckError' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="54">In member 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)', remove the underscores from parameter name '_userPanel'.</Issue>
            </Message>
            <Message Id="Homogenity" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="914">Correct the spelling of the unrecognized token 'Homogenity' in the literal '"Nem megfelelő kóddugó, a Homogenity vizsgálathoz 777-es kóddugót használjon!"'.</Issue>
            </Message>
            <Message Id="Nem" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="920">Correct the spelling of the unrecognized token 'Nem' in the literal '"Nem megfelelő kóddugó, a Blank Current vizsgálathoz 170-es kóddugót használjon!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="914">Correct the spelling of the unrecognized token 'Nem' in the literal '"Nem megfelelő kóddugó, a Homogenity vizsgálathoz 777-es kóddugót használjon!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="932">Correct the spelling of the unrecognized token 'Nem' in the literal '"Nem megfelelő kóddugó, a meo készülék vizsgálathoz 772-es kóddugót használjon!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="926">Correct the spelling of the unrecognized token 'Nem' in the literal '"Nem megfelelő kóddugó, az accuracy vizsgálathoz 777-es kóddugót használjon!"'.</Issue>
            </Message>
            <Message Id="az" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="926">Correct the spelling of the unrecognized token 'az' in the literal '"Nem megfelelő kóddugó, az accuracy vizsgálathoz 777-es kóddugót használjon!"'.</Issue>
            </Message>
            <Message Id="használjon" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="920">Correct the spelling of the unrecognized token 'használjon' in the literal '"Nem megfelelő kóddugó, a Blank Current vizsgálathoz 170-es kóddugót használjon!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="914">Correct the spelling of the unrecognized token 'használjon' in the literal '"Nem megfelelő kóddugó, a Homogenity vizsgálathoz 777-es kóddugót használjon!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="932">Correct the spelling of the unrecognized token 'használjon' in the literal '"Nem megfelelő kóddugó, a meo készülék vizsgálathoz 772-es kóddugót használjon!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="926">Correct the spelling of the unrecognized token 'használjon' in the literal '"Nem megfelelő kóddugó, az accuracy vizsgálathoz 777-es kóddugót használjon!"'.</Issue>
            </Message>
            <Message Id="készülék" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="932">Correct the spelling of the unrecognized token 'készülék' in the literal '"Nem megfelelő kóddugó, a meo készülék vizsgálathoz 772-es kóddugót használjon!"'.</Issue>
            </Message>
            <Message Id="kóddugó" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="920">Correct the spelling of the unrecognized token 'kóddugó' in the literal '"Nem megfelelő kóddugó, a Blank Current vizsgálathoz 170-es kóddugót használjon!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="914">Correct the spelling of the unrecognized token 'kóddugó' in the literal '"Nem megfelelő kóddugó, a Homogenity vizsgálathoz 777-es kóddugót használjon!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="932">Correct the spelling of the unrecognized token 'kóddugó' in the literal '"Nem megfelelő kóddugó, a meo készülék vizsgálathoz 772-es kóddugót használjon!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="926">Correct the spelling of the unrecognized token 'kóddugó' in the literal '"Nem megfelelő kóddugó, az accuracy vizsgálathoz 777-es kóddugót használjon!"'.</Issue>
            </Message>
            <Message Id="kóddugót" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="920">Correct the spelling of the unrecognized token 'kóddugót' in the literal '"Nem megfelelő kóddugó, a Blank Current vizsgálathoz 170-es kóddugót használjon!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="914">Correct the spelling of the unrecognized token 'kóddugót' in the literal '"Nem megfelelő kóddugó, a Homogenity vizsgálathoz 777-es kóddugót használjon!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="932">Correct the spelling of the unrecognized token 'kóddugót' in the literal '"Nem megfelelő kóddugó, a meo készülék vizsgálathoz 772-es kóddugót használjon!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="926">Correct the spelling of the unrecognized token 'kóddugót' in the literal '"Nem megfelelő kóddugó, az accuracy vizsgálathoz 777-es kóddugót használjon!"'.</Issue>
            </Message>
            <Message Id="megfelelő" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="920">Correct the spelling of the unrecognized token 'megfelelő' in the literal '"Nem megfelelő kóddugó, a Blank Current vizsgálathoz 170-es kóddugót használjon!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="914">Correct the spelling of the unrecognized token 'megfelelő' in the literal '"Nem megfelelő kóddugó, a Homogenity vizsgálathoz 777-es kóddugót használjon!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="932">Correct the spelling of the unrecognized token 'megfelelő' in the literal '"Nem megfelelő kóddugó, a meo készülék vizsgálathoz 772-es kóddugót használjon!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="926">Correct the spelling of the unrecognized token 'megfelelő' in the literal '"Nem megfelelő kóddugó, az accuracy vizsgálathoz 777-es kóddugót használjon!"'.</Issue>
            </Message>
            <Message Id="meo" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="932">Correct the spelling of the unrecognized token 'meo' in the literal '"Nem megfelelő kóddugó, a meo készülék vizsgálathoz 772-es kóddugót használjon!"'.</Issue>
            </Message>
            <Message Id="vizsgálathoz" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="920">Correct the spelling of the unrecognized token 'vizsgálathoz' in the literal '"Nem megfelelő kóddugó, a Blank Current vizsgálathoz 170-es kóddugót használjon!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="914">Correct the spelling of the unrecognized token 'vizsgálathoz' in the literal '"Nem megfelelő kóddugó, a Homogenity vizsgálathoz 777-es kóddugót használjon!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="932">Correct the spelling of the unrecognized token 'vizsgálathoz' in the literal '"Nem megfelelő kóddugó, a meo készülék vizsgálathoz 772-es kóddugót használjon!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="926">Correct the spelling of the unrecognized token 'vizsgálathoz' in the literal '"Nem megfelelő kóddugó, az accuracy vizsgálathoz 777-es kóddugót használjon!"'.</Issue>
            </Message>
            <Message TypeName="Provide correct arguments to formatting methods" Category="Microsoft.Usage" CheckId="CA2241" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="594">Method 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' calls 'string.Format(string, object, object, object)' and does not provide a format item for argument "1". The provided format string is: '"{2}Error_h:{1}{2}"'</Issue>
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="618">Method 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' calls 'string.Format(string, object, object, object)' and does not provide a format item for argument "2". The provided format string is: '"{2}Error_e:{0}{2}"'</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="520">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="562">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="589">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="592">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="671">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="687">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="690">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="692">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="693">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="719">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="731">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="732">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="755">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="770">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="773">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="774">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="796">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="797">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="812">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="815">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="816">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="854">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="859">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="890">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="897">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="938">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="939">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="947">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="565">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="615">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="623">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="829">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="858">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="877">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="878">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="889">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="942">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="518">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="534">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="540">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="594">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="618">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="666">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="716">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="751">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="794">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="837">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="750">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="753">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="914">Change 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="920">Change 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="926">Change 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="932">Change 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="597">Replace the call to 'string.operator ==(string, string)' in 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)', validate parameter 'receivedData' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="396">In externally visible method 'MessageCompletedEventArgs.MessageCompletedEventArgs(byte[], DetailedPanel, UserPanel)', validate parameter 'actForm' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_accuracyChild" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs._accuracyChild' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#accuracy_lot_accuracy" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.accuracy_lot_accuracy' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#accuracy_lot_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.accuracy_lot_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'MessageCompletedEventArgs.accuracy_lot_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#accuracy_lot_cv" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.accuracy_lot_cv' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#accuracy_lot_sd" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.accuracy_lot_sd' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sd' in member name 'MessageCompletedEventArgs.accuracy_lot_sd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ACCURACY_STRIPCOUNT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ACCURACY" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ACCURACY' in member name 'MessageCompletedEventArgs.ACCURACY_STRIPCOUNT' by changing it to 'Accuracy'.</Issue>
            </Message>
            <Message Id="STRIPCOUNT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STRIPCOUNT' in member name 'MessageCompletedEventArgs.ACCURACY_STRIPCOUNT' by changing it to 'Stripcount'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'MessageCompletedEventArgs.ACCURACY_STRIPCOUNT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AccuracyMeasuredStripCountInARound" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'MessageCompletedEventArgs.AccuracyMeasuredStripCountInARound' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#accuracyOutCount" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.accuracyOutCount' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#accuracyOutPercent" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.accuracyOutPercent' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#accuracyStripCount" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.accuracyStripCount' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AppendingWhenInvoked(System.String,System.Drawing.Color,System.Windows.Forms.Control)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1140">'c', a parameter, is cast to type 'RichTextBox' multiple times in method 'MessageCompletedEventArgs.AppendingWhenInvoked(string, Color, Control)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1141">'c', a parameter, is cast to type 'RichTextBox' multiple times in method 'MessageCompletedEventArgs.AppendingWhenInvoked(string, Color, Control)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1142">'c', a parameter, is cast to type 'RichTextBox' multiple times in method 'MessageCompletedEventArgs.AppendingWhenInvoked(string, Color, Control)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1143">'c', a parameter, is cast to type 'RichTextBox' multiple times in method 'MessageCompletedEventArgs.AppendingWhenInvoked(string, Color, Control)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1144">'c', a parameter, is cast to type 'RichTextBox' multiple times in method 'MessageCompletedEventArgs.AppendingWhenInvoked(string, Color, Control)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="c" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1138">In method 'MessageCompletedEventArgs.AppendingWhenInvoked(string, Color, Control)', consider providing a more meaningful name than parameter name 'c'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AppendTextInBox(System.String,System.Windows.Forms.Panel,System.Drawing.Color)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="InBox" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="321">The compound word 'InBox' in member name 'MessageCompletedEventArgs.AppendTextInBox(string, Panel, Color)' exists as a discrete term. If your usage is intended to be single word, case it as 'Inbox' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="322">In externally visible method 'MessageCompletedEventArgs.AppendTextInBox(string, Panel, Color)', validate parameter 'myForm' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AppendTextToUser(System.String,System.Windows.Forms.Panel,System.Drawing.Color)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="241">In method 'MessageCompletedEventArgs.AppendTextToUser(string, Panel, Color)', call System.IDisposable.Dispose on object 'current' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="245">'c', a variable, is cast to type 'RichTextBox' multiple times in method 'MessageCompletedEventArgs.AppendTextToUser(string, Panel, Color)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="242">In externally visible method 'MessageCompletedEventArgs.AppendTextToUser(string, Panel, Color)', validate parameter 'myForm' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AskBatteryChange(System.String,System.String,System.Windows.Forms.Panel,System.Windows.Forms.Panel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1154">Method 'MessageCompletedEventArgs.AskBatteryChange(string, string, Panel, Panel)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Cseréljen elemet a ,  porton, majd kattintson az OK gombra!".</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1149">In member 'MessageCompletedEventArgs.AskBatteryChange(string, string, Panel, Panel)', remove the underscores from parameter name '_port'.</Issue>
            </Message>
            <Message Id="Cseréljen" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1154">Correct the spelling of the unrecognized token 'Cseréljen' in the literal '"Cseréljen elemet a "'.</Issue>
            </Message>
            <Message Id="az" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1154">Correct the spelling of the unrecognized token 'az' in the literal '" porton, majd kattintson az OK gombra!"'.</Issue>
            </Message>
            <Message Id="elemet" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1154">Correct the spelling of the unrecognized token 'elemet' in the literal '"Cseréljen elemet a "'.</Issue>
            </Message>
            <Message Id="gombra" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1154">Correct the spelling of the unrecognized token 'gombra' in the literal '" porton, majd kattintson az OK gombra!"'.</Issue>
            </Message>
            <Message Id="kattintson" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1154">Correct the spelling of the unrecognized token 'kattintson' in the literal '" porton, majd kattintson az OK gombra!"'.</Issue>
            </Message>
            <Message Id="majd" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1154">Correct the spelling of the unrecognized token 'majd' in the literal '" porton, majd kattintson az OK gombra!"'.</Issue>
            </Message>
            <Message Id="porton" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1154">Correct the spelling of the unrecognized token 'porton' in the literal '" porton, majd kattintson az OK gombra!"'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1154">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.AskBatteryChange(string, string, Panel, Panel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1159">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.AskBatteryChange(string, string, Panel, Panel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1154">Change 'MessageCompletedEventArgs.AskBatteryChange(string, string, Panel, Panel)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#battery_label" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.battery_label' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bias_glu" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.bias_glu' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'MessageCompletedEventArgs.bias_glu' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="glu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glu' in member name 'MessageCompletedEventArgs.bias_glu' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bias_glu_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.bias_glu_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'MessageCompletedEventArgs.bias_glu_id' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="glu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glu' in member name 'MessageCompletedEventArgs.bias_glu_id' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bias_value" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.bias_value' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#blood_vial_id" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MessageCompletedEventArgs.blood_vial_id' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CalculateAccuracyLotValues(System.String,System.String,System.Double,System.Double,System.Double)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2919">Object 'accLotconn' can be disposed more than once in method 'MessageCompletedEventArgs.CalculateAccuracyLotValues(string, string, double, double, double)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2919</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2884">Object 'dr' can be disposed more than once in method 'MessageCompletedEventArgs.CalculateAccuracyLotValues(string, string, double, double, double)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2884</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2912">Modify 'MessageCompletedEventArgs.CalculateAccuracyLotValues(string, string, double, double, double)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2866">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.CalculateAccuracyLotValues(string, string, double, double, double)' could contain the following variables 'ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2846">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.CalculateAccuracyLotValues(string, string, double, double, double)' could contain the following variables 'lot_id', 'Convert.ToString(i)'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="centralAverages" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2833">Parameter 'centralAverages' of 'MessageCompletedEventArgs.CalculateAccuracyLotValues(string, string, double, double, double)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="centralCv" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2833">Parameter 'centralCv' of 'MessageCompletedEventArgs.CalculateAccuracyLotValues(string, string, double, double, double)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="centralStddev" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2833">Parameter 'centralStddev' of 'MessageCompletedEventArgs.CalculateAccuracyLotValues(string, string, double, double, double)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="master_lot_id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2833">Parameter 'master_lot_id' of 'MessageCompletedEventArgs.CalculateAccuracyLotValues(string, string, double, double, double)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2877">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CalculateAccuracyLotValues(string, string, double, double, double)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2858">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CalculateAccuracyLotValues(string, string, double, double, double)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Int32)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2846">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CalculateAccuracyLotValues(string, string, double, double, double)' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2866">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CalculateAccuracyLotValues(string, string, double, double, double)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2846">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CalculateAccuracyLotValues(string, string, double, double, double)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Calculated_MeasureID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.Calculated_MeasureID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Calculated_SerialNumber" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.Calculated_SerialNumber' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#calculatedCheckSum" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CheckSum" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'CheckSum' in member name 'MessageCompletedEventArgs.calculatedCheckSum' exists as a discrete term. If your usage is intended to be single word, case it as 'Checksum' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.calculatedCheckSum' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CalculateOutLiers(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2669">Object 'conn' can be disposed more than once in method 'MessageCompletedEventArgs.CalculateOutLiers(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2669</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2665">'MessageCompletedEventArgs.CalculateOutLiers(string)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2647">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.CalculateOutLiers(string)' could contain the following variables 'lotid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2658">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CalculateOutLiers(string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2647">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CalculateOutLiers(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="lotid" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2641">'lotid', a parameter declared in 'MessageCompletedEventArgs.CalculateOutLiers(string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#central_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.central_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'MessageCompletedEventArgs.central_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#central_bias" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.central_bias' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#central_cv" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.central_cv' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#central_stddev" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.central_stddev' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="stddev" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'stddev' in member name 'MessageCompletedEventArgs.central_stddev' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CENTRAL_STRIPCOUNT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CENTRAL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CENTRAL' in member name 'MessageCompletedEventArgs.CENTRAL_STRIPCOUNT' by changing it to 'Central'.</Issue>
            </Message>
            <Message Id="STRIPCOUNT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STRIPCOUNT' in member name 'MessageCompletedEventArgs.CENTRAL_STRIPCOUNT' by changing it to 'Stripcount'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'MessageCompletedEventArgs.CENTRAL_STRIPCOUNT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChangeText(System.String,System.Windows.Forms.Panel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="264">In method 'MessageCompletedEventArgs.ChangeText(string, Panel)', call System.IDisposable.Dispose on object 'current' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="267">'c', a variable, is cast to type 'RichTextBox' multiple times in method 'MessageCompletedEventArgs.ChangeText(string, Panel)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="271">'myForm', a parameter, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.ChangeText(string, Panel)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="265">In externally visible method 'MessageCompletedEventArgs.ChangeText(string, Panel)', validate parameter 'myForm' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckDeviceMeasureability()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="995">'MessageCompletedEventArgs.CheckDeviceMeasureability()' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1012">Method 'MessageCompletedEventArgs.CheckDeviceMeasureability()' passes 'Nincs MEO mérés az elmúlt 24 órában' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1006">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckDeviceMeasureability()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckHomogenityIsValid()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3434">'MessageCompletedEventArgs.CheckHomogenityIsValid()' has a cyclomatic complexity of 111. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3434">'MessageCompletedEventArgs.CheckHomogenityIsValid()' has a maintainability index of 6. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3991">Object 'homogenity_connection' can be disposed more than once in method 'MessageCompletedEventArgs.CheckHomogenityIsValid()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3991</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3964">Method 'MessageCompletedEventArgs.CheckHomogenityIsValid()' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "A ,  számú roll lemérve a ,  számú LOT-ból".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3970">Method 'MessageCompletedEventArgs.CheckHomogenityIsValid()' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "A ,  számú roll már le van mérve a ,  számú LOT-ból".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3984">Modify 'MessageCompletedEventArgs.CheckHomogenityIsValid()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="StringCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3449">'MessageCompletedEventArgs.CheckHomogenityIsValid()' calls 'string.Format(string, object)' but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="StringCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3451">'MessageCompletedEventArgs.CheckHomogenityIsValid()' calls 'string.Format(string, object, object)' but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Issue>
             <Issue Name="StringCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3452">'MessageCompletedEventArgs.CheckHomogenityIsValid()' calls 'string.Format(string, object, object)' but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3473">Method 'MessageCompletedEventArgs.CheckHomogenityIsValid()' passes 'Avg is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3501">Method 'MessageCompletedEventArgs.CheckHomogenityIsValid()' passes 'error_count is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3512">Method 'MessageCompletedEventArgs.CheckHomogenityIsValid()' passes 'error_count is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3539">Method 'MessageCompletedEventArgs.CheckHomogenityIsValid()' passes 'identify_id is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3556">Method 'MessageCompletedEventArgs.CheckHomogenityIsValid()' passes 'wrong_strip_count is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3569">Method 'MessageCompletedEventArgs.CheckHomogenityIsValid()' passes 'wrong_strip_count is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message Id="LOT-ból" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3964">Correct the spelling of the unrecognized token 'LOT-ból' in the literal '" számú LOT-ból"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3970">Correct the spelling of the unrecognized token 'LOT-ból' in the literal '" számú LOT-ból"'.</Issue>
            </Message>
            <Message Id="lemérve" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3964">Correct the spelling of the unrecognized token 'lemérve' in the literal '" számú roll lemérve a "'.</Issue>
            </Message>
            <Message Id="már" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3970">Correct the spelling of the unrecognized token 'már' in the literal '" számú roll már le van mérve a "'.</Issue>
            </Message>
            <Message Id="mérve" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3970">Correct the spelling of the unrecognized token 'mérve' in the literal '" számú roll már le van mérve a "'.</Issue>
            </Message>
            <Message Id="számú" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3964">Correct the spelling of the unrecognized token 'számú' in the literal '" számú LOT-ból"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3970">Correct the spelling of the unrecognized token 'számú' in the literal '" számú LOT-ból"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3964">Correct the spelling of the unrecognized token 'számú' in the literal '" számú roll lemérve a "'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3970">Correct the spelling of the unrecognized token 'számú' in the literal '" számú roll már le van mérve a "'.</Issue>
            </Message>
            <Message TypeName="Provide correct arguments to formatting methods" Category="Microsoft.Usage" CheckId="CA2241" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3917">Method 'MessageCompletedEventArgs.CheckHomogenityIsValid()' calls 'string.Format(string, object, object)' and does not provide a format item for argument "2". The provided format string is: '"SELECT AVG(blank_test_result.glu) FROM homogenity_test LEFT JOIN blank_test_resu..."'</Issue>
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3928">Method 'MessageCompletedEventArgs.CheckHomogenityIsValid()' calls 'string.Format(string, object, object)' and does not provide a format item for argument "2". The provided format string is: '"SELECT STDDEV(blank_test_result.glu) FROM homogenity_test LEFT JOIN blank_test_r..."'</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3917">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' could contain the following variables 'Program.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3928">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' could contain the following variables 'Program.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3547">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' could contain the following variables 'this.Users_Form.dev.LOT_ID', 'this.Users_Form.dev.Roll'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3560">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' could contain the following variables 'this.Users_Form.dev.LOT_ID', 'this.Users_Form.dev.Roll'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3530">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' could contain the following variables 'this.Users_Form.dev.Roll'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3463">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' could contain the following variables 'this.Users_Form.dev.Roll', 'Program.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3476">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' could contain the following variables 'this.Users_Form.dev.Roll', 'Program.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3492">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' could contain the following variables 'this.Users_Form.dev.Roll', 'Program.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3504">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' could contain the following variables 'this.Users_Form.dev.Roll', 'this.Users_Form.dev.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3947">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' could contain the following variables 'this.Users_Form.dev.Roll', 'this.Users_Form.dev.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3519">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' could contain the following variables 'this.stipCount_part1'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3523">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' could contain the following variables 'this.stipCount_part2'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3488">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3488">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3527">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3527">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3574">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3574">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3580">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3580">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3587">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3587">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3591">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3598">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3612">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3612">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3616">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3623">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3637">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3637">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3641">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3648">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3662">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3662">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3666">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3673">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3687">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3687">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3691">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3698">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3712">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3712">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3716">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3723">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3737">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3737">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3741">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3748">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3762">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3762">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3766">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3773">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3787">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3787">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3791">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3798">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3812">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3812">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3816">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3823">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3837">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3837">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3841">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3848">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3862">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3862">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3866">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3873">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3888">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3888">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3892">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3899">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3954">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3449">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3472">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3530">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3924">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3935">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3962">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3963">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3451">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3452">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3463">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3476">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3492">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3504">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3547">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3560">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3917">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3928">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3947">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3964">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3970">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckHomogenityIsValid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3964">Change 'MessageCompletedEventArgs.CheckHomogenityIsValid()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3970">Change 'MessageCompletedEventArgs.CheckHomogenityIsValid()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message Id="command" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3434">'command', a variable declared in 'MessageCompletedEventArgs.CheckHomogenityIsValid()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckMeasureIdAndSerial()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1222">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckMeasureIdAndSerial()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1239">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckMeasureIdAndSerial()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckMeoIsDone()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1101">Object 'connection' can be disposed more than once in method 'MessageCompletedEventArgs.CheckMeoIsDone()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1101</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1093">Modify 'MessageCompletedEventArgs.CheckMeoIsDone()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="Meo" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1062">Correct the spelling of 'Meo' in member name 'MessageCompletedEventArgs.CheckMeoIsDone()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="Provide correct arguments to formatting methods" Category="Microsoft.Usage" CheckId="CA2241" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1071">Method 'MessageCompletedEventArgs.CheckMeoIsDone()' calls 'string.Format(string, object, object)' and does not provide a format item for argument "1". The provided format string is: '"select Max(date) from device_meo where ok=True and serial_number={1} limit 1"'</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1071">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.CheckMeoIsDone()' could contain the following variables 'this.ThePanel.TheDevice.Original_SerialNumber'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1083">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckMeoIsDone()' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1071">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckMeoIsDone()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1095">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckMeoIsDone()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1071">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.CheckMeoIsDone()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckStripValue(System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="glu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4926">In method 'MessageCompletedEventArgs.CheckStripValue(double)', correct the spelling of 'glu' in parameter name 'glu' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="glu" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4926">'glu', a parameter declared in 'MessageCompletedEventArgs.CheckStripValue(double)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Clear()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="WinFormBlankTest.MessageCompletedEventArgs.ChangeText(System.String,System.Windows.Forms.Panel)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1323">Method 'MessageCompletedEventArgs.Clear()' passes a literal string as parameter 'text' of a call to 'MessageCompletedEventArgs.ChangeText(string, Panel)'. Retrieve the following string(s) from a resource table instead: "\nMérés újrakezdve\n".</Issue>
            </Message>
            <Message Id="Mérés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1323">Correct the spelling of the unrecognized token 'Mérés' in the literal '"\nMérés újrakezdve\n"'.</Issue>
            </Message>
            <Message Id="újrakezdve" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1323">Correct the spelling of the unrecognized token 'újrakezdve' in the literal '"\nMérés újrakezdve\n"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#code" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.code' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#command" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.command' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CommitChangesToReleaseHost(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3418">The 'this' parameter (or 'Me' in Visual Basic) of 'MessageCompletedEventArgs.CommitChangesToReleaseHost(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="measurementType_in" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3418">Parameter 'measurementType_in' of 'MessageCompletedEventArgs.CommitChangesToReleaseHost(string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#controllerUser" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.controllerUser' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvertFromBcd(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Bcd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1388">Correct the spelling of 'Bcd' in member name 'MessageCompletedEventArgs.ConvertFromBcd(int)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="bcd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1388">In method 'MessageCompletedEventArgs.ConvertFromBcd(int)', correct the spelling of 'bcd' in parameter name 'bcd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="result" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1388">'result', a variable declared in 'MessageCompletedEventArgs.ConvertFromBcd(int)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#counterPenel" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.counterPenel' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Penel" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Penel' in member name 'MessageCompletedEventArgs.counterPenel' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CRC" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CRC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CRC' in member name 'MessageCompletedEventArgs.CRC' by changing it to 'Crc'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Data" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.Data' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Data_high" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MessageCompletedEventArgs.Data_high' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Data_low" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MessageCompletedEventArgs.Data_low' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#disableTextBox()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="352">'rt', a variable, is cast to type 'RichTextBox' multiple times in method 'MessageCompletedEventArgs.disableTextBox()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="353">'rt', a variable, is cast to type 'RichTextBox' multiple times in method 'MessageCompletedEventArgs.disableTextBox()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="disable" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="341">Correct the casing of 'disable' in member name 'MessageCompletedEventArgs.disableTextBox()' by changing it to 'Disable'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DiscardBuffers(WinFormBlankTest.UserPanel)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1046">The 'this' parameter (or 'Me' in Visual Basic) of 'MessageCompletedEventArgs.DiscardBuffers(UserPanel)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="Users_Form" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1046">'Users_Form', a parameter declared in 'MessageCompletedEventArgs.DiscardBuffers(UserPanel)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DropAndCreateSchema()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3341">Object 'conn' can be disposed more than once in method 'MessageCompletedEventArgs.DropAndCreateSchema()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3341</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3318">The 'this' parameter (or 'Me' in Visual Basic) of 'MessageCompletedEventArgs.DropAndCreateSchema()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3336">Change 'MessageCompletedEventArgs.DropAndCreateSchema()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#end_date" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.end_date' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#error_e" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.error_e' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#error_h" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.error_h' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAVGOfARoll(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3109">'MessageCompletedEventArgs.GetAVGOfARoll(string)' has a cyclomatic complexity of 27. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3273">Object 'connection' can be disposed more than once in method 'MessageCompletedEventArgs.GetAVGOfARoll(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3273</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3244">Method 'MessageCompletedEventArgs.GetAVGOfARoll(string)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "A , . számú roll már le van mérve a , . számú LOT-ból!!".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3267">Modify 'MessageCompletedEventArgs.GetAVGOfARoll(string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="AVG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3109">Correct the casing of 'AVG' in member name 'MessageCompletedEventArgs.GetAVGOfARoll(string)' by changing it to 'Avg'.</Issue>
            </Message>
            <Message Id="id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3109">In member 'MessageCompletedEventArgs.GetAVGOfARoll(string)', correct the casing of 'id' in parameter name 'roll_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3109">In member 'MessageCompletedEventArgs.GetAVGOfARoll(string)', remove the underscores from parameter name 'roll_id'.</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3139">Method 'MessageCompletedEventArgs.GetAVGOfARoll(string)' passes 'Avg is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3178">Method 'MessageCompletedEventArgs.GetAVGOfARoll(string)' passes 'error_count is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3192">Method 'MessageCompletedEventArgs.GetAVGOfARoll(string)' passes 'identify_pk is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3223">Method 'MessageCompletedEventArgs.GetAVGOfARoll(string)' passes 'insert command is unsuccesfull in getAVG()' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message Id="LOT-ból" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3244">Correct the spelling of the unrecognized token 'LOT-ból' in the literal '". számú LOT-ból!!"'.</Issue>
            </Message>
            <Message Id="már" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3244">Correct the spelling of the unrecognized token 'már' in the literal '". számú roll már le van mérve a "'.</Issue>
            </Message>
            <Message Id="mérve" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3244">Correct the spelling of the unrecognized token 'mérve' in the literal '". számú roll már le van mérve a "'.</Issue>
            </Message>
            <Message Id="számú" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3244">Correct the spelling of the unrecognized token 'számú' in the literal '". számú LOT-ból!!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3244">Correct the spelling of the unrecognized token 'számú' in the literal '". számú roll már le van mérve a "'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3210">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' could contain the following variables 'roll_id', 'Convert.ToInt32(identify_pk)', 'valid', 'this.Users_Form.dev.lot_count_in_one_roll', 'this.Users_Form.dev.LOT_ID', 'null', 'null'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3129">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' could contain the following variables 'roll_id', 'this.Users_Form.dev.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3155">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' could contain the following variables 'roll_id', 'this.Users_Form.dev.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3182">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' could contain the following variables 'roll_id', 'this.Users_Form.dev.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3168">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' could contain the following variables 'this.Users_Form.dev.LOT_ID', 'this.Users_Form.dev.Roll'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3199">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' could contain the following variables 'this.Users_Form.dev.Roll', 'this.Users_Form.dev.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3141">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3141">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3145">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3150">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3165">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3165">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3210">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3210">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3236">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3207">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3210">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3218">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3253">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3120">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3138">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3150">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3121">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3155">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3168">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3182">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3199">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3244">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3245">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3210">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.GetAVGOfARoll(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3244">Change 'MessageCompletedEventArgs.GetAVGOfARoll(string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message Id="command" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3109">'command', a variable declared in 'MessageCompletedEventArgs.GetAVGOfARoll(string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="result" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3109">'result', a variable declared in 'MessageCompletedEventArgs.GetAVGOfARoll(string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetChecksum(System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1377">The 'this' parameter (or 'Me' in Visual Basic) of 'MessageCompletedEventArgs.GetChecksum(byte[])' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'MessageCompletedEventArgs.GetChecksum(byte[])', validate parameter 'data' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetNormalGluValuesOfCentral()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2682">'MessageCompletedEventArgs.GetNormalGluValuesOfCentral()' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2682">The 'this' parameter (or 'Me' in Visual Basic) of 'MessageCompletedEventArgs.GetNormalGluValuesOfCentral()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#glu" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.glu' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="glu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glu' in member name 'MessageCompletedEventArgs.glu' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HideIcon(System.Windows.Forms.Panel,System.Windows.Forms.Label)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="310">'c', a variable, is cast to type 'Label' multiple times in method 'MessageCompletedEventArgs.HideIcon(Panel, Label)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="311">'c', a variable, is cast to type 'Label' multiple times in method 'MessageCompletedEventArgs.HideIcon(Panel, Label)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="lb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="299">In method 'MessageCompletedEventArgs.HideIcon(Panel, Label)', correct the spelling of 'lb' in parameter name 'lb' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="300">In externally visible method 'MessageCompletedEventArgs.HideIcon(Panel, Label)', validate parameter 'myForm' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#isMeo" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.isMeo' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Meo" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Meo' in member name 'MessageCompletedEventArgs.isMeo' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lotid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.lotid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lotid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lotid' in member name 'MessageCompletedEventArgs.lotid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lowBattery_label" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.lowBattery_label' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#machineName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.machineName' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#master_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.master_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'MessageCompletedEventArgs.master_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#master_bias" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.master_bias' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#master_cv" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.master_cv' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#master_stddev" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.master_stddev' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="stddev" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'stddev' in member name 'MessageCompletedEventArgs.master_stddev' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MASTER_STRIPCOUNT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MASTER" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MASTER' in member name 'MessageCompletedEventArgs.MASTER_STRIPCOUNT' by changing it to 'Master'.</Issue>
            </Message>
            <Message Id="STRIPCOUNT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STRIPCOUNT' in member name 'MessageCompletedEventArgs.MASTER_STRIPCOUNT' by changing it to 'Stripcount'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'MessageCompletedEventArgs.MASTER_STRIPCOUNT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#master_sub_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.master_sub_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'MessageCompletedEventArgs.master_sub_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#masters_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.masters_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'MessageCompletedEventArgs.masters_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#masters_calibrated_glu" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.masters_calibrated_glu' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'MessageCompletedEventArgs.masters_calibrated_glu' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="glu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glu' in member name 'MessageCompletedEventArgs.masters_calibrated_glu' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#masters_date" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.masters_date' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'MessageCompletedEventArgs.masters_date' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#masters_glus" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.masters_glus' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'MessageCompletedEventArgs.masters_glus' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="glus" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glus' in member name 'MessageCompletedEventArgs.masters_glus' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#mastersIDs" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.mastersIDs' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'MessageCompletedEventArgs.mastersIDs' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MeasureID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.MeasureID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MeasureID_high" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'MessageCompletedEventArgs.MeasureID_high' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="high" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'high' in member name 'MessageCompletedEventArgs.MeasureID_high' by changing it to 'High'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'MessageCompletedEventArgs.MeasureID_high'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MeasureID_low" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'MessageCompletedEventArgs.MeasureID_low' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="low" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'low' in member name 'MessageCompletedEventArgs.MeasureID_low' by changing it to 'Low'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'MessageCompletedEventArgs.MeasureID_low'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#month" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MessageCompletedEventArgs.month' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#networkIsOK" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MessageCompletedEventArgs.networkIsOK' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#not_h62_is_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.not_h62_is_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#out_of_range_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.out_of_range_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#outsideCount" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.outsideCount' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#percent_outside_bias" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.percent_outside_bias' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PingResults" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.PingResults' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'MessageCompletedEventArgs.PingResults' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveLines(System.Windows.Forms.TextBoxBase,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2817">'MessageCompletedEventArgs.RemoveLines(TextBoxBase, int)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2817">The 'this' parameter (or 'Me' in Visual Basic) of 'MessageCompletedEventArgs.RemoveLines(TextBoxBase, int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#result" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.result' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#resultsView" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.resultsView' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_out_of_range_strip_count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="rollout" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'rollout' in member name 'MessageCompletedEventArgs.roll_out_of_range_strip_count' exists as a discrete term. If your usage is intended to be single word, case it as 'rollout' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.roll_out_of_range_strip_count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveHomogenityAlternation(System.Object,System.Object,System.Object,System.Object,System.Object,Npgsql.NpgsqlConnection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2962">Modify 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2936">In member 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)', correct the casing of 'count' in parameter name 'h62_error_count' by changing it to 'Count'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2936">In member 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)', correct the casing of 'count' in parameter name 'not_h62_error_count' by changing it to 'Count'.</Issue>
            </Message>
            <Message Id="error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2936">In member 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)', correct the casing of 'error' in parameter name 'h62_error_count' by changing it to 'Error'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2936">In member 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)', correct the casing of 'error' in parameter name 'not_h62_error_count' by changing it to 'Error'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2936">In member 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)', correct the casing of 'h' in parameter name 'not_h62_error_count' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="in" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2936">In member 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)', correct the casing of 'in' in parameter name 'connection_in' by changing it to 'In'.</Issue>
            </Message>
            <Message Id="Homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2936">Correct the spelling of 'Homogenity' in member name 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2936">In method 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)', correct the spelling of 'avg' in parameter name 'avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2936">In method 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)', correct the spelling of 'h' in parameter name 'h62_error_count' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="stddev" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2936">In method 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)', correct the spelling of 'stddev' in parameter name 'stddev' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2936">In member 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)', remove the underscores from parameter name 'connection_in'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2936">In member 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)', remove the underscores from parameter name 'h62_error_count'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2936">In member 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)', remove the underscores from parameter name 'not_h62_error_count'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2947">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)' could contain the following variables 'this.Users_Form.dev.LOT_ID', 'this.Users_Form.dev.Roll', 'this.Users_Form.dev.Averages_ID', 'not_h62_error_count', 'h62_error_count', 'Convert.ToInt32(Program.OutOfRangeCount_Homo)', 'this.Users_Form.dev.stripCount', 'null', 'null'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2947">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2947">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2947">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2956">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2947">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="result" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2936">'result', a variable declared in 'MessageCompletedEventArgs.SaveHomogenityAlternation(object, object, object, object, object, NpgsqlConnection)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveHomogenityResult(System.Object,System.Object,System.Object,System.Object,System.Object,System.Boolean,Npgsql.NpgsqlConnection,System.Object,System.Object,System.Int32,System.Boolean,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="avg" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the casing of 'avg' in parameter name 'lot_avg' by changing it to 'Avg'.</Issue>
            </Message>
            <Message Id="count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the casing of 'count' in parameter name 'h62_error_count' by changing it to 'Count'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the casing of 'count' in parameter name 'not_h62_error_count' by changing it to 'Count'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the casing of 'count' in parameter name 'wrong_strip_count' by changing it to 'Count'.</Issue>
            </Message>
            <Message Id="error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the casing of 'error' in parameter name 'h62_error_count' by changing it to 'Error'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the casing of 'error' in parameter name 'not_h62_error_count' by changing it to 'Error'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the casing of 'h' in parameter name 'not_h62_error_count' by changing it to 'H'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the casing of 'h' in parameter name 'not_h62_is_valid' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="in" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the casing of 'in' in parameter name 'connection_in' by changing it to 'In'.</Issue>
            </Message>
            <Message Id="is" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the casing of 'is' in parameter name 'homogenity_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the casing of 'is' in parameter name 'not_h62_is_valid' by changing it to 'Is'.</Issue>
            </Message>
            <Message Id="stddev" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the casing of 'stddev' in parameter name 'lot_stddev' by changing it to 'Stddev'.</Issue>
            </Message>
            <Message Id="strip" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the casing of 'strip' in parameter name 'wrong_strip_count' by changing it to 'Strip'.</Issue>
            </Message>
            <Message Id="valid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the casing of 'valid' in parameter name 'homogenity_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the casing of 'valid' in parameter name 'not_h62_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the casing of 'valid' in parameter name 'outofrange_valid' by changing it to 'Valid'.</Issue>
            </Message>
            <Message Id="Homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">Correct the spelling of 'Homogenity' in member name 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In method 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the spelling of 'avg' in parameter name 'avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In method 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the spelling of 'avg' in parameter name 'lot_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In method 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the spelling of 'h' in parameter name 'h62_error_count' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In method 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the spelling of 'homogenity' in parameter name 'homogenity_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="outofrange" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In method 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the spelling of 'outofrange' in parameter name 'outofrange_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="stddev" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In method 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the spelling of 'stddev' in parameter name 'lot_stddev' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In method 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', correct the spelling of 'stddev' in parameter name 'stddev' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', remove the underscores from parameter name 'connection_in'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', remove the underscores from parameter name 'h62_error_count'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', remove the underscores from parameter name 'homogenity_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', remove the underscores from parameter name 'lot_avg'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', remove the underscores from parameter name 'lot_stddev'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', remove the underscores from parameter name 'not_h62_error_count'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', remove the underscores from parameter name 'not_h62_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', remove the underscores from parameter name 'outofrange_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">In member 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', remove the underscores from parameter name 'wrong_strip_count'.</Issue>
            </Message>
            <Message TypeName="Provide correct arguments to formatting methods" Category="Microsoft.Usage" CheckId="CA2241" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4822">Method 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' calls 'string.Format(string, object)' and does not provide a format item for argument "1". The provided format string is: '"select max(pk_id) from homogenity_result"'</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4800">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' could contain the following variables 'this.Users_Form.dev.Homogenity_Is_Valid', 'this.Users_Form.dev.Roll', 'this.Users_Form.dev.Averages_ID', 'this.Users_Form.dev.stripCount', 'not_h62_error_count', 'h62_error_count', 'Program.LOT_ID', 'Convert.ToInt32(Program.OutOfRangeCount_Homo)', 'this.out_of_range_valid', 'Program.TubeCount', 'not_h62_is_valid', 'null', 'null', '1'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="outofrange_valid" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">Parameter 'outofrange_valid' of 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="wrong_strip_count" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">Parameter 'wrong_strip_count' of 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4800">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4800">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4800">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4841">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4843">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4845">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4850">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4850">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4850">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4850">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4858">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4810">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4838">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4822">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4832">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4800">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="not_h62_is_valid" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">'not_h62_is_valid', a parameter declared in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="result" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4790">'result', a variable declared in 'MessageCompletedEventArgs.SaveHomogenityResult(object, object, object, object, object, bool, NpgsqlConnection, object, object, int, bool, bool)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveLotResult(System.Object,System.Object,System.Int32,System.Object,System.Object,System.Object)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4009">'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' has a cyclomatic complexity of 165. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4009">'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' has a maintainability index of 0. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4765">Object 'lot_connection' can be disposed more than once in method 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 4765</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4759">Modify 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="StringCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4115">'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' calls 'string.Format(string, object)' but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Issue>
             <Issue Name="StringCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4116">'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' calls 'string.Format(string, object)' but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="StringCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4636">'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' calls 'string.Format(string, object, object, object)' but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Issue>
             <Issue Name="StringCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4637">'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' calls 'string.Format(string, object, object, object)' but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4660">Method 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' passes 'Avg is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4095">Method 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' passes 'error_count is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4108">Method 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' passes 'error_count is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4139">Method 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' passes 'out_count is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message TypeName="Provide correct arguments to formatting methods" Category="Microsoft.Usage" CheckId="CA2241" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4639">Method 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' calls 'string.Format(string, object)' and does not provide a format item for argument "1". The provided format string is: '"select max(pk_id) from lot_result"'</Issue>
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4701">Method 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' calls 'string.Format(string, object, object, object)' and does not provide a format item for argument "2". The provided format string is: '"SELECT COUNT(homogenity_test.pk_id) FROM homogenity_test LEFT JOIN blank_test_re..."'</Issue>
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4702">Method 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' calls 'string.Format(string, object, object, object)' and does not provide a format item for argument "2". The provided format string is: '"SELECT COUNT(homogenity_test.pk_id) FROM homogenity_test LEFT JOIN blank_test_re..."'</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4130">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' could contain the following variables 'Program.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4704">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' could contain the following variables 'Program.LOT_ID', 'this.Users_Form.dev.Roll'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4708">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' could contain the following variables 'Program.LOT_ID', 'this.Users_Form.dev.Roll'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4718">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' could contain the following variables 'Program.LOT_ID', 'this.Users_Form.dev.Roll'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4616">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' could contain the following variables 'homogenityPKey', 'avg_ok', 'cv_ok', 'Convert.ToInt32(not_h62_error_count)', 'Convert.ToInt32(h62_error_count)', 'this.Users_Form.dev.LOT_ID', 'tha_strip_count_in_measure', 'this.Users_Form.dev.lot_is_valid', 'this.altogether_lot_out_count', 'null', 'null'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4047">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' could contain the following variables 'this.Users_Form.dev.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4072">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' could contain the following variables 'this.Users_Form.dev.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4076">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' could contain the following variables 'this.Users_Form.dev.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4086">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' could contain the following variables 'this.Users_Form.dev.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4099">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' could contain the following variables 'this.Users_Form.dev.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4118">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' could contain the following variables 'this.Users_Form.dev.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4122">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' could contain the following variables 'this.Users_Form.dev.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4663">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' could contain the following variables 'this.Users_Form.dev.Roll', 'Program.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4651">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' could contain the following variables 'this.Users_Form.dev.Roll', 'Program.LOT_ID', 'Program.measureType'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4742">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' could contain the following variables 'this.Users_Form.dev.Roll', 'Program.LOT_ID', 'avg_percent_ok', 'roll_cv_ok', 'lotResultID.ExecuteScalar()', 'fk_lot_res_id', 'roll_is_valid', 'tha_strip_count_in_roll', 'this.roll_out_of_range_strip_count', 'null', 'null'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4009">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4009">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4023">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4023">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4064">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4064">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4675">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4675">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4676">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4681">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4681">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4681">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4681">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4689">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4742">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4742">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4742">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4080">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4080">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4126">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4126">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4141">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4162">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4162">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4180">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4180">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4199">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4199">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4215">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4215">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4231">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4231">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4247">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4247">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4263">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4263">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4279">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4279">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4295">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4295">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4311">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4311">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4327">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4327">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4343">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4343">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4359">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4359">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4375">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4375">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4391">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4391">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4407">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4407">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4423">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4423">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4439">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4439">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4455">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4455">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4471">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4471">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4487">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4487">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4503">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4503">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4519">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4519">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4535">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4535">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4551">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4551">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4567">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4567">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4583">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4583">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4599">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4599">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4616">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4616">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4625">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4712">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4712">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4750">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4047">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4058">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4069">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4070">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4086">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4099">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4115">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4116">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4130">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4639">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4647">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4659">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4663">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4718">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4636">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4637">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4651">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4701">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4702">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4616">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="4742">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SaveLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SchemaRestore()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3311">The 'this' parameter (or 'Me' in Visual Basic) of 'MessageCompletedEventArgs.SchemaRestore()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SerialNumber" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MessageCompletedEventArgs.SerialNumber' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SerialNumber_HH" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'MessageCompletedEventArgs.SerialNumber_HH'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SerialNumber_HL" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'MessageCompletedEventArgs.SerialNumber_HL'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SerialNumber_LH" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'MessageCompletedEventArgs.SerialNumber_LH'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SerialNumber_LL" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'MessageCompletedEventArgs.SerialNumber_LL'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ServicesToRun" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'MessageCompletedEventArgs.ServicesToRun' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetButtonEnabled()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="373">'c', a variable, is cast to type 'Button' multiple times in method 'MessageCompletedEventArgs.SetButtonEnabled()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="375">'c', a variable, is cast to type 'Button' multiple times in method 'MessageCompletedEventArgs.SetButtonEnabled()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetMeasuredCalculatedValues(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2630">Object 'setMeasuredConn' can be disposed more than once in method 'MessageCompletedEventArgs.SetMeasuredCalculatedValues(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2630</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2604">The 'this' parameter (or 'Me' in Visual Basic) of 'MessageCompletedEventArgs.SetMeasuredCalculatedValues(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2610">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.SetMeasuredCalculatedValues(string)' could contain the following variables 'lot_id', 'Program.master_lot_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2610">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SetMeasuredCalculatedValues(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetMeasuredToOK(WinFormBlankTest.UserPanel)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1036">'lb', a variable, is cast to type 'Button' multiple times in method 'MessageCompletedEventArgs.SetMeasuredToOK(UserPanel)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1037">'lb', a variable, is cast to type 'Button' multiple times in method 'MessageCompletedEventArgs.SetMeasuredToOK(UserPanel)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowError(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1183">Method 'MessageCompletedEventArgs.ShowError(string)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "\nMérés újraindítva\n".</Issue>
            </Message>
            <Message Id="Mérés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1183">Correct the spelling of the unrecognized token 'Mérés' in the literal '"\nMérés újraindítva\n"'.</Issue>
            </Message>
            <Message Id="újraindítva" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1183">Correct the spelling of the unrecognized token 'újraindítva' in the literal '"\nMérés újraindítva\n"'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1179">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.ShowError(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1189">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.ShowError(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1191">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.ShowError(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1184">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.ShowError(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1183">Change 'MessageCompletedEventArgs.ShowError(string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowIcon(System.Windows.Forms.Panel,System.Windows.Forms.Label)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="lb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="284">In method 'MessageCompletedEventArgs.ShowIcon(Panel, Label)', correct the spelling of 'lb' in parameter name 'lb' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="285">In externally visible method 'MessageCompletedEventArgs.ShowIcon(Panel, Label)', validate parameter 'myForm' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="292">In externally visible method 'MessageCompletedEventArgs.ShowIcon(Panel, Label)', validate parameter 'lb' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#skippedIndexes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.skippedIndexes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'MessageCompletedEventArgs.skippedIndexes' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#start_date" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.start_date' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#startTimeStored" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.startTimeStored' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stipCount_part1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.stipCount_part1' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="stip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'stip' in member name 'MessageCompletedEventArgs.stipCount_part1' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stipCount_part2" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.stipCount_part2' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="stip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'stip' in member name 'MessageCompletedEventArgs.stipCount_part2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StoreAlternation(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3094">Object 'connection' can be disposed more than once in method 'MessageCompletedEventArgs.StoreAlternation(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3094</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3088">Modify 'MessageCompletedEventArgs.StoreAlternation(string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3005">Method 'MessageCompletedEventArgs.StoreAlternation(string)' passes 'Avg is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3047">Method 'MessageCompletedEventArgs.StoreAlternation(string)' passes 'error_count is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3061">Method 'MessageCompletedEventArgs.StoreAlternation(string)' passes 'identify_pk is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3079">Method 'MessageCompletedEventArgs.StoreAlternation(string)' passes 'insert command is unsuccesfull in getAVG()' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3037">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreAlternation(string)' could contain the following variables 'Program.LOT_ID', 'this.Users_Form.dev.Roll'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3066">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreAlternation(string)' could contain the following variables 'roll_id', 'Convert.ToInt32(identify_pk)', 'this.Users_Form.dev.lot_count_in_one_roll', 'this.Users_Form.dev.LOT_ID', 'null', 'null'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2995">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreAlternation(string)' could contain the following variables 'roll_id', 'Program.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3051">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreAlternation(string)' could contain the following variables 'roll_id', 'Program.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3022">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreAlternation(string)' could contain the following variables 'roll_id', 'this.Users_Form.dev.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3007">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreAlternation(string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3007">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreAlternation(string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3011">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreAlternation(string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3017">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreAlternation(string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3034">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreAlternation(string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3034">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreAlternation(string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3066">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreAlternation(string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3066">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreAlternation(string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3066">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreAlternation(string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3074">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreAlternation(string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2986">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreAlternation(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3004">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreAlternation(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3017">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreAlternation(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2987">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreAlternation(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3022">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreAlternation(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3037">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreAlternation(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3051">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreAlternation(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3066">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreAlternation(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="command" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2976">'command', a variable declared in 'MessageCompletedEventArgs.StoreAlternation(string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StoreBiasValue(System.Collections.Generic.List`1&lt;System.Double&gt;,System.Collections.Generic.List`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2729">Object 'biasConn' can be disposed more than once in method 'MessageCompletedEventArgs.StoreBiasValue(List&lt;double&gt;, List&lt;int&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2729</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2686">The 'this' parameter (or 'Me' in Visual Basic) of 'MessageCompletedEventArgs.StoreBiasValue(List&lt;double&gt;, List&lt;int&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2706">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreBiasValue(List&lt;double&gt;, List&lt;int&gt;)' could contain the following variables 'bias_glu[i]', 'bias_glu_id[i]', 'strip_ok'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2706">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreBiasValue(List&lt;double&gt;, List&lt;int&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="bias_glu" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2686">'bias_glu', a parameter declared in 'MessageCompletedEventArgs.StoreBiasValue(List&lt;double&gt;, List&lt;int&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="bias_glu_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2686">'bias_glu_id', a parameter declared in 'MessageCompletedEventArgs.StoreBiasValue(List&lt;double&gt;, List&lt;int&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StoreData()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1439">'MessageCompletedEventArgs.StoreData()' is coupled with 38 different types from 14 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1439">'MessageCompletedEventArgs.StoreData()' has a cyclomatic complexity of 233. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Compiler" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1439">'MessageCompletedEventArgs.StoreData()' has 102 local variables, 7 of which were generated by the compiler. Refactor 'MessageCompletedEventArgs.StoreData()' so that it uses fewer than 64 local variables.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1439">'MessageCompletedEventArgs.StoreData()' has a maintainability index of 0. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1850">Object 'dr' can be disposed more than once in method 'MessageCompletedEventArgs.StoreData()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1850</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1932">Object 'dr' can be disposed more than once in method 'MessageCompletedEventArgs.StoreData()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1932</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2593">Object 'sqlConn' can be disposed more than once in method 'MessageCompletedEventArgs.StoreData()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2593</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2332">'bt', a variable, is cast to type 'Button' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2565">'bt', a variable, is cast to type 'Button' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2282">'c', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2282">'c', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2282">'c', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2282">'c', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2305">'c', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2306">'c', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2476">'c', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2476">'c', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2476">'c', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2476">'c', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2476">'c', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2476">'c', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2476">'c', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2476">'c', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2494">'c', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2495">'c', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2303">'c', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2492">'c', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1443">'item', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2182">'item', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2218">'item', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2219">'item', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2383">'item', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2413">'item', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2414">'item', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2213">'item', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2411">'item', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2245">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2245">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2258">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2259">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2437">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2437">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2437">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2437">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2437">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2437">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2437">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2437">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2455">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2456">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2515">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2515">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2515">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2515">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2515">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2515">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2515">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2515">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2533">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2534">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2256">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2453">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2531">'panel2', a variable, is cast to type 'UserPanel' multiple times in method 'MessageCompletedEventArgs.StoreData()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1464">Modify 'MessageCompletedEventArgs.StoreData()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2112">Modify 'MessageCompletedEventArgs.StoreData()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1552">Method 'MessageCompletedEventArgs.StoreData()' passes 'errors_id is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1606">Method 'MessageCompletedEventArgs.StoreData()' passes 'pk_id is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1537">Method 'MessageCompletedEventArgs.StoreData()' passes 'res is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message TypeName="Provide correct arguments to formatting methods" Category="Microsoft.Usage" CheckId="CA2241" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1782">Method 'MessageCompletedEventArgs.StoreData()' calls 'string.Format(string, object, object, object)' and does not provide a format item for argument "1". The provided format string is: '"SELECT COUNT(accuracy_test.calibrated_glu) FROM accuracy_test where accuracy_tes..."'</Issue>
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1710">Method 'MessageCompletedEventArgs.StoreData()' calls 'string.Format(string, object, object, object)' and does not provide a format item for argument "3". The provided format string is: '"SELECT COUNT(homogenity_test.pk_id) FROM homogenity_test LEFT JOIN blank_test_re..."'</Issue>
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1712">Method 'MessageCompletedEventArgs.StoreData()' calls 'string.Format(string, object, object, object)' and does not provide a format item for argument "3". The provided format string is: '"SELECT COUNT(homogenity_test.pk_id) FROM homogenity_test LEFT JOIN blank_test_re..."'</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1626">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'Convert.ToInt32(pk)', 'this.Users_Form.dev.LOT_ID', 'this.Users_Form.dev.Roll', 'temperature_ok', 'this.Users_Form.dev.SubRoll_ID', 'this.Users_Form.dev.SerialNumber', 'this.Users_Form.dev.BarCode', 'Program.measureType', 'null', 'null'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1654">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'Math.Round(Convert.ToDouble((this.glu / 18)), 2)', 'Math.Round((Program.master_calibration * (this.glu / 18)), 2)', 'Program.master_lot_id', 'this.Users_Form.dev.Roll', 'Program.Accuracy_sample_blood_vial_ID', 'null', 'this.Users_Form.MasterChb.Checked', 'Program.ValuesID', 'null'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1672">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'Math.Round(Convert.ToDouble((this.glu / 18)), 2)', 'Math.Round((Program.master_calibration * (this.glu / 18)), 2)', 'this.Users_Form.dev.LOT_ID', 'this.Users_Form.dev.Roll', 'Program.Accuracy_sample_blood_vial_ID', 'null', 'this.Users_Form.MasterChb.Checked', 'Program.ValuesID', 'null'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1880">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'MessageCompletedEventArgs.blood_vial_id', 'Program.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1896">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'MessageCompletedEventArgs.blood_vial_id', 'Program.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1798">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'MessageCompletedEventArgs.blood_vial_id', 'Program.master_lot_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1829">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'MessageCompletedEventArgs.blood_vial_id', 'Program.master_lot_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1782">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'Program.LOT_ID', 'Program.master_lot_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2034">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'Program.LOT_ID', 'Program.master_lot_id', 'fk_id', 'MessageCompletedEventArgs.blood_vial_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1968">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'Program.LOT_ID', 'fk_master_id', 'MessageCompletedEventArgs.blood_vial_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1986">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'Program.LOT_ID', 'fk_master_id', 'MessageCompletedEventArgs.blood_vial_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2071">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'Program.LOT_ID', 'fk_result_id', 'Program.master_lot_id', 'this.accuracyOutCount', 'out_ok', 'lot_ok', 'null'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1696">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'Program.LOT_ID', 'this.Users_Form.dev.Roll', 'Program.measureType'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1559">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'error_scalar.ExecuteScalar()', 'Program.measureType', 'null', 'this.Users_Form.dev.LOT_ID', 'this.Users_Form.dev.Roll', 'this.Users_Form.dev.SerialNumber'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1570">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'this.ConvertFromBcd(this.ThePanel.TheDevice.ThaCode)', 'this.ThePanel.TheDevice.Original_MeasureID', 'this.ThePanel.TheDevice.Original_SerialNumber', 'this.isMeo', 'error_scalar.ExecuteScalar()', 'this.Users_Form.dev.MasterLot', 'null', 'null', 'this.Users_Form.dev.LOT_ID', 'this.Users_Form.dev.Roll', 'this.Users_Form.dev.SerialNumber'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1641">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'this.Users_Form.dev.IsResultValid', 'Convert.ToInt32(pk)', 'this.Users_Form.dev.Roll', 'this.Users_Form.dev.LOT_ID', 'null', 'null', 'this.Users_Form.dev.SerialNumber'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1612">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'this.controllerUser', 'this.machineName', 'this.temperature', 'Convert.ToInt32(pk)', 'null', 'null', 'this.Users_Form.dev.LOT_ID', 'this.Users_Form.dev.Roll', 'this.Users_Form.dev.SerialNumber', 'Program.Humidity'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1866">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'this.master_sub_avg', 'this.master_stddev', 'this.master_cv', 'Program.master_lot_id', 'MessageCompletedEventArgs.blood_vial_id', 'fk_test_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1715">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'this.stipCount_part1'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1719">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'this.stipCount_part2'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1522">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreData()' could contain the following variables 'this.wrong_step', 'this.Users_Form.dev.Error_H_Text', 'CheckError.NOT_H62', 'CheckError.H62', 'CheckError.EarlyDripp', 'CheckError.DeviceReplace', 'null', 'null', 'Program.LOT_ID', 'this.Users_Form.dev.Roll', 'this.Users_Form.dev.SerialNumber'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1837">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1839">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1840">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1908">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1909">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1911">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1912">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1916">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1918">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1919">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1921">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1922">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1612">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1626">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1641">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1700">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1724">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1724">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1734">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1740">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1750">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1791">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1809">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1826">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1891">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1910">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1920">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1964">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2032">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2060">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1906">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1966">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1984">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2187">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2213">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2213">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2219">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2235">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2389">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2411">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Int32)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2219">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2259">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2306">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2414">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2456">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2495">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2534">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1483">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1497">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1589">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1605">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1620">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1633">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1745">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1756">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2029">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2106">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1757">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1798">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1829">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1880">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1896">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2114">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2213">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2256">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2303">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2411">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2453">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2492">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2531">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1481">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1693">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1710">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1712">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1782">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1522">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1545">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1559">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1570">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1595">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1612">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1626">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1641">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1654">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1672">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1866">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1968">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1986">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2034">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2057">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="2071">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1466">Change 'MessageCompletedEventArgs.StoreData()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1516">Replace the call to 'string.operator !=(string, string)' in 'MessageCompletedEventArgs.StoreData()' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1516">Replace the call to 'string.operator ==(string, string)' in 'MessageCompletedEventArgs.StoreData()' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="command" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1439">'command', a variable declared in 'MessageCompletedEventArgs.StoreData()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1439">'command', a variable declared in 'MessageCompletedEventArgs.StoreData()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1439">'command', a variable declared in 'MessageCompletedEventArgs.StoreData()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="result" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1439">'result', a variable declared in 'MessageCompletedEventArgs.StoreData()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StoreMeo(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1428">Object 'sqlConn' can be disposed more than once in method 'MessageCompletedEventArgs.StoreMeo(bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1428</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1422">Modify 'MessageCompletedEventArgs.StoreMeo(bool)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="Meo" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1402">Correct the spelling of 'Meo' in member name 'MessageCompletedEventArgs.StoreMeo(bool)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1411">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreMeo(bool)' could contain the following variables 'this.ThePanel.TheDevice.Original_SerialNumber', '(this.glu / 18.02)', 'measurableDevice'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1417">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreMeo(bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1411">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreMeo(bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StoreSerialInput(System.Byte[],System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="987">Object 'conn' can be disposed more than once in method 'MessageCompletedEventArgs.StoreSerialInput(byte[], string, int)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 987</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="973">'MessageCompletedEventArgs.StoreSerialInput(byte[], string, int)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="serialinput" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="973">Correct the spelling of the unrecognized token 'serialinput' in the literal '"unsuccessfull insert to serial_input"'.</Issue>
            </Message>
            <Message Id="unsuccessfull" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="973">Correct the spelling of the unrecognized token 'unsuccessfull' in the literal '"unsuccessfull insert to serial_input"'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="955">The 'this' parameter (or 'Me' in Visual Basic) of 'MessageCompletedEventArgs.StoreSerialInput(byte[], string, int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="961">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'MessageCompletedEventArgs.StoreSerialInput(byte[], string, int)' could contain the following variables 'Convert.ToInt32(actPort_in.Substring(3))', 'measurementPkId_in'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="961">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreSerialInput(byte[], string, int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="961">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.StoreSerialInput(byte[], string, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="981">Change 'MessageCompletedEventArgs.StoreSerialInput(byte[], string, int)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message Id="result" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="955">'result', a variable declared in 'MessageCompletedEventArgs.StoreSerialInput(byte[], string, int)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sub_glus" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.sub_glus' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'MessageCompletedEventArgs.sub_glus' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="glus" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glus' in member name 'MessageCompletedEventArgs.sub_glus' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SwitchSerialOrMeasureId()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1258">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SwitchSerialOrMeasureId()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1259">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SwitchSerialOrMeasureId()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1279">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SwitchSerialOrMeasureId()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1280">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SwitchSerialOrMeasureId()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1268">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SwitchSerialOrMeasureId()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1289">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.SwitchSerialOrMeasureId()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#temperature" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.temperature' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestReleaseHostConnection()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3354">In method 'MessageCompletedEventArgs.TestReleaseHostConnection()', call System.IDisposable.Dispose on object 'new PingService()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3356">In method 'MessageCompletedEventArgs.TestReleaseHostConnection()', call System.IDisposable.Dispose on object 'pingSender' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3391">Method 'MessageCompletedEventArgs.TestReleaseHostConnection()' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Exception details: , ; ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3389">Modify 'MessageCompletedEventArgs.TestReleaseHostConnection()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="WinFormBlankTest.Network.PingService" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3354">'MessageCompletedEventArgs.TestReleaseHostConnection()' creates a new instance of 'PingService' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3391">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.TestReleaseHostConnection()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="3391">Change 'MessageCompletedEventArgs.TestReleaseHostConnection()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThePanel" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.ThePanel' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tube_sn" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.tube_sn' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sn' in member name 'MessageCompletedEventArgs.tube_sn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Users_Form" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.Users_Form' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteNote(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1115">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.WriteNote(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1117">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.WriteNote(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1123">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.WriteNote(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="MessageCompletedEvenArgs.cs" Line="1125">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'MessageCompletedEventArgs.WriteNote(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#wrong_step" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageCompletedEventArgs.wrong_step' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Program" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#AccessRight" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_AccessRight()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning">'Program.AccessRight.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#AddCounterPanel(WinFormBlankTest.UI.Panels.CounterPanel,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="689">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Program.AddCounterPanel(CounterPanel, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AllDiffs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.AllDiffs' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AllGlus" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.AllGlus' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AllRolls" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.AllRolls' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#allSN" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.allSN' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BarCode" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.BarCode' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BestGlu" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.BestGlu' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BestRoll" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.BestRoll' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BlankDiff" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.BlankDiff' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#blankIsValidInLot" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.blankIsValidInLot' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#blankIsValidInRoll" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.blankIsValidInRoll' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BlankIsValidTubeCount" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.BlankIsValidTubeCount' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BlankLimitAvg" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.BlankLimitAvg' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CalcAverageForEachSN()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1365">Object 'conn' can be disposed more than once in method 'Program.CalcAverageForEachSN()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1365</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1344">'Program.CalcAverageForEachSN()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1337">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'Program.CalcAverageForEachSN()' could contain the following variables 'i', 'Program.LOT_ID', 'sn'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1349">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'Program.CalcAverageForEachSN()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1337">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'Program.CalcAverageForEachSN()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#centralBindingSrc" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.centralBindingSrc' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CentralBlankSN" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.CentralBlankSN' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CentralHomogenitySN" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.CentralHomogenitySN' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CentralIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.CentralIDs' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#centralLOTCount" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.centralLOTCount' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#centralLotIDsBlank" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.centralLotIDsBlank' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#centralLotIDsHomogenity" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.centralLotIDsHomogenity' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#centralQuery" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.centralQuery' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#centralRollIDsBlank" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.centralRollIDsBlank' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#centralRollIDsHomogenity" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.centralRollIDsHomogenity' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CentralSNIDForBlank" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.CentralSNIDForBlank' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CentralSNIDsForHomogenity" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.CentralSNIDsForHomogenity' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CentralVialDataGrid" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.CentralVialDataGrid' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#chartofBlank" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.chartofBlank' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckStripCountInTube(System.Int32,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="roll_id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1435">Parameter 'roll_id' of 'Program.CheckStripCountInTube(int, int, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckValidHomogenityLots(System.Boolean)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1183">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'Program.CheckValidHomogenityLots(bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#correctGluDiffFromAvg" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.correctGluDiffFromAvg' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#count" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.count' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CountInRoll" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.CountInRoll' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateAllPanelForAccuracy()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1582">'Program.CreateAllPanelForAccuracy()' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateCentralUIPanel()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1616">'c', a variable, is cast to type 'TextBox' multiple times in method 'Program.CreateCentralUIPanel()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1618">'c', a variable, is cast to type 'TextBox' multiple times in method 'Program.CreateCentralUIPanel()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1619">'c', a variable, is cast to type 'TextBox' multiple times in method 'Program.CreateCentralUIPanel()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#datar" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.datar' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dev" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.dev' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DiffereneceFromAVGBlank" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.DiffereneceFromAVGBlank' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DiffereneceFromAVGHomogenity" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.DiffereneceFromAVGHomogenity' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DiffToRollID" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.DiffToRollID' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DiscardedTubes" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.DiscardedTubes' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DiscardTubes()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1315">Object 'conn' can be disposed more than once in method 'Program.DiscardTubes()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1315</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1298">'Program.DiscardTubes()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1291">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'Program.DiscardTubes()' could contain the following variables 'i', 'Program.LOT_ID', 'sn'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1301">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'Program.DiscardTubes()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1291">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'Program.DiscardTubes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillMeasurementTable()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="355">Object 'conn' can be disposed more than once in method 'Program.FillMeasurementTable()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 355</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Method 'Program.FillMeasurementTable()' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Nincs ilyen teszt az adatbázisban!".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Method 'Program.FillMeasurementTable()' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Nincs ilyen teszt(, ) az adatbázisban!\r\nBiztosan folytatja a mérést ?!A teszt ...".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="346">Modify 'Program.FillMeasurementTable()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="Biztosan" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Correct the spelling of the unrecognized token 'Biztosan' in the literal '") az adatbázisban!\r\nBiztosan folytatja a mérést ?!A teszt típus rögzítésre ker..."'.</Issue>
            </Message>
            <Message Id="Nincs" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Correct the spelling of the unrecognized token 'Nincs' in the literal '"Nincs ilyen teszt az adatbázisban!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Correct the spelling of the unrecognized token 'Nincs' in the literal '"Nincs ilyen teszt("'.</Issue>
            </Message>
            <Message Id="Unsuccessfull" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="317">Correct the spelling of the unrecognized token 'Unsuccessfull' in the literal '"Unsuccessfull insert to measurement table!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="261">Correct the spelling of the unrecognized token 'Unsuccessfull' in the literal '"Unsuccessfull insert to operators table, statement: "'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="332">Correct the spelling of the unrecognized token 'Unsuccessfull' in the literal '"Unsuccessfull select from measurement table!"'.</Issue>
            </Message>
            <Message Id="adatbázisban" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Correct the spelling of the unrecognized token 'adatbázisban' in the literal '") az adatbázisban!\r\nBiztosan folytatja a mérést ?!A teszt típus rögzítésre ker..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Correct the spelling of the unrecognized token 'adatbázisban' in the literal '"Nincs ilyen teszt az adatbázisban!"'.</Issue>
            </Message>
            <Message Id="az" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Correct the spelling of the unrecognized token 'az' in the literal '") az adatbázisban!\r\nBiztosan folytatja a mérést ?!A teszt típus rögzítésre ker..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Correct the spelling of the unrecognized token 'az' in the literal '"Nincs ilyen teszt az adatbázisban!"'.</Issue>
            </Message>
            <Message Id="folytatja" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Correct the spelling of the unrecognized token 'folytatja' in the literal '") az adatbázisban!\r\nBiztosan folytatja a mérést ?!A teszt típus rögzítésre ker..."'.</Issue>
            </Message>
            <Message Id="ilyen" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Correct the spelling of the unrecognized token 'ilyen' in the literal '"Nincs ilyen teszt az adatbázisban!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Correct the spelling of the unrecognized token 'ilyen' in the literal '"Nincs ilyen teszt("'.</Issue>
            </Message>
            <Message Id="kerül" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Correct the spelling of the unrecognized token 'kerül' in the literal '") az adatbázisban!\r\nBiztosan folytatja a mérést ?!A teszt típus rögzítésre ker..."'.</Issue>
            </Message>
            <Message Id="mérést" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Correct the spelling of the unrecognized token 'mérést' in the literal '") az adatbázisban!\r\nBiztosan folytatja a mérést ?!A teszt típus rögzítésre ker..."'.</Issue>
            </Message>
            <Message Id="rögzítésre" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Correct the spelling of the unrecognized token 'rögzítésre' in the literal '") az adatbázisban!\r\nBiztosan folytatja a mérést ?!A teszt típus rögzítésre ker..."'.</Issue>
            </Message>
            <Message Id="teszt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Correct the spelling of the unrecognized token 'teszt' in the literal '") az adatbázisban!\r\nBiztosan folytatja a mérést ?!A teszt típus rögzítésre ker..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Correct the spelling of the unrecognized token 'teszt' in the literal '"Nincs ilyen teszt az adatbázisban!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Correct the spelling of the unrecognized token 'teszt' in the literal '"Nincs ilyen teszt("'.</Issue>
            </Message>
            <Message Id="típus" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Correct the spelling of the unrecognized token 'típus' in the literal '") az adatbázisban!\r\nBiztosan folytatja a mérést ?!A teszt típus rögzítésre ker..."'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="243">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'Program.FillMeasurementTable()' could contain the following variables 'BlankTestEnvironment.Operator'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="252">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'Program.FillMeasurementTable()' could contain the following variables 'BlankTestEnvironment.Operator'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="308">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'Program.FillMeasurementTable()' could contain the following variables 'Program.TubeCount', 'Program.testType_pkid', 'Program.operator_pk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="277">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'Program.FillMeasurementTable()' could contain the following variables 'Program.measureType'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="269">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'Program.FillMeasurementTable()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="270">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'Program.FillMeasurementTable()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="304">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'Program.FillMeasurementTable()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="338">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'Program.FillMeasurementTable()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="243">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Program.FillMeasurementTable()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="252">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Program.FillMeasurementTable()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="261">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Program.FillMeasurementTable()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="277">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Program.FillMeasurementTable()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Program.FillMeasurementTable()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="308">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'Program.FillMeasurementTable()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="324">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'Program.FillMeasurementTable()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="287">Change 'Program.FillMeasurementTable()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#firstFill" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.firstFill' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#firstslot" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.firstslot' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#g" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.g' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateUIAndStartApp(System.String[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="769">'Program.GenerateUIAndStartApp(string[])' has a cyclomatic complexity of 35. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="795">In method 'Program.GenerateUIAndStartApp(string[])', call System.IDisposable.Dispose on object 'new LotNumberForm()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="800">In method 'Program.GenerateUIAndStartApp(string[])', call System.IDisposable.Dispose on object 'new LotNumberForm()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="806">In method 'Program.GenerateUIAndStartApp(string[])', call System.IDisposable.Dispose on object 'new LotNumberForm()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="811">In method 'Program.GenerateUIAndStartApp(string[])', call System.IDisposable.Dispose on object 'new LotNumberForm()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="874">In method 'Program.GenerateUIAndStartApp(string[])', call System.IDisposable.Dispose on object 'new LotNumberForm(Program.LotHasNotAccuracyTest)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="834">In method 'Program.GenerateUIAndStartApp(string[])', call System.IDisposable.Dispose on object 'new NpgsqlCommand(string.Format("select DISTINCT lot_id from homogenity_result where homogenity_is_valid=true and...", ), conn)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="860">In method 'Program.GenerateUIAndStartApp(string[])', call System.IDisposable.Dispose on object 'new NpgsqlCommand(string.Format("select lot_id from accuracy_lot_result where lot_id=\'{0}\'", act_lot), conn)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="821">In method 'Program.GenerateUIAndStartApp(string[])', call System.IDisposable.Dispose on object 'new TubeCountInRollForm()' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1083">Object 'conn' can be disposed more than once in method 'Program.GenerateUIAndStartApp(string[])'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1083</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="849">Object 'selectLotsWithNotValidAccuraccy' can be disposed more than once in method 'Program.GenerateUIAndStartApp(string[])'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 849</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="867">Object 'selectNotMeasuredLotsInAccuracy' can be disposed more than once in method 'Program.GenerateUIAndStartApp(string[])'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 867</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1112">'bt', a variable, is cast to type 'Button' multiple times in method 'Program.GenerateUIAndStartApp(string[])'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1073">Modify 'Program.GenerateUIAndStartApp(string[])' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="860">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'Program.GenerateUIAndStartApp(string[])' could contain the following variables 'act_lot'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="840">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'Program.GenerateUIAndStartApp(string[])' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="860">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Program.GenerateUIAndStartApp(string[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1122">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Program.GenerateUIAndStartApp(string[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="834">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'Program.GenerateUIAndStartApp(string[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="847">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'Program.GenerateUIAndStartApp(string[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMaxPkIdFromReleaseHost(System.String,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="549">Object 'conn' can be disposed more than once in method 'Program.GetMaxPkIdFromReleaseHost(string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 549</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="527">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'Program.GetMaxPkIdFromReleaseHost(string, string)' could contain the following variables 'tableName_in'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="537">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'Program.GetMaxPkIdFromReleaseHost(string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="527">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Program.GetMaxPkIdFromReleaseHost(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="544">Change 'Program.GetMaxPkIdFromReleaseHost(string, string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMonth()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="614">'Program.GetMonth()' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRollNumberInLot()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1231">Object 'conn' can be disposed more than once in method 'Program.GetRollNumberInLot()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1231</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1218">'Program.GetRollNumberInLot()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1211">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'Program.GetRollNumberInLot()' could contain the following variables 'Program.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1221">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'Program.GetRollNumberInLot()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1211">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Program.GetRollNumberInLot()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSNCountInRoll()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1269">Object 'conn' can be disposed more than once in method 'Program.GetSNCountInRoll()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1269</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1255">'Program.GetSNCountInRoll()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1248">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'Program.GetSNCountInRoll()' could contain the following variables 'i', 'Program.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1258">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'Program.GetSNCountInRoll()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1248">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'Program.GetSNCountInRoll()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#glusAndNanoAmperAVGs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.glusAndNanoAmperAVGs' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#glusAVGs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.glusAVGs' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#glusValues" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.glusValues' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HommDiff" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.HommDiff' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenityAndblankIsValidInLot" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.homogenityAndblankIsValidInLot' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenityAndblankIsValidInRoll" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.homogenityAndblankIsValidInRoll' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HomogenityInRangeGlusCount" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.HomogenityInRangeGlusCount' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HomogenityInRangeGlusValue" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.HomogenityInRangeGlusValue' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HomogenityInRangeRollsIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.HomogenityInRangeRollsIDs' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HomogenityInRangeSNsIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.HomogenityInRangeSNsIDs' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HomogenityLimitAvg" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.HomogenityLimitAvg' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HomogenityValidTubeCount" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.HomogenityValidTubeCount' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitAllPort()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="724">In method 'Program.InitAllPort()', object 'port' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'port' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Collections.Generic.Dictionary`2&lt;WinFormBlankTest.UserPanel,System.String&gt;" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="720">'Program.InitAllPort()' creates a new instance of 'Dictionary&lt;UserPanel, string&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.Collections.Generic.List`1&lt;WinFormBlankTest.Device&gt;" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="719">'Program.InitAllPort()' creates a new instance of 'List&lt;Device&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitAllPortForSecondRun()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1551">In method 'Program.InitAllPortForSecondRun()', call System.IDisposable.Dispose on object 'port' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Collections.Generic.Dictionary`2&lt;WinFormBlankTest.UserPanel,System.String&gt;" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1545">'Program.InitAllPortForSecondRun()' creates a new instance of 'Dictionary&lt;UserPanel, string&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.Collections.Generic.List`1&lt;WinFormBlankTest.Device&gt;" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1544">'Program.InitAllPortForSecondRun()' creates a new instance of 'List&lt;Device&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1554">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Program.InitAllPortForSecondRun()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1567">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Program.InitAllPortForSecondRun()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InsertTestType(Npgsql.NpgsqlConnection,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Unsuccessfull" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="372">Correct the spelling of the unrecognized token 'Unsuccessfull' in the literal '"Unsuccessfull insert at measurement table or it\'s dependencies!"'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="363">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'Program.InsertTestType(NpgsqlConnection, string)' could contain the following variables 'newTestType_in'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="381">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'Program.InsertTestType(NpgsqlConnection, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="363">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Program.InsertTestType(NpgsqlConnection, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsBarCodeOk" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.IsBarCodeOk' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsBatteryShown" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.IsBatteryShown' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsDialogShown" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.IsDialogShown' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsLogging" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.IsLogging' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsLOTReady" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.IsLOTReady' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsRollReady" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.IsRollReady' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lotid_roll_id" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.lotid_roll_id' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Main(System.String[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="WinFormBlankTest.BlankTestEnvironment" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="227">'Program.Main(string[])' creates a new instance of 'BlankTestEnvironment' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="WinFormBlankTest.BlankTestSwVersion" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="223">'Program.Main(string[])' creates a new instance of 'BlankTestSwVersion' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Measuring_tubus" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.Measuring_tubus' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#nanosAVGs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.nanosAVGs' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Number" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.Number' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#operators_pk_id" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.operators_pk_id' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OrderBySNAveragesDifferenceRangeAverageEachRoll()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1396">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Program.OrderBySNAveragesDifferenceRangeAverageEachRoll()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1398">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'Program.OrderBySNAveragesDifferenceRangeAverageEachRoll()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OrderRollsByCVValues()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1151">In method 'Program.OrderRollsByCVValues()', call System.IDisposable.Dispose on object 'new NpgsqlCommand(string.Format("select roll_id from roll_result where lot_id=\'{0}\' and roll_is_valid=true and ...", Program.LOT_ID), conn)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1171">Object 'conn' can be disposed more than once in method 'Program.OrderRollsByCVValues()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1171</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1161">Object 'orderByCV' can be disposed more than once in method 'Program.OrderRollsByCVValues()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1161</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1151">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'Program.OrderRollsByCVValues()' could contain the following variables 'Program.LOT_ID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1158">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'Program.OrderRollsByCVValues()' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="1151">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Program.OrderRollsByCVValues()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcessDBHost()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="412">'Program.ProcessDBHost()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="DBConnection" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="412">Correct the spelling of the unrecognized token 'DBConnection' in the literal '"A DBConnection konfigurációs tulajdonság lehetséges értékei: release,debug,local..."'.</Issue>
            </Message>
            <Message Id="Jelenleg" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="412">Correct the spelling of the unrecognized token 'Jelenleg' in the literal '"A DBConnection konfigurációs tulajdonság lehetséges értékei: release,debug,local..."'.</Issue>
            </Message>
            <Message Id="konfigurációs" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="412">Correct the spelling of the unrecognized token 'konfigurációs' in the literal '"A DBConnection konfigurációs tulajdonság lehetséges értékei: release,debug,local..."'.</Issue>
            </Message>
            <Message Id="lehetséges" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="412">Correct the spelling of the unrecognized token 'lehetséges' in the literal '"A DBConnection konfigurációs tulajdonság lehetséges értékei: release,debug,local..."'.</Issue>
            </Message>
            <Message Id="megadott" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="412">Correct the spelling of the unrecognized token 'megadott' in the literal '"A DBConnection konfigurációs tulajdonság lehetséges értékei: release,debug,local..."'.</Issue>
            </Message>
            <Message Id="tulajdonság" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="412">Correct the spelling of the unrecognized token 'tulajdonság' in the literal '"A DBConnection konfigurációs tulajdonság lehetséges értékei: release,debug,local..."'.</Issue>
            </Message>
            <Message Id="értékei" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="412">Correct the spelling of the unrecognized token 'értékei' in the literal '"A DBConnection konfigurációs tulajdonság lehetséges értékei: release,debug,local..."'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="412">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Program.ProcessDBHost()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QueriesMaxPrimaryKeysThenSetTheSequencesValue(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="connectionFromGetMaxPkIds" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="427">Parameter 'connectionFromGetMaxPkIds' of 'Program.QueriesMaxPrimaryKeysThenSetTheSequencesValue(string, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="connectionToSetSequence" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="427">Parameter 'connectionToSetSequence' of 'Program.QueriesMaxPrimaryKeysThenSetTheSequencesValue(string, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#rollCounter" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.rollCounter' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#rollids" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.rollids' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RollIDToSN" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.RollIDToSN' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectedLotToMeasure" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.SelectedLotToMeasure' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectedSNIDsInLimitBlank" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.SelectedSNIDsInLimitBlank' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectedSNIDsInLimitHomogenity" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.SelectedSNIDsInLimitHomogenity' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#serial_input_pk_id" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.serial_input_pk_id' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetSequencesValues(System.Int32,System.String,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="513">Object 'localConn' can be disposed more than once in method 'Program.SetSequencesValues(int, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 513</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="501">'Program.SetSequencesValues(int, string, string)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="493">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'Program.SetSequencesValues(int, string, string)' could contain the following variables 'sequence_in', 'pk_id_in'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="501">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Program.SetSequencesValues(int, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="493">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'Program.SetSequencesValues(int, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="508">Change 'Program.SetSequencesValues(int, string, string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#skippedIndexes" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.skippedIndexes' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sn" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.sn' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#snCountForBlank" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.snCountForBlank' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#snCountForHomogenity" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.snCountForHomogenity' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SNglusAVG" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.SNglusAVG' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#snIDOfRoll" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.snIDOfRoll' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SNIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.SNIDs' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SNnanosAVG" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.SNnanosAVG' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#snThisRoll" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.snThisRoll' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StandardDeviation(System.Collections.Generic.IEnumerable`1&lt;System.Double&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="630">'Program.StandardDeviation(this IEnumerable&lt;double&gt;)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stripInTubes" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.stripInTubes' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tubes_count_in_act_roll" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.tubes_count_in_act_roll' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TubesAVG" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.TubesAVG' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#valid_blank_test_ids" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.valid_blank_test_ids' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#validRolls" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.validRolls' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValueToRollID" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.ValueToRollID' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValueToSN" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.ValueToSN' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#worker" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Program.worker' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#worker_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="Program.cs" Line="393">'Program.worker_DoWork(object, DoWorkEventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ShowResult" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="19">'ShowResult.ShowResult(string)' has a cyclomatic complexity of 114. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="19">'ShowResult.ShowResult(string)' has a maintainability index of 2. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="852">In method 'ShowResult.ShowResult(string)', call System.IDisposable.Dispose on object 'new ResultForm(lot, this.blank_roll_id.ToArray(), this.homo_rollid.ToArray(), this.blank_is_valid.ToArray(), this.homogenity_is_valid.ToArray(), this.avg.ToArray(), this.homogenity_avg.ToArray(), this.cv.ToArray(), this.homogenity_cv.ToArray(), this.date.ToArray(), this.homogenity_date.ToArray(), this.measure_type.ToArray(), this.wrong_strip_count.ToArray(), this.homogenity_h62.ToArray(), this.homogenity_not_h62.ToArray(), this.not_h62_ok)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="866">Object 'connection_in' can be disposed more than once in method 'ShowResult.ShowResult(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 866</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="257">Object 'dr' can be disposed more than once in method 'ShowResult.ShowResult(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 257</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="295">Object 'dr' can be disposed more than once in method 'ShowResult.ShowResult(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 295</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="333">Object 'dr' can be disposed more than once in method 'ShowResult.ShowResult(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 333</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="374">Object 'dr' can be disposed more than once in method 'ShowResult.ShowResult(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 374</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="410">Object 'dr' can be disposed more than once in method 'ShowResult.ShowResult(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 410</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="859">Modify 'ShowResult.ShowResult(string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="449">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string)' could contain the following variables 'actroll', 'lot'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="462">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string)' could contain the following variables 'actroll', 'lot'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="235">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string)' could contain the following variables 'lot'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="313">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string)' could contain the following variables 'lot'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="390">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string)' could contain the following variables 'lot'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="351">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string)' could contain the following variables 'lot', 'actroll'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="274">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string)' could contain the following variables 'roll', 'lot'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="432">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string)' could contain the following variables 'this.stipCount_part1'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="436">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string)' could contain the following variables 'this.stipCount_part2'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="440">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="440">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="474">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="474">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="475">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="475">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="495">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="504">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="522">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="531">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="549">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="557">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="575">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="584">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="602">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="610">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="628">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="636">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="654">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="662">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="680">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="688">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="706">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="714">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="732">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="740">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="758">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="766">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="784">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="792">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="811">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="819">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="244">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="245">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="284">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="285">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="286">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="287">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="322">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="323">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="361">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="362">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="363">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="364">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="365">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="367">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="368">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="398">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="399">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="235">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="256">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="295">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="313">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="390">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="456">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="469">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="274">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="351">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="427">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="429">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="449">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="462">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="19">'ShowResult.ShowResult(string, bool)' has a cyclomatic complexity of 37. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="19">'ShowResult.ShowResult(string, bool)' has a maintainability index of 18. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1102">In method 'ShowResult.ShowResult(string, bool)', call System.IDisposable.Dispose on object 'new BlankResult(lotid, blank_rollid.ToArray(), blank_avg.ToArray(), blank_blank_is_valid.ToArray(), blank_cv.ToArray(), blank_date.ToArray(), blank_tube_count.ToArray(), blank_stddev.ToArray())' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1190">In method 'ShowResult.ShowResult(string, bool)', call System.IDisposable.Dispose on object 'new HomogenityResult(lotid, homogenity_rollid.ToArray(), homogenity_avg.ToArray(), homogenity_is_valid.ToArray(), homogenity_cv.ToArray(), homogenity_date.ToArray(), homogenity_h62.ToArray(), homogenity_not_h62.ToArray(), roll_out_of_range_strip_count.ToArray(), this.homogenity_strip_count.ToArray(), homogenity_tube_count.ToArray(), homogenity_stddev.ToArray())' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1280">In method 'ShowResult.ShowResult(string, bool)', call System.IDisposable.Dispose on object 'new RollResults(lotid, this.roll_roll_id.ToArray(), roll_avg.ToArray(), roll_avg_is_valid.ToArray(), roll_cv.ToArray(), roll_cv_is_valid.ToArray(), this.roll_date.ToArray(), this.roll_strip_count.ToArray(), roll_out_of_range_strip_count.ToArray(), roll_ok.ToArray())' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1294">Object 'conn' can be disposed more than once in method 'ShowResult.ShowResult(string, bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1294</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1038">Object 'dr' can be disposed more than once in method 'ShowResult.ShowResult(string, bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1038</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1059">Object 'dr' can be disposed more than once in method 'ShowResult.ShowResult(string, bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1059</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1094">Object 'dr' can be disposed more than once in method 'ShowResult.ShowResult(string, bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1094</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1131">Object 'dr' can be disposed more than once in method 'ShowResult.ShowResult(string, bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1131</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1180">Object 'dr' can be disposed more than once in method 'ShowResult.ShowResult(string, bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1180</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1221">Object 'dr' can be disposed more than once in method 'ShowResult.ShowResult(string, bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1221</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1271">Object 'dr' can be disposed more than once in method 'ShowResult.ShowResult(string, bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1271</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1287">Modify 'ShowResult.ShowResult(string, bool)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Collections.Generic.List`1&lt;System.Boolean&gt;" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="966">'ShowResult.ShowResult(string, bool)' creates a new instance of 'List&lt;bool&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="968">'ShowResult.ShowResult(string, bool)' creates a new instance of 'List&lt;bool&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="997">'ShowResult.ShowResult(string, bool)' creates a new instance of 'List&lt;bool&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="998">'ShowResult.ShowResult(string, bool)' creates a new instance of 'List&lt;bool&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1005">'ShowResult.ShowResult(string, bool)' creates a new instance of 'List&lt;bool&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1006">'ShowResult.ShowResult(string, bool)' creates a new instance of 'List&lt;bool&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.Collections.Generic.List`1&lt;System.Double&gt;" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="969">'ShowResult.ShowResult(string, bool)' creates a new instance of 'List&lt;double&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="970">'ShowResult.ShowResult(string, bool)' creates a new instance of 'List&lt;double&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.Collections.Generic.List`1&lt;System.Int32&gt;" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="967">'ShowResult.ShowResult(string, bool)' creates a new instance of 'List&lt;int&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="971">'ShowResult.ShowResult(string, bool)' creates a new instance of 'List&lt;int&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="972">'ShowResult.ShowResult(string, bool)' creates a new instance of 'List&lt;int&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1237">'ShowResult.ShowResult(string, bool)' creates a new instance of 'List&lt;int&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1238">'ShowResult.ShowResult(string, bool)' creates a new instance of 'List&lt;int&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="valid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="19">In member 'ShowResult.ShowResult(string, bool)', correct the casing of 'valid' in parameter name 'is_valid' by changing it to 'Valid'.</Issue>
            </Message>
            <Message Id="lotid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="19">In method 'ShowResult.ShowResult(string, bool)', correct the spelling of 'lotid' in parameter name 'lotid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="19">In member 'ShowResult.ShowResult(string, bool)', remove the underscores from parameter name 'is_valid'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1144">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string, bool)' could contain the following variables 'act_roll_id', 'lotid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1017">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string, bool)' could contain the following variables 'lotid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1043">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string, bool)' could contain the following variables 'lotid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1071">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string, bool)' could contain the following variables 'lotid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1113">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string, bool)' could contain the following variables 'lotid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1203">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string, bool)' could contain the following variables 'lotid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1247">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string, bool)' could contain the following variables 'lotid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="is_valid" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="19">Parameter 'is_valid' of 'ShowResult.ShowResult(string, bool)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1081">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1156">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1259">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1260">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1261">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1082">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1157">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1263">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1080">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1083">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1085">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1154">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1155">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1158">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1256">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1257">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1258">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1084">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1159">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1160">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1161">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1162">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1164">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1166">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1166">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1262">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1264">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1027">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1028">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1051">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1079">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1121">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1122">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1153">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1211">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1212">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1255">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1017">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1038">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1043">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1071">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1113">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1203">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1247">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1144">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="937">In method 'ShowResult.ShowResult(string, string)', call System.IDisposable.Dispose on object 'new BlankResult(lotid, this.blank_roll_id.ToArray(), this.blank_avg.ToArray(), this.blank_blank_is_valid.ToArray(), this.blank_cv.ToArray(), this.blank_date.ToArray(), this.blank_tube_count.ToArray(), this.blank_stddev.ToArray())' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="930">Object 'dr' can be disposed more than once in method 'ShowResult.ShowResult(string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 930</Issue>
            </Message>
            <Message Id="lotid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="19">In method 'ShowResult.ShowResult(string, string)', correct the spelling of 'lotid' in parameter name 'lotid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="rollid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="19">In method 'ShowResult.ShowResult(string, string)', correct the spelling of 'rollid' in parameter name 'rollid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="909">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string, string)' could contain the following variables 'lotid', 'rollid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="919">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="920">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="918">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="921">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="923">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="922">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="917">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="909">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="164">In method 'ShowResult.ShowResult(string, string, string)', call System.IDisposable.Dispose on object 'new BlankResult(lotid, rollid, meastype, this.glu.ToArray(), this.nano_amper.ToArray(), this.sn.ToArray(), this.barcode.ToArray(), this.remeasured.ToArray())' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="210">Object 'connection_in' can be disposed more than once in method 'ShowResult.ShowResult(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 210</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="119">Object 'dr' can be disposed more than once in method 'ShowResult.ShowResult(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 119</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="157">Object 'dr' can be disposed more than once in method 'ShowResult.ShowResult(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 157</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="192">Object 'dr' can be disposed more than once in method 'ShowResult.ShowResult(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 192</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="205">Modify 'ShowResult.ShowResult(string, string, string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="WinFormBlankTest.UI.Forms.BlankResult" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="164">'ShowResult.ShowResult(string, string, string)' creates a new instance of 'BlankResult' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="lotid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="19">In method 'ShowResult.ShowResult(string, string, string)', correct the spelling of 'lotid' in parameter name 'lotid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="meastype" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="19">In method 'ShowResult.ShowResult(string, string, string)', correct the spelling of 'meastype' in parameter name 'meastype' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="rollid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="19">In method 'ShowResult.ShowResult(string, string, string)', correct the spelling of 'rollid' in parameter name 'rollid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="90">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string, string, string)' could contain the following variables 'lotid', 'rollid', 'meastype'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="128">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string, string, string)' could contain the following variables 'lotid', 'rollid', 'meastype'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="169">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ShowResult.ShowResult(string, string, string)' could contain the following variables 'pk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="108">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="146">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="180">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="181">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="104">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="105">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="142">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="143">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="182">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="100">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="106">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="138">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="144">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="101">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="102">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="103">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="107">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="139">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="140">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="141">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="145">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="178">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="179">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="183">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="169">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="90">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="128">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.ShowResult(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="87">In externally visible method 'ShowResult.ShowResult(string, string, string)', validate parameter 'meastype' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.avg' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'ShowResult.avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#barcode" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.barcode' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.barcode' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#blank_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.blank_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'ShowResult.blank_avg' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'ShowResult.blank_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#blank_blank_is_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.blank_blank_is_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'ShowResult.blank_blank_is_valid' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#blank_cv" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.blank_cv' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'ShowResult.blank_cv' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#blank_date" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.blank_date' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'ShowResult.blank_date' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#blank_is_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.blank_is_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.blank_is_valid' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#blank_roll_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.blank_roll_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.blank_roll_id' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#blank_stddev" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.blank_stddev' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'ShowResult.blank_stddev' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="stddev" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'stddev' in member name 'ShowResult.blank_stddev' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#blank_tube_count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.blank_tube_count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'ShowResult.blank_tube_count' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ClearVariablesWithDBData(System.String,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.Double&gt;,System.Collections.Generic.List`1&lt;System.Boolean&gt;,System.Collections.Generic.List`1&lt;System.Double&gt;,System.Collections.Generic.List`1&lt;System.Boolean&gt;,System.Collections.Generic.List`1&lt;System.DateTime&gt;,System.Collections.Generic.List`1&lt;System.Int32&gt;,System.Collections.Generic.List`1&lt;System.Int32&gt;,System.Collections.Generic.List`1&lt;System.Boolean&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1318">The 'this' parameter (or 'Me' in Visual Basic) of 'ShowResult.ClearVariablesWithDBData(string, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;int&gt;, List&lt;int&gt;, List&lt;bool&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="lotid" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1318">Parameter 'lotid' of 'ShowResult.ClearVariablesWithDBData(string, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;int&gt;, List&lt;int&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="roll_avg" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1318">Parameter 'roll_avg' of 'ShowResult.ClearVariablesWithDBData(string, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;int&gt;, List&lt;int&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="roll_avg_is_valid" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1318">Parameter 'roll_avg_is_valid' of 'ShowResult.ClearVariablesWithDBData(string, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;int&gt;, List&lt;int&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="roll_cv" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1318">Parameter 'roll_cv' of 'ShowResult.ClearVariablesWithDBData(string, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;int&gt;, List&lt;int&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="roll_cv_is_valid" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1318">Parameter 'roll_cv_is_valid' of 'ShowResult.ClearVariablesWithDBData(string, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;int&gt;, List&lt;int&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="roll_date" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1318">Parameter 'roll_date' of 'ShowResult.ClearVariablesWithDBData(string, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;int&gt;, List&lt;int&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="roll_ok" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1318">Parameter 'roll_ok' of 'ShowResult.ClearVariablesWithDBData(string, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;int&gt;, List&lt;int&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="roll_out_of_range_strip_count" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1318">Parameter 'roll_out_of_range_strip_count' of 'ShowResult.ClearVariablesWithDBData(string, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;int&gt;, List&lt;int&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="roll_roll_id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1318">Parameter 'roll_roll_id' of 'ShowResult.ClearVariablesWithDBData(string, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;int&gt;, List&lt;int&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="roll_strip_count" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1318">Parameter 'roll_strip_count' of 'ShowResult.ClearVariablesWithDBData(string, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;int&gt;, List&lt;int&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="roll_date" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1318">'roll_date', a parameter declared in 'ShowResult.ClearVariablesWithDBData(string, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;int&gt;, List&lt;int&gt;, List&lt;bool&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="roll_roll_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1318">'roll_roll_id', a parameter declared in 'ShowResult.ClearVariablesWithDBData(string, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;int&gt;, List&lt;int&gt;, List&lt;bool&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="roll_strip_count" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="1318">'roll_strip_count', a parameter declared in 'ShowResult.ClearVariablesWithDBData(string, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;int&gt;, List&lt;int&gt;, List&lt;bool&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#computer" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.computer' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.computer' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#cv" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.cv' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.cv' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#date" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.date' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.date' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#end_date" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.end_date' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'ShowResult.end_date' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRolls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="878">'ShowResult.GetRolls()' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="ShowResult.cs" Line="882">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ShowResult.GetRolls()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#glu" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.glu' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'ShowResult.glu' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="glu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glu' in member name 'ShowResult.glu' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homo_rollid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.homo_rollid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.homo_rollid' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="rollid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'rollid' in member name 'ShowResult.homo_rollid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.homogenity_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.homogenity_avg' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'ShowResult.homogenity_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ShowResult.homogenity_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_cv" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.homogenity_cv' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.homogenity_cv' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ShowResult.homogenity_cv' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_date" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.homogenity_date' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.homogenity_date' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ShowResult.homogenity_date' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_h62" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.homogenity_h62' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.homogenity_h62' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ShowResult.homogenity_h62' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_is_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.homogenity_is_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.homogenity_is_valid' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ShowResult.homogenity_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_not_h62" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.homogenity_not_h62' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.homogenity_not_h62' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ShowResult.homogenity_not_h62' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_ok" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ShowResult.homogenity_ok' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_roll_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.homogenity_roll_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.homogenity_roll_id' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ShowResult.homogenity_roll_id' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_strip_count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.homogenity_strip_count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'ShowResult.homogenity_strip_count' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ShowResult.homogenity_strip_count' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_strip_count_is_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.homogenity_strip_count_is_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'ShowResult.homogenity_strip_count_is_valid' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ShowResult.homogenity_strip_count_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ShowResult.Instance' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#invalidate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.invalidate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'ShowResult.invalidate' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#is_out_ok" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ShowResult.is_out_ok' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.lot_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.lot_id' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#measure_type" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.measure_type' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.measure_type' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#nano_amper" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.nano_amper' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'ShowResult.nano_amper' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="amper" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'amper' in member name 'ShowResult.nano_amper' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="nano" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'nano' in member name 'ShowResult.nano_amper' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#no_blank_result" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.no_blank_result' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#not_h62_is_valid" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ShowResult.not_h62_is_valid' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#out_is_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.out_is_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'ShowResult.out_is_ok' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pk_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.pk_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'ShowResult.pk_id' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="pk" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'pk' in member name 'ShowResult.pk_id' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#remeasured" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.remeasured' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'ShowResult.remeasured' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="remeasured" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'remeasured' in member name 'ShowResult.remeasured' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_date" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.roll_date' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'ShowResult.roll_date' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.roll_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.roll_id' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_roll_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.roll_roll_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.roll_roll_id' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_strip_count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.roll_strip_count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'ShowResult.roll_strip_count' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sn" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.sn' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'ShowResult.sn' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sn' in member name 'ShowResult.sn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#start_date" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.start_date' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'ShowResult.start_date' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#temperature" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.temperature' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'ShowResult.temperature' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#user" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.user' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ShowResult.user' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#wrong_strip_count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowResult.wrong_strip_count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'ShowResult.wrong_strip_count' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SNTest" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.String,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Homogemnity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="SNTest.cs" Line="24">In method 'SNTest.SNTest(string, string, string, double)', correct the spelling of 'Homogemnity' in parameter name 'diffHomogemnity' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="SNTest.cs" Line="24">In method 'SNTest.SNTest(string, string, string, double)', correct the spelling of 'sn' in parameter name 'sn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="SNTest.cs" Line="31">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'SNTest.SNTest(string, string, string, double)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DiffFromHomogenityAVG" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AVG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest" File="SNTest.cs" Line="54">Correct the casing of 'AVG' in member name 'SNTest.DiffFromHomogenityAVG' by changing it to 'Avg'.</Issue>
            </Message>
            <Message Id="Homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest" File="SNTest.cs" Line="54">Correct the spelling of 'Homogenity' in member name 'SNTest.DiffFromHomogenityAVG' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UserPanel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.IO.Ports.SerialPort)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="21">In member 'UserPanel.UserPanel(SerialPort)', remove the underscores from parameter name '_port'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="238">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'UserPanel.UserPanel(SerialPort)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="208">In externally visible method 'UserPanel.UserPanel(SerialPort)', validate parameter '_port' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.IO.Ports.SerialPort,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="lotid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="149">In method 'UserPanel.UserPanel(SerialPort, string, string)', correct the spelling of 'lotid' in parameter name 'lotid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="149">In method 'UserPanel.UserPanel(SerialPort, string, string)', correct the spelling of 'sn' in parameter name 'snAndRollCode' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="149">In member 'UserPanel.UserPanel(SerialPort, string, string)', remove the underscores from parameter name '_port'.</Issue>
            </Message>
            <Message Id="lotid" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="149">Parameter 'lotid' of 'UserPanel.UserPanel(SerialPort, string, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="155">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'UserPanel.UserPanel(SerialPort, string, string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="189">Replace the call to 'string.operator !=(string, string)' in 'UserPanel.UserPanel(SerialPort, string, string)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="160">In externally visible method 'UserPanel.UserPanel(SerialPort, string, string)', validate parameter '_port' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AppendText(System.String,System.Windows.Forms.Panel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="81">In method 'UserPanel.AppendText(string, Panel)', call System.IDisposable.Dispose on object 'current' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="85">'c', a variable, is cast to type 'RichTextBox' multiple times in method 'UserPanel.AppendText(string, Panel)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="83">In externally visible method 'UserPanel.AppendText(string, Panel)', validate parameter 'myForm' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BARCODE_LENGTH" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BARCODE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'BARCODE' in member name 'UserPanel.BARCODE_LENGTH' by changing it to 'Barcode'.</Issue>
            </Message>
            <Message Id="LENGTH" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LENGTH' in member name 'UserPanel.BARCODE_LENGTH' by changing it to 'Length'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'UserPanel.BARCODE_LENGTH'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChangeText(System.String,System.Windows.Forms.Panel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="103">In method 'UserPanel.ChangeText(string, Panel)', call System.IDisposable.Dispose on object 'current' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="107">'c', a variable, is cast to type 'RichTextBox' multiple times in method 'UserPanel.ChangeText(string, Panel)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="105">In externally visible method 'UserPanel.ChangeText(string, Panel)', validate parameter 'myForm' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dev" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UserPanel.dev' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#errorLabel" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UserPanel.errorLabel' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#firstslot" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'UserPanel.firstslot' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetValuesFromBarcode(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="319">'UserPanel.GetValuesFromBarcode(string)' has a cyclomatic complexity of 41. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="393">Method 'UserPanel.GetValuesFromBarcode(string)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="441">Method 'UserPanel.GetValuesFromBarcode(string)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="471">Method 'UserPanel.GetValuesFromBarcode(string)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="487">Method 'UserPanel.GetValuesFromBarcode(string)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
            </Message>
            <Message Id="WinFormBlankTest.UserPanel.AppendText(System.String,System.Windows.Forms.Panel)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="404">Method 'UserPanel.GetValuesFromBarcode(string)' passes a literal string as parameter 'text' of a call to 'UserPanel.AppendText(string, Panel)'. Retrieve the following string(s) from a resource table instead: "SN:, \nRoll:, \n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="450">Method 'UserPanel.GetValuesFromBarcode(string)' passes a literal string as parameter 'text' of a call to 'UserPanel.AppendText(string, Panel)'. Retrieve the following string(s) from a resource table instead: "SN:, \nRoll:, \n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="468">Method 'UserPanel.GetValuesFromBarcode(string)' passes a literal string as parameter 'text' of a call to 'UserPanel.AppendText(string, Panel)'. Retrieve the following string(s) from a resource table instead: "\nNem megfelelő ROLL azonosító,\n a következő azonosítójú ROLL-t mérje:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="484">Method 'UserPanel.GetValuesFromBarcode(string)' passes a literal string as parameter 'text' of a call to 'UserPanel.AppendText(string, Panel)'. Retrieve the following string(s) from a resource table instead: "\nNem megfelelő ROLL azonosító,\n a következő azonosítójú ROLL-t mérje:".</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="377">'c', a variable, is cast to type 'UserPanel' multiple times in method 'UserPanel.GetValuesFromBarcode(string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="357">'i', a variable, is cast to type 'TextBox' multiple times in method 'UserPanel.GetValuesFromBarcode(string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="359">'i', a variable, is cast to type 'TextBox' multiple times in method 'UserPanel.GetValuesFromBarcode(string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="361">'i', a variable, is cast to type 'TextBox' multiple times in method 'UserPanel.GetValuesFromBarcode(string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="393">'item', a variable, is cast to type 'TextBox' multiple times in method 'UserPanel.GetValuesFromBarcode(string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="394">'item', a variable, is cast to type 'TextBox' multiple times in method 'UserPanel.GetValuesFromBarcode(string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="441">'item', a variable, is cast to type 'TextBox' multiple times in method 'UserPanel.GetValuesFromBarcode(string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="442">'item', a variable, is cast to type 'TextBox' multiple times in method 'UserPanel.GetValuesFromBarcode(string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="Nem" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="468">Correct the spelling of the unrecognized token 'Nem' in the literal '"\nNem megfelelő ROLL azonosító,\n a következő azonosítójú ROLL-t mérje:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="484">Correct the spelling of the unrecognized token 'Nem' in the literal '"\nNem megfelelő ROLL azonosító,\n a következő azonosítójú ROLL-t mérje:"'.</Issue>
            </Message>
            <Message Id="azonosító" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="468">Correct the spelling of the unrecognized token 'azonosító' in the literal '"\nNem megfelelő ROLL azonosító,\n a következő azonosítójú ROLL-t mérje:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="484">Correct the spelling of the unrecognized token 'azonosító' in the literal '"\nNem megfelelő ROLL azonosító,\n a következő azonosítójú ROLL-t mérje:"'.</Issue>
            </Message>
            <Message Id="azonosítójú" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="468">Correct the spelling of the unrecognized token 'azonosítójú' in the literal '"\nNem megfelelő ROLL azonosító,\n a következő azonosítójú ROLL-t mérje:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="484">Correct the spelling of the unrecognized token 'azonosítójú' in the literal '"\nNem megfelelő ROLL azonosító,\n a következő azonosítójú ROLL-t mérje:"'.</Issue>
            </Message>
            <Message Id="következő" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="468">Correct the spelling of the unrecognized token 'következő' in the literal '"\nNem megfelelő ROLL azonosító,\n a következő azonosítójú ROLL-t mérje:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="484">Correct the spelling of the unrecognized token 'következő' in the literal '"\nNem megfelelő ROLL azonosító,\n a következő azonosítójú ROLL-t mérje:"'.</Issue>
            </Message>
            <Message Id="megfelelő" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="468">Correct the spelling of the unrecognized token 'megfelelő' in the literal '"\nNem megfelelő ROLL azonosító,\n a következő azonosítójú ROLL-t mérje:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="484">Correct the spelling of the unrecognized token 'megfelelő' in the literal '"\nNem megfelelő ROLL azonosító,\n a következő azonosítójú ROLL-t mérje:"'.</Issue>
            </Message>
            <Message Id="mérje" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="468">Correct the spelling of the unrecognized token 'mérje' in the literal '"\nNem megfelelő ROLL azonosító,\n a következő azonosítójú ROLL-t mérje:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="484">Correct the spelling of the unrecognized token 'mérje' in the literal '"\nNem megfelelő ROLL azonosító,\n a következő azonosítójú ROLL-t mérje:"'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="341">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'UserPanel.GetValuesFromBarcode(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="423">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'UserPanel.GetValuesFromBarcode(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Int32)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="396">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'UserPanel.GetValuesFromBarcode(string)' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="468">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'UserPanel.GetValuesFromBarcode(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="484">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'UserPanel.GetValuesFromBarcode(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="393">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'UserPanel.GetValuesFromBarcode(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="404">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'UserPanel.GetValuesFromBarcode(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="441">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'UserPanel.GetValuesFromBarcode(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="450">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'UserPanel.GetValuesFromBarcode(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="471">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'UserPanel.GetValuesFromBarcode(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="487">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'UserPanel.GetValuesFromBarcode(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.Designer.cs" Line="80">Method 'UserPanel.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Append".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.Designer.cs" Line="70">Method 'UserPanel.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Clear".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.Designer.cs" Line="109">Method 'UserPanel.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Itt van".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.Designer.cs" Line="133">Method 'UserPanel.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "MasterLOT".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.Designer.cs" Line="121">Method 'UserPanel.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Olvassa be a kódot".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.Designer.cs" Line="150">Method 'UserPanel.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "UserPanel".</Issue>
            </Message>
            <Message Id="Itt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.Designer.cs" Line="109">Correct the spelling of the unrecognized token 'Itt' in the literal '"Itt van"'.</Issue>
            </Message>
            <Message Id="MasterLOT" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.Designer.cs" Line="133">Correct the spelling of the unrecognized token 'MasterLOT' in the literal '"MasterLOT"'.</Issue>
            </Message>
            <Message Id="Olvassa" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.Designer.cs" Line="121">Correct the spelling of the unrecognized token 'Olvassa' in the literal '"Olvassa be a kódot"'.</Issue>
            </Message>
            <Message Id="UserPanel" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.Designer.cs" Line="150">Correct the spelling of the unrecognized token 'UserPanel' in the literal '"UserPanel"'.</Issue>
            </Message>
            <Message Id="kódot" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.Designer.cs" Line="121">Correct the spelling of the unrecognized token 'kódot' in the literal '"Olvassa be a kódot"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'UserPanel.Instance' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UserPanel.label' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lbMeasured" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UserPanel.lbMeasured' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lb' in member name 'UserPanel.lbMeasured' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MasterChb" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UserPanel.MasterChb' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Chb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Chb' in member name 'UserPanel.MasterChb' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#myPort" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UserPanel.myPort' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#myThread" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'UserPanel.myThread' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#number" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UserPanel.number' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ownedPort" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UserPanel.ownedPort' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#richTextBox1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UserPanel.richTextBox1' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetBarCode2TextTo(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BarCode" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="122">The compound word 'BarCode' in member name 'UserPanel.SetBarCode2TextTo(string)' exists as a discrete term. If your usage is intended to be single word, case it as 'Barcode' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="in" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="122">In member 'UserPanel.SetBarCode2TextTo(string)', correct the casing of 'in' in parameter name 'text_in' by changing it to 'In'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="122">In member 'UserPanel.SetBarCode2TextTo(string)', remove the underscores from parameter name 'text_in'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetBarcodeValue(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="290">Method 'UserPanel.SetBarcodeValue(string)' passes 'wrong barcode' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetBarcodeValues(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="533">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'UserPanel.SetBarcodeValues(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="534">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'UserPanel.SetBarcodeValues(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetBarcodeValues2(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="WinFormBlankTest.UserPanel.AppendText(System.String,System.Windows.Forms.Panel)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="581">Method 'UserPanel.SetBarcodeValues2(string)' passes a literal string as parameter 'text' of a call to 'UserPanel.AppendText(string, Panel)'. Retrieve the following string(s) from a resource table instead: "Lot ID:, \n".</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="567">'c', a variable, is cast to type 'UserPanel' multiple times in method 'UserPanel.SetBarcodeValues2(string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="568">'c', a variable, is cast to type 'UserPanel' multiple times in method 'UserPanel.SetBarcodeValues2(string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="569">'c', a variable, is cast to type 'UserPanel' multiple times in method 'UserPanel.SetBarcodeValues2(string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="573">'item', a variable, is cast to type 'TextBox' multiple times in method 'UserPanel.SetBarcodeValues2(string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="575">'item', a variable, is cast to type 'TextBox' multiple times in method 'UserPanel.SetBarcodeValues2(string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="576">'item', a variable, is cast to type 'TextBox' multiple times in method 'UserPanel.SetBarcodeValues2(string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="555">In member 'UserPanel.SetBarcodeValues2(string)', correct the casing of 'id' in parameter name 'lot_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="555">In member 'UserPanel.SetBarcodeValues2(string)', remove the underscores from parameter name 'lot_id'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="556">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'UserPanel.SetBarcodeValues2(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="581">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'UserPanel.SetBarcodeValues2(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="594">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'UserPanel.SetBarcodeValues2(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="595">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'UserPanel.SetBarcodeValues2(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetFocus()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="39">'tb', a variable, is cast to type 'TextBox' multiple times in method 'UserPanel.SetFocus()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="41">'tb', a variable, is cast to type 'TextBox' multiple times in method 'UserPanel.SetFocus()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetFocusToFirst()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="57">'item', a variable, is cast to type 'UserPanel' multiple times in method 'UserPanel.SetFocusToFirst()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="65">'tb', a variable, is cast to type 'TextBox' multiple times in method 'UserPanel.SetFocusToFirst()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="67">'tb', a variable, is cast to type 'TextBox' multiple times in method 'UserPanel.SetFocusToFirst()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tbBarcode" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UserPanel.tbBarcode' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tbBarcode2" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UserPanel.tbBarcode2' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tbBarcode2_TextChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="277">'UserPanel.tbBarcode2_TextChanged(object, EventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TextChangedHandler()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="631">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'UserPanel.TextChangedHandler()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TextChangedHandler2()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserPanel.cs" Line="664">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'UserPanel.TextChangedHandler2()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UserWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserWindow.cs" Line="66">Method 'UserWindow.UserWindow()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " Check - Vérminta:,  - Kör:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserWindow.cs" Line="62">Method 'UserWindow.UserWindow()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " Check".</Issue>
            </Message>
            <Message Id="Kör" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserWindow.cs" Line="66">Correct the spelling of the unrecognized token 'Kör' in the literal '" - Kör:"'.</Issue>
            </Message>
            <Message Id="Vérminta" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserWindow.cs" Line="66">Correct the spelling of the unrecognized token 'Vérminta' in the literal '" Check - Vérminta:"'.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserWindow.cs" Line="62">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'UserWindow.UserWindow()' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserWindow.cs" Line="66">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'UserWindow.UserWindow()' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserWindow.cs" Line="62">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'UserWindow.UserWindow()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserWindow.cs" Line="66">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'UserWindow.UserWindow()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btAccuracyFinished" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UserWindow.btAccuracyFinished' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="bt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'bt' in member name 'UserWindow.btAccuracyFinished' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#frm_FormClosed(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserWindow.cs" Line="169">In method 'UserWindow.frm_FormClosed(object, EventArgs)', call System.IDisposable.Dispose on object 'port' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="frm" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserWindow.cs" Line="162">Correct the casing of 'frm' in member name 'UserWindow.frm_FormClosed(object, EventArgs)' by changing it to 'Frm'.</Issue>
            </Message>
            <Message Id="frm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserWindow.cs" Line="162">Correct the spelling of 'frm' in member name 'UserWindow.frm_FormClosed(object, EventArgs)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserWindow.cs" Line="162">Remove the underscores from member name 'UserWindow.frm_FormClosed(object, EventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#myGC" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UserWindow.myGC' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#myPanel" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'UserWindow.myPanel' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#number" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UserWindow.number' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#portsAvailable" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'UserWindow.portsAvailable' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetButtonFinished()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserWindow.cs" Line="78">Method 'UserWindow.SetButtonFinished()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Következő 16 mérés".</Issue>
            </Message>
            <Message Id="Következő" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserWindow.cs" Line="78">Correct the spelling of the unrecognized token 'Következő' in the literal '"Következő 16 mérés"'.</Issue>
            </Message>
            <Message Id="mérés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserWindow.cs" Line="78">Correct the spelling of the unrecognized token 'mérés' in the literal '"Következő 16 mérés"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#uPanel" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UserWindow.uPanel' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#uPanelPort" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UserWindow.uPanelPort' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#userTables" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'UserWindow.userTables' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UserWindow_Shown(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="UserWindow.cs" Line="215">'item', a variable, is cast to type 'RichTextBox' multiple times in method 'UserWindow.UserWindow_Shown(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WinFormBlankTest.Controller.DataManipulation">
       <Types>
        <Type Name="ExportToCSV" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="CSV" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'CSV' in type name 'ExportToCSV' by changing it to 'Csv'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Windows.Forms.DataGridView,System.Windows.Forms.DataGridView,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Controller\DataManipulation" File="ExportToCSV.cs" Line="15">In member 'ExportToCSV.ExportToCSV(DataGridView, DataGridView, string)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
            <Message Id="dgv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Controller\DataManipulation" File="ExportToCSV.cs" Line="15">In method 'ExportToCSV.ExportToCSV(DataGridView, DataGridView, string)', correct the spelling of 'dgv' in parameter name 'dgvToExport' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Controller\DataManipulation" File="ExportToCSV.cs" Line="15">In method 'ExportToCSV.ExportToCSV(DataGridView, DataGridView, string)', correct the spelling of 'dgv' in parameter name 'dgvToExport2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Controller\DataManipulation" File="ExportToCSV.cs" Line="21">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ExportToCSV.ExportToCSV(DataGridView, DataGridView, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridView" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExportToCSV.dataGridView' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridView2" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExportToCSV.dataGridView2' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToCsV(System.Windows.Forms.DataGridView,System.Windows.Forms.DataGridView,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Controller\DataManipulation" File="ExportToCSV.cs" Line="118">In method 'ExportToCSV.ToCsV(DataGridView, DataGridView, string)', object 'fs' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Controller\DataManipulation" File="ExportToCSV.cs" Line="123">Object 'fs' can be disposed more than once in method 'ExportToCSV.ToCsV(DataGridView, DataGridView, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 123</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Controller\DataManipulation" File="ExportToCSV.cs" Line="30">The 'this' parameter (or 'Me' in Visual Basic) of 'ExportToCSV.ToCsV(DataGridView, DataGridView, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Controller\DataManipulation" File="ExportToCSV.cs" Line="66">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ExportToCSV.ToCsV(DataGridView, DataGridView, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Controller\DataManipulation" File="ExportToCSV.cs" Line="107">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ExportToCSV.ToCsV(DataGridView, DataGridView, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Controller\DataManipulation" File="ExportToCSV.cs" Line="49">Because the behavior of 'Convert.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ExportToCSV.ToCsV(DataGridView, DataGridView, string)' with a call to 'Convert.ToString(string, IFormatProvider)'. If the result of 'Convert.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Controller\DataManipulation" File="ExportToCSV.cs" Line="95">Because the behavior of 'Convert.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ExportToCSV.ToCsV(DataGridView, DataGridView, string)' with a call to 'Convert.ToString(string, IFormatProvider)'. If the result of 'Convert.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StoreCSVFileFinalResults" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="CSV" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'CSV' in type name 'StoreCSVFileFinalResults' by changing it to 'Csv'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#StoreCSVFile()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.GC.Collect" TypeName="AvoidCallingProblematicMethods" Category="Microsoft.Reliability" CheckId="CA2001" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="System.GC.Collect" Certainty="75" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Controller\DataManipulation" File="StoreCSVFileFinalResults.cs" Line="69">Remove the call to GC.Collect from 'StoreCSVFileFinalResults.StoreCSVFile()'. It is usually unnecessary to force garbage collection, and doing so can severely degrade performance.</Issue>
            </Message>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Controller\DataManipulation" File="StoreCSVFileFinalResults.cs" Line="21">'StoreCSVFileFinalResults.StoreCSVFile()' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Controller\DataManipulation" File="StoreCSVFileFinalResults.cs" Line="21">The 'this' parameter (or 'Me' in Visual Basic) of 'StoreCSVFileFinalResults.StoreCSVFile()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WinFormBlankTest.Events">
       <Types>
        <Type Name="StoreToExcelcompatibilityFile" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'StoreToExcelcompatibilityFile' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DeviceReplace" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'StoreToExcelcompatibilityFile.DeviceReplace' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EarlyDribble" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'StoreToExcelcompatibilityFile.EarlyDribble' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ErrorText" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'StoreToExcelcompatibilityFile.ErrorText' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExportDataToCSV()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Events" File="StoreToExcelcompatibilityFile.cs" Line="45">The 'this' parameter (or 'Me' in Visual Basic) of 'StoreToExcelcompatibilityFile.ExportDataToCSV()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#H62" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'StoreToExcelcompatibilityFile.H62' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Invalidate" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'StoreToExcelcompatibilityFile.Invalidate' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LotID" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'StoreToExcelcompatibilityFile.LotID' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NotH62" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'StoreToExcelcompatibilityFile.NotH62' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Remeasureded" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'StoreToExcelcompatibilityFile.Remeasureded' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RollID" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'StoreToExcelcompatibilityFile.RollID' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TubeSN" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'StoreToExcelcompatibilityFile.TubeSN' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#wr" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'StoreToExcelcompatibilityFile.wr' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WrongStep" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'StoreToExcelcompatibilityFile.WrongStep' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WinFormBlankTest.Network">
       <Types>
        <Type Name="PingService" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="21">'PingService.PingService()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;PingService..ctor()&#xD;&#xA;PingService.OnStart():Void&#xD;&#xA;ServiceBase.OnStop():Void</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="24">Be sure to set the DataTable Locale property wherever 'PingService.PingService()' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckFinalResult(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="163">In method 'PingService.CheckFinalResult(string)', call System.IDisposable.Dispose on object 'new NpgsqlCommand(string.Format("SELECT status FROM ping_log WHERE host=\'{0}\'", host_in), cnn)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="195">Object 'cnn' can be disposed more than once in method 'PingService.CheckFinalResult(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 195</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="177">Object 'getStatus' can be disposed more than once in method 'PingService.CheckFinalResult(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 177</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="189">Method 'PingService.CheckFinalResult(string)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Exception: ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="187">Modify 'PingService.CheckFinalResult(string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="163">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'PingService.CheckFinalResult(string)' could contain the following variables 'host_in'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="171">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'PingService.CheckFinalResult(string)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="163">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PingService.CheckFinalResult(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="189">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PingService.CheckFinalResult(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="189">Change 'PingService.CheckFinalResult(string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#data" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'PingService.data' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dtHosts" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PingService.dtHosts' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dt' in member name 'PingService.dtHosts' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HostIsAlive(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="247">In method 'PingService.HostIsAlive(string)', call System.IDisposable.Dispose on object 'pingSender' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="263">Modify 'PingService.HostIsAlive(string)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HostLastStatus(System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="314">Object 'cnn' can be disposed more than once in method 'PingService.HostLastStatus(string, bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 314</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="305">Method 'PingService.HostLastStatus(string, bool)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Exception: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="296">Method 'PingService.HostLastStatus(string, bool)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "obj is null at: ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="303">Modify 'PingService.HostLastStatus(string, bool)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="297">'PingService.HostLastStatus(string, bool)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="289">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'PingService.HostLastStatus(string, bool)' could contain the following variables 'host_in'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="status_in" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="280">Parameter 'status_in' of 'PingService.HostLastStatus(string, bool)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="300">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'PingService.HostLastStatus(string, bool)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="289">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PingService.HostLastStatus(string, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="296">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PingService.HostLastStatus(string, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="297">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PingService.HostLastStatus(string, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="305">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PingService.HostLastStatus(string, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="296">Change 'PingService.HostLastStatus(string, bool)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="305">Change 'PingService.HostLastStatus(string, bool)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hostStatusResult" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'PingService.hostStatusResult' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="383">'PingService.InitializeComponent()' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'PingService.Instance' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RefreshSettings()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="371">In method 'PingService.RefreshSettings()', call System.IDisposable.Dispose on object 'daHosts' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#releaseConnStr" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PingService.releaseConnStr' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Str" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Str' in member name 'PingService.releaseConnStr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#reloadConfigFrequency" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PingService.reloadConfigFrequency' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StatusList" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PingService.StatusList' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'PingService.StatusList' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StoreStatusTransition(System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="357">Object 'storeStatus' can be disposed more than once in method 'PingService.StoreStatusTransition(string, bool)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 357</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="343">Method 'PingService.StoreStatusTransition(string, bool)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "unsuccessfull insert to ping".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="349">Modify 'PingService.StoreStatusTransition(string, bool)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="unsuccessfull" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="343">Correct the spelling of the unrecognized token 'unsuccessfull' in the literal '"unsuccessfull insert to ping"'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="328">The 'this' parameter (or 'Me' in Visual Basic) of 'PingService.StoreStatusTransition(string, bool)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="334">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'PingService.StoreStatusTransition(string, bool)' could contain the following variables 'host_in', 'isAlive_in'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="334">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'PingService.StoreStatusTransition(string, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="343">Change 'PingService.StoreStatusTransition(string, bool)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="352">Change 'PingService.StoreStatusTransition(string, bool)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#threadTask" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PingService.threadTask' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryPing()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="220">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PingService.TryPing()' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\Network" File="PingService.cs" Line="221">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PingService.TryPing()' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WinFormBlankTest.UI.Chart">
       <Types>
        <Type Name="BlankChart" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String[],System.Double[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Chart" File="BlankChart.cs" Line="19">In member 'BlankChart.BlankChart(string[], double[])', correct the casing of 'IDs' in parameter name 'tubeIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BlankChart_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Chart" File="BlankChart.cs" Line="66">In method 'BlankChart.BlankChart_Load(object, EventArgs)', object '&lt;&gt;g__initLocal0' is not disposed along all exception paths. Call System.IDisposable.Dispose on object '&lt;&gt;g__initLocal0' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Chart" File="BlankChart.Designer.cs" Line="31">In method 'BlankChart.InitializeComponent()', object 'chartArea1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'chartArea1' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Chart" File="BlankChart.Designer.cs" Line="32">In method 'BlankChart.InitializeComponent()', object 'legend1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'legend1' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Chart" File="BlankChart.Designer.cs" Line="33">In method 'BlankChart.InitializeComponent()', object 'series1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'series1' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Chart" File="BlankChart.Designer.cs" Line="66">Method 'BlankChart.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Result of the Blank Current Test".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Chart" File="BlankChart.Designer.cs" Line="55">Method 'BlankChart.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "chart1".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pointsArray" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankChart.pointsArray' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#seriesArray" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankChart.seriesArray' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RollMeanBlankCurrent" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Collections.Generic.List`1&lt;System.Double&gt;,System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Chart" File="RollMeanBlankCurrent.cs" Line="19">Change 'List&lt;double&gt;' in 'RollMeanBlankCurrent.RollMeanBlankCurrent(List&lt;double&gt;, List&lt;string&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Chart" File="RollMeanBlankCurrent.cs" Line="19">Change 'List&lt;string&gt;' in 'RollMeanBlankCurrent.RollMeanBlankCurrent(List&lt;double&gt;, List&lt;string&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Ampers" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Chart" File="RollMeanBlankCurrent.cs" Line="19">In method 'RollMeanBlankCurrent.RollMeanBlankCurrent(List&lt;double&gt;, List&lt;string&gt;)', correct the spelling of 'Ampers' in parameter name 'nanoAmpers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="nano" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Chart" File="RollMeanBlankCurrent.cs" Line="19">In method 'RollMeanBlankCurrent.RollMeanBlankCurrent(List&lt;double&gt;, List&lt;string&gt;)', correct the spelling of 'nano' in parameter name 'nanoAmpers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Chart" File="RollMeanBlankCurrent.cs" Line="19">In method 'RollMeanBlankCurrent.RollMeanBlankCurrent(List&lt;double&gt;, List&lt;string&gt;)', correct the spelling of 'sn' in parameter name 'sn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#chartNanoAmpers" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'RollMeanBlankCurrent.chartNanoAmpers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Ampers" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ampers' in member name 'RollMeanBlankCurrent.chartNanoAmpers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Nano" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Nano' in member name 'RollMeanBlankCurrent.chartNanoAmpers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'RollMeanBlankCurrent.chartNanoAmpers' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Chart" File="RollMeanBlankCurrent.Designer.cs" Line="34">In method 'RollMeanBlankCurrent.InitializeComponent()', object 'chartArea1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'chartArea1' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Chart" File="RollMeanBlankCurrent.Designer.cs" Line="35">In method 'RollMeanBlankCurrent.InitializeComponent()', object 'legend1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'legend1' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Chart" File="RollMeanBlankCurrent.Designer.cs" Line="36">In method 'RollMeanBlankCurrent.InitializeComponent()', object 'series1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'series1' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Chart" File="RollMeanBlankCurrent.Designer.cs" Line="106">Method 'RollMeanBlankCurrent.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Vials Values of Roll, and Roll Average(red) after Blank Current Test".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Chart" File="RollMeanBlankCurrent.Designer.cs" Line="97">Method 'RollMeanBlankCurrent.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "chart1".</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Chart" File="RollMeanBlankCurrent.Designer.cs" Line="49">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollMeanBlankCurrent.InitializeComponent()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#snOfThetubes" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'RollMeanBlankCurrent.snOfThetubes' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Thetubes" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Thetubes' in member name 'RollMeanBlankCurrent.snOfThetubes' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sn' in member name 'RollMeanBlankCurrent.snOfThetubes' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'RollMeanBlankCurrent.snOfThetubes' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WinFormBlankTest.UI.Forms">
       <Types>
        <Type Name="Accuracy_vials_form" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="form" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'form' in type name 'Accuracy_vials_form' by changing it to 'Form'.</Issue>
          </Message>
          <Message Id="vials" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'vials' in type name 'Accuracy_vials_form' by changing it to 'Vials'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'Accuracy_vials_form'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="72">'Accuracy_vials_form.button1_Click(object, EventArgs)' has a cyclomatic complexity of 26. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="185">Object 'conn' can be disposed more than once in method 'Accuracy_vials_form.button1_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 185</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Method 'Accuracy_vials_form.button1_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "A hőmérsékletnek 20 és 26 celsius fok közé kell esni!, A HCT-nek 39 és 45 százal...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="198">Method 'Accuracy_vials_form.button1_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Minden értéket meg kell adni!".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="178">Modify 'Accuracy_vials_form.button1_Click(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.DateTime.TryParse(System.String,System.DateTime@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="91">'Accuracy_vials_form.button1_Click(object, EventArgs)' calls 'DateTime.TryParse(string, out DateTime)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
            <Message Id="System.Double.TryParse(System.String,System.Double@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="88">'Accuracy_vials_form.button1_Click(object, EventArgs)' calls 'double.TryParse(string, out double)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="89">'Accuracy_vials_form.button1_Click(object, EventArgs)' calls 'double.TryParse(string, out double)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="90">'Accuracy_vials_form.button1_Click(object, EventArgs)' calls 'double.TryParse(string, out double)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
            <Message Id="Nem" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'Nem' in the literal '"Nem megfelelő a lejárati idő: "'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'Nem' in the literal '"Nem megfelelő formátum:"'.</Issue>
            </Message>
            <Message Id="adni" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="198">Correct the spelling of the unrecognized token 'adni' in the literal '"Minden értéket meg kell adni!"'.</Issue>
            </Message>
            <Message Id="esni" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'esni' in the literal '"A HCT-nek 39 és 45 százalék közé kell esni!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'esni' in the literal '"A hőmérsékletnek 20 és 26 celsius fok közé kell esni!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'esni' in the literal '"A páratartalomnak 20 és 45 RH% közé kell esni!"'.</Issue>
            </Message>
            <Message Id="fok" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'fok' in the literal '"A hőmérsékletnek 20 és 26 celsius fok közé kell esni!"'.</Issue>
            </Message>
            <Message Id="formátum" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'formátum' in the literal '"Nem megfelelő formátum:"'.</Issue>
            </Message>
            <Message Id="hőmérsékletnek" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'hőmérsékletnek' in the literal '"A hőmérsékletnek 20 és 26 celsius fok közé kell esni!"'.</Issue>
            </Message>
            <Message Id="idő" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'idő' in the literal '"Nem megfelelő a lejárati idő: "'.</Issue>
            </Message>
            <Message Id="kell" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'kell' in the literal '"A HCT-nek 39 és 45 százalék közé kell esni!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'kell' in the literal '"A hőmérsékletnek 20 és 26 celsius fok közé kell esni!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'kell' in the literal '"A páratartalomnak 20 és 45 RH% közé kell esni!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="198">Correct the spelling of the unrecognized token 'kell' in the literal '"Minden értéket meg kell adni!"'.</Issue>
            </Message>
            <Message Id="közé" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'közé' in the literal '"A HCT-nek 39 és 45 százalék közé kell esni!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'közé' in the literal '"A hőmérsékletnek 20 és 26 celsius fok közé kell esni!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'közé' in the literal '"A páratartalomnak 20 és 45 RH% közé kell esni!"'.</Issue>
            </Message>
            <Message Id="lejárati" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'lejárati' in the literal '"Nem megfelelő a lejárati idő: "'.</Issue>
            </Message>
            <Message Id="megfelelő" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'megfelelő' in the literal '"Nem megfelelő a lejárati idő: "'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'megfelelő' in the literal '"Nem megfelelő formátum:"'.</Issue>
            </Message>
            <Message Id="páratartalomnak" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'páratartalomnak' in the literal '"A páratartalomnak 20 és 45 RH% közé kell esni!"'.</Issue>
            </Message>
            <Message Id="százalék" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'százalék' in the literal '"A HCT-nek 39 és 45 százalék közé kell esni!"'.</Issue>
            </Message>
            <Message Id="értéket" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="198">Correct the spelling of the unrecognized token 'értéket' in the literal '"Minden értéket meg kell adni!"'.</Issue>
            </Message>
            <Message Id="és" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'és' in the literal '"A HCT-nek 39 és 45 százalék közé kell esni!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'és' in the literal '"A hőmérsékletnek 20 és 26 celsius fok közé kell esni!"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Correct the spelling of the unrecognized token 'és' in the literal '"A páratartalomnak 20 és 45 RH% közé kell esni!"'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="150">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'Accuracy_vials_form.button1_Click(object, EventArgs)' could contain the following variables 'Program.master_lot_id', 'Program.LOT_ID', 'Program.ExpirityDate'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="117">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="117">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="122">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="122">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="127">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="127">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="141">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="142">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="144">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="147">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="174">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.DateTime)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="91">Because the behavior of 'Convert.ToString(DateTime)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'Convert.ToString(DateTime, IFormatProvider)'. If the result of 'Convert.ToString(DateTime, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="143">Because the behavior of 'Convert.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'Convert.ToString(string, IFormatProvider)'. If the result of 'Convert.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="95">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="103">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="107">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="111">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="150">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="164">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="192">Change 'Accuracy_vials_form.button1_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="198">Change 'Accuracy_vials_form.button1_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="76">Replace the call to 'string.operator ==(string, string)' in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="132">Replace the call to 'string.operator ==(string, string)' in 'Accuracy_vials_form.button1_Click(object, EventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="humidity" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="72">'humidity', a variable declared in 'Accuracy_vials_form.button1_Click(object, EventArgs)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="249">'item', a variable, is cast to type 'TextBox' multiple times in method 'Accuracy_vials_form.button2_Click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillTempAndHumidityAsIPThermo()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="57">Modify 'Accuracy_vials_form.FillTempAndHumidityAsIPThermo()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Double)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="64">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.FillTempAndHumidityAsIPThermo()' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="65">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.FillTempAndHumidityAsIPThermo()' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="44">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.FillTempAndHumidityAsIPThermo()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="54">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Accuracy_vials_form.FillTempAndHumidityAsIPThermo()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#humidity" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Accuracy_vials_form.humidity' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="203">Method 'Accuracy_vials_form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "%".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="533">Method 'Accuracy_vials_form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Accuracy_vials_form".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="458">Method 'Accuracy_vials_form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Clear".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="166">Method 'Accuracy_vials_form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "HCT:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="449">Method 'Accuracy_vials_form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Hibás kód!".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="470">Method 'Accuracy_vials_form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Hőmérséklet:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="88">Method 'Accuracy_vials_form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "LOT azonosító:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="183">Method 'Accuracy_vials_form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Lejárati idő:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="132">Method 'Accuracy_vials_form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Master LOT ID:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="115">Method 'Accuracy_vials_form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Master_lot_calibration:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="103">Method 'Accuracy_vials_form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "OK".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="405">Method 'Accuracy_vials_form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Olvassa be a kódokat:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="499">Method 'Accuracy_vials_form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Program Bezárása".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="149">Method 'Accuracy_vials_form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Páratartalom:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="193">Method 'Accuracy_vials_form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "RH%".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="487">Method 'Accuracy_vials_form.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "°C".</Issue>
            </Message>
            <Message Id="Accuracyvialsform" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="533">Correct the spelling of the unrecognized token 'Accuracyvialsform' in the literal '"Accuracy_vials_form"'.</Issue>
            </Message>
            <Message Id="Bezárása" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="499">Correct the spelling of the unrecognized token 'Bezárása' in the literal '"Program Bezárása"'.</Issue>
            </Message>
            <Message Id="Hibás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="449">Correct the spelling of the unrecognized token 'Hibás' in the literal '"Hibás kód!"'.</Issue>
            </Message>
            <Message Id="Hőmérséklet" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="470">Correct the spelling of the unrecognized token 'Hőmérséklet' in the literal '"Hőmérséklet:"'.</Issue>
            </Message>
            <Message Id="Lejárati" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="183">Correct the spelling of the unrecognized token 'Lejárati' in the literal '"Lejárati idő:"'.</Issue>
            </Message>
            <Message Id="Masterlotcalibration" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="115">Correct the spelling of the unrecognized token 'Masterlotcalibration' in the literal '"Master_lot_calibration:"'.</Issue>
            </Message>
            <Message Id="Olvassa" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="405">Correct the spelling of the unrecognized token 'Olvassa' in the literal '"Olvassa be a kódokat:"'.</Issue>
            </Message>
            <Message Id="Páratartalom" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="149">Correct the spelling of the unrecognized token 'Páratartalom' in the literal '"Páratartalom:"'.</Issue>
            </Message>
            <Message Id="azonosító" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="88">Correct the spelling of the unrecognized token 'azonosító' in the literal '"LOT azonosító:"'.</Issue>
            </Message>
            <Message Id="idő" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="183">Correct the spelling of the unrecognized token 'idő' in the literal '"Lejárati idő:"'.</Issue>
            </Message>
            <Message Id="kód" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="449">Correct the spelling of the unrecognized token 'kód' in the literal '"Hibás kód!"'.</Issue>
            </Message>
            <Message Id="kódokat" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.Designer.cs" Line="405">Correct the spelling of the unrecognized token 'kódokat' in the literal '"Olvassa be a kódokat:"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LOT" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LOT' in member name 'Accuracy_vials_form.LOT' by changing it to 'Lot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_sn_and_roll" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'Accuracy_vials_form.selected_sn_and_roll' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sn' in member name 'Accuracy_vials_form.selected_sn_and_roll' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Accuracy_vials_form.selected_sn_and_roll' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#temperature" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Accuracy_vials_form.temperature' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textBox1_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="215">'sender', a parameter, is cast to type 'TextBox' multiple times in method 'Accuracy_vials_form.textBox1_KeyDown(object, KeyEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="217">'sender', a parameter, is cast to type 'TextBox' multiple times in method 'Accuracy_vials_form.textBox1_KeyDown(object, KeyEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Accuracy_vials_form.cs" Line="221">'sender', a parameter, is cast to type 'TextBox' multiple times in method 'Accuracy_vials_form.textBox1_KeyDown(object, KeyEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AllDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'calculate_item_click' and 'calculate_item_Click' so that they differ by more than case.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Object,System.Object,System.Object,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.Double&gt;,System.Collections.Generic.List`1&lt;System.Double&gt;,System.Collections.Generic.List`1&lt;System.Boolean&gt;,System.Collections.Generic.List`1&lt;System.Boolean&gt;,System.Collections.Generic.List`1&lt;System.DateTime&gt;,System.Collections.Generic.List`1&lt;System.DateTime&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;DateTime&gt;' in 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;DateTime&gt;' in 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;bool&gt;' in 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;bool&gt;' in 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;double&gt;' in 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;double&gt;' in 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;string&gt;' in 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;string&gt;' in 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;string&gt;' in 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;string&gt;' in 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;string&gt;' in 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="amper" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In member 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', correct the casing of 'amper' in parameter name 'nano_amper' by changing it to 'Amper'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In member 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', correct the casing of 'h' in parameter name 'not_h62' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="text" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In member 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', correct the casing of 'text' in parameter name 'error_text' by changing it to 'Text'.</Issue>
            </Message>
            <Message Id="amper" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In method 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', correct the spelling of 'amper' in parameter name 'nano_amper' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="glu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In method 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', correct the spelling of 'glu' in parameter name 'glu' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In method 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', correct the spelling of 'h' in parameter name 'h62' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="nano" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In method 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', correct the spelling of 'nano' in parameter name 'nano_amper' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In method 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', correct the spelling of 'sn' in parameter name 'sn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In member 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', remove the underscores from parameter name 'error_text'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In member 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', remove the underscores from parameter name 'nano_amper'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In member 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', remove the underscores from parameter name 'not_h62'.</Issue>
            </Message>
            <Message Id="result" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Parameter 'result' of 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="231">In externally visible method 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', validate parameter 'lot' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="232">In externally visible method 'AllDataTable.AllDataTable(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', validate parameter 'roll' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.DateTime&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.Double&gt;,System.Collections.Generic.List`1&lt;System.Boolean&gt;,System.Collections.Generic.List`1&lt;System.Boolean&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="170">Modify 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;DateTime&gt;' in 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;bool&gt;' in 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;bool&gt;' in 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;double&gt;' in 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;string&gt;' in 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;string&gt;' in 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;string&gt;' in 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;string&gt;' in 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">Change 'List&lt;string&gt;' in 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In member 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', correct the casing of 'date' in parameter name 'h_date' by changing it to 'Date'.</Issue>
            </Message>
            <Message Id="error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In member 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', correct the casing of 'error' in parameter name 'h_error' by changing it to 'Error'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In member 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', correct the casing of 'h' in parameter name 'not_h62_value' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="text" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In member 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', correct the casing of 'text' in parameter name 'error_text' by changing it to 'Text'.</Issue>
            </Message>
            <Message Id="value" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In member 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', correct the casing of 'value' in parameter name 'h62_value' by changing it to 'Value'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In member 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', correct the casing of 'value' in parameter name 'not_h62_value' by changing it to 'Value'.</Issue>
            </Message>
            <Message Id="glu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In method 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', correct the spelling of 'glu' in parameter name 'glu' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In method 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', correct the spelling of 'h' in parameter name 'h62_value' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In method 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', correct the spelling of 'h' in parameter name 'h_date' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In method 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', correct the spelling of 'h' in parameter name 'h_error' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In method 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', correct the spelling of 'sn' in parameter name 'sn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In member 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', remove the underscores from parameter name 'error_text'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In member 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', remove the underscores from parameter name 'h62_value'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In member 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', remove the underscores from parameter name 'h_date'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In member 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', remove the underscores from parameter name 'h_error'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="29">In member 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', remove the underscores from parameter name 'not_h62_value'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="151">In externally visible method 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', validate parameter 'lot' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="152">In externally visible method 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', validate parameter 'roll' before using it.</Issue>
            </Message>
            <Message Id="10" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="161">In externally visible method 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', validate parameter 'h62_value' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="157">In externally visible method 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', validate parameter 'sn' before using it.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="159">In externally visible method 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', validate parameter 'h_date' before using it.</Issue>
            </Message>
            <Message Id="4" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="161">In externally visible method 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', validate parameter 'h_error' before using it.</Issue>
            </Message>
            <Message Id="5" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="161">In externally visible method 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', validate parameter 'error_text' before using it.</Issue>
            </Message>
            <Message Id="6" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="161">In externally visible method 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', validate parameter 'user' before using it.</Issue>
            </Message>
            <Message Id="7" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="161">In externally visible method 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', validate parameter 'computer' before using it.</Issue>
            </Message>
            <Message Id="8" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="161">In externally visible method 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', validate parameter 'glu' before using it.</Issue>
            </Message>
            <Message Id="9" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="161">In externally visible method 'AllDataTable.AllDataTable(string, string, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)', validate parameter 'not_h62_value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#accepted_count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.accepted_count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AdjustWidth()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="549">The 'this' parameter (or 'Me' in Visual Basic) of 'AllDataTable.AdjustWidth()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AdjustWidth(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="557">In member 'AllDataTable.AdjustWidth(bool)', correct the casing of 'LOT' in parameter name 'is_LOT' by changing it to 'Lot'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="557">In member 'AllDataTable.AdjustWidth(bool)', remove the underscores from parameter name 'is_LOT'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="557">The 'this' parameter (or 'Me' in Visual Basic) of 'AllDataTable.AdjustWidth(bool)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="is_LOT" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="557">Parameter 'is_LOT' of 'AllDataTable.AdjustWidth(bool)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'AllDataTable.avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bindingSource1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.bindingSource1' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bindingSourceIdentify" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'AllDataTable.bindingSourceIdentify' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bindingSrc" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.bindingSrc' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Src' in member name 'AllDataTable.bindingSrc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#boolTyped" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.boolTyped' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonRow" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.buttonRow' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#calculate_item_click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="830">'AllDataTable.calculate_item_click(object, EventArgs)' has a cyclomatic complexity of 68. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="830">'AllDataTable.calculate_item_click(object, EventArgs)' has a maintainability index of 20. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1128">In method 'AllDataTable.calculate_item_click(object, EventArgs)', call System.IDisposable.Dispose on object 'new CalculatedColumnValuesForm(this.avg, this.sd, this.cv, this.int_avg, this.summary_ints, this.accepted_count, this.not_accepted_count, this.not_h62_error_count, this.h62_error_count, this.tsp, AllDataTable.dataGridAll.Columns[this.column_index].Name)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="836">'sender', a parameter, is cast to type 'DataGridViewCell' multiple times in method 'AllDataTable.calculate_item_click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="832">'sender', a parameter, is cast to type 'DataGridViewColumn' multiple times in method 'AllDataTable.calculate_item_click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="calculate" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="830">Correct the casing of 'calculate' in member name 'AllDataTable.calculate_item_click(object, EventArgs)' by changing it to 'Calculate'.</Issue>
            </Message>
            <Message Id="click" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="830">Correct the casing of 'click' in member name 'AllDataTable.calculate_item_click(object, EventArgs)' by changing it to 'Click'.</Issue>
            </Message>
            <Message Id="item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="830">Correct the casing of 'item' in member name 'AllDataTable.calculate_item_click(object, EventArgs)' by changing it to 'Item'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="830">Remove the underscores from member name 'AllDataTable.calculate_item_click(object, EventArgs)'.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1071">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1124">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1124">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="851">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="889">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="926">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1027">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1041">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1041">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1061">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="976">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1084">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1088">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1092">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1094">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1097">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1104">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1107">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1107">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1114">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1114">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#calculate_item_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2446">'AllDataTable.calculate_item_Click(object, EventArgs)' has a cyclomatic complexity of 68. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2446">'AllDataTable.calculate_item_Click(object, EventArgs)' has a maintainability index of 20. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2738">In method 'AllDataTable.calculate_item_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'new CalculatedColumnValuesForm(this.avg, this.sd, this.cv, this.int_avg, this.summary_ints, this.accepted_count, this.not_accepted_count, this.not_h62_error_count, this.h62_error_count, this.tsp, AllDataTable.dataGridAll.Columns[this.column_index].HeaderText)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2452">'sender', a parameter, is cast to type 'DataGridViewCell' multiple times in method 'AllDataTable.calculate_item_Click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2448">'sender', a parameter, is cast to type 'DataGridViewColumn' multiple times in method 'AllDataTable.calculate_item_Click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="calculate" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2446">Correct the casing of 'calculate' in member name 'AllDataTable.calculate_item_Click(object, EventArgs)' by changing it to 'Calculate'.</Issue>
            </Message>
            <Message Id="item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2446">Correct the casing of 'item' in member name 'AllDataTable.calculate_item_Click(object, EventArgs)' by changing it to 'Item'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2446">Remove the underscores from member name 'AllDataTable.calculate_item_Click(object, EventArgs)'.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2683">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2734">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2734">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2465">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2503">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2539">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2641">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2655">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2655">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2674">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2588">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2694">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2698">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2702">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2704">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2707">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2714">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2717">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2717">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2724">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2724">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ClearAllDataGridData(System.Object,System.Object,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.DateTime&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.Double&gt;,System.Collections.Generic.List`1&lt;System.Boolean&gt;,System.Collections.Generic.List`1&lt;System.Boolean&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="360">The 'this' parameter (or 'Me' in Visual Basic) of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="comp" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="360">Parameter 'comp' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="date" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="360">Parameter 'date' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="error" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="360">Parameter 'error' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="error_text" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="360">Parameter 'error_text' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="glu" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="360">Parameter 'glu' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="h62" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="360">Parameter 'h62' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="lot" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="360">Parameter 'lot' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="not_h62" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="360">Parameter 'not_h62' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="roll" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="360">Parameter 'roll' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="sn" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="360">Parameter 'sn' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="user" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="360">Parameter 'user' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;DateTime&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ClearAllDataGridData(System.Object,System.Object,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.Double&gt;,System.Collections.Generic.List`1&lt;System.Double&gt;,System.Collections.Generic.List`1&lt;System.Boolean&gt;,System.Collections.Generic.List`1&lt;System.Boolean&gt;,System.Collections.Generic.List`1&lt;System.DateTime&gt;,System.Collections.Generic.List`1&lt;System.DateTime&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="316">The 'this' parameter (or 'Me' in Visual Basic) of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="comp" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="316">Parameter 'comp' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="end" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="316">Parameter 'end' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="error" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="316">Parameter 'error' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="error_text" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="316">Parameter 'error_text' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="glu" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="316">Parameter 'glu' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="h62" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="316">Parameter 'h62' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="lot" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="316">Parameter 'lot' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="nano_amper" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="316">Parameter 'nano_amper' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="not_h62" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="316">Parameter 'not_h62' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="roll" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="316">Parameter 'roll' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="sn" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="316">Parameter 'sn' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="start" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="316">Parameter 'start' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="user" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="316">Parameter 'user' of 'AllDataTable.ClearAllDataGridData(object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ClearPropertiesShowAllData()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="291">The 'this' parameter (or 'Me' in Visual Basic) of 'AllDataTable.ClearPropertiesShowAllData()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#column_index" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.column_index' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#column_number" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.column_number' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateAllDataTable()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2106">In method 'AllDataTable.CreateAllDataTable()', call System.IDisposable.Dispose on object 'new AllDataTable(this.selected_result, this.selected_lot_id, this.selected_roll_id, this.selected_serial_numbers, this.selected_users, this.selected_computers, this.selected_error, this.selected_error_text, this.selected_glus, this.selected_nano_ampers, this.selected_not_h62, this.selected_h62, this.selected_start_dates, this.selected_end_dates)' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateAllSNWithRollDataTable()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2097">The 'this' parameter (or 'Me' in Visual Basic) of 'AllDataTable.CreateAllSNWithRollDataTable()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#currCell" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.currCell' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="curr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'curr' in member name 'AllDataTable.currCell' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#cv" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.cv' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridAll" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'AllDataTable.dataGridAll' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridButton" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'AllDataTable.dataGridButton' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridIdentify" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'AllDataTable.dataGridIdentify' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridView1_CellMouseDown(System.Object,System.Windows.Forms.DataGridViewCellMouseEventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="data" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1158">Correct the casing of 'data' in member name 'AllDataTable.dataGridView1_CellMouseDown(object, DataGridViewCellMouseEventArgs)' by changing it to 'Data'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1158">Remove the underscores from member name 'AllDataTable.dataGridView1_CellMouseDown(object, DataGridViewCellMouseEventArgs)'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1158">In externally visible method 'AllDataTable.dataGridView1_CellMouseDown(object, DataGridViewCellMouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dateType" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.dateType' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dgvCells" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.dgvCells' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dgv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dgv' in member name 'AllDataTable.dgvCells' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="buttonRow" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.Designer.cs" Line="16">'AllDataTable' contains field 'AllDataTable.buttonRow' that is of IDisposable type: 'DataGridViewRow'. Change the Dispose method on 'AllDataTable' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#doubleReg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.doubleReg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#doubleTyped" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.doubleTyped' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnumsAndComboBox_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="584">In method 'AllDataTable.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="590">In method 'AllDataTable.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="596">In method 'AllDataTable.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="602">In method 'AllDataTable.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="608">In method 'AllDataTable.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="614">In method 'AllDataTable.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="620">In method 'AllDataTable.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="626">In method 'AllDataTable.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="632">In method 'AllDataTable.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="639">In method 'AllDataTable.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="645">In method 'AllDataTable.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="651">In method 'AllDataTable.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="657">In method 'AllDataTable.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="707">Modify 'AllDataTable.EnumsAndComboBox_Load(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="715">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.EnumsAndComboBox_Load(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="715">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.EnumsAndComboBox_Load(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnumsAndComboBox_Load_Blank(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="404">In method 'AllDataTable.EnumsAndComboBox_Load_Blank(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="410">In method 'AllDataTable.EnumsAndComboBox_Load_Blank(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="416">In method 'AllDataTable.EnumsAndComboBox_Load_Blank(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="422">In method 'AllDataTable.EnumsAndComboBox_Load_Blank(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="428">In method 'AllDataTable.EnumsAndComboBox_Load_Blank(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="437">In method 'AllDataTable.EnumsAndComboBox_Load_Blank(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="443">In method 'AllDataTable.EnumsAndComboBox_Load_Blank(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="449">In method 'AllDataTable.EnumsAndComboBox_Load_Blank(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="455">In method 'AllDataTable.EnumsAndComboBox_Load_Blank(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="462">In method 'AllDataTable.EnumsAndComboBox_Load_Blank(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="469">In method 'AllDataTable.EnumsAndComboBox_Load_Blank(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="475">In method 'AllDataTable.EnumsAndComboBox_Load_Blank(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="481">In method 'AllDataTable.EnumsAndComboBox_Load_Blank(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="496">Method 'AllDataTable.EnumsAndComboBox_Load_Blank(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Csíkvágás eredményei a ,  számú LOT, a ,  Roll esetén".</Issue>
            </Message>
            <Message Id="Csíkvágás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="496">Correct the spelling of the unrecognized token 'Csíkvágás' in the literal '"Csíkvágás eredményei a "'.</Issue>
            </Message>
            <Message Id="eredményei" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="496">Correct the spelling of the unrecognized token 'eredményei' in the literal '"Csíkvágás eredményei a "'.</Issue>
            </Message>
            <Message Id="esetén" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="496">Correct the spelling of the unrecognized token 'esetén' in the literal '" Roll esetén"'.</Issue>
            </Message>
            <Message Id="számú" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="496">Correct the spelling of the unrecognized token 'számú' in the literal '" számú LOT, a "'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="533">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.EnumsAndComboBox_Load_Blank(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="533">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.EnumsAndComboBox_Load_Blank(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="496">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.EnumsAndComboBox_Load_Blank(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#false_items" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.false_items' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getSortOrder(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2800">The 'this' parameter (or 'Me' in Visual Basic) of 'AllDataTable.getSortOrder(int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#h62_error_count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.h62_error_count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_color" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.homogenity_color' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'AllDataTable.homogenity_color' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#i" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.i' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'AllDataTable.i'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#idReg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.idReg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.Designer.cs" Line="56">Method 'AllDataTable.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "AllDataTable".</Issue>
            </Message>
            <Message Id="AllDataTable" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.Designer.cs" Line="56">Correct the spelling of the unrecognized token 'AllDataTable' in the literal '"AllDataTable"'.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.Designer.cs" Line="32">Be sure to set the DataSet Locale property wherever 'AllDataTable.InitializeComponent()' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#int_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.int_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'AllDataTable.int_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#intTyped" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.intTyped' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="int" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error">Consider replacing the language-specific data type identifier 'int' in member name 'AllDataTable.intTyped' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#invalidate_item_clicked(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1479">In method 'AllDataTable.invalidate_item_clicked(object, EventArgs)', call System.IDisposable.Dispose on object 'new Dialoge(this.selected_lot_id.ToString(), this.selected_roll_id.ToString(), this.measuretype, true)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1483">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.invalidate_item_clicked(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1483">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.invalidate_item_clicked(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1483">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.invalidate_item_clicked(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.lot_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_to_invalidate" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'AllDataTable.lot_to_invalidate' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lotid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.lotid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lotid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lotid' in member name 'AllDataTable.lotid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#measure_to_invalidate" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'AllDataTable.measure_to_invalidate' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#measure_type" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.measure_type' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'AllDataTable.measure_type' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#measuretype" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.measuretype' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="measuretype" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'measuretype' in member name 'AllDataTable.measuretype' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#mouse_method(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="method" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1147">Correct the casing of 'method' in member name 'AllDataTable.mouse_method(object, EventArgs)' by changing it to 'Method'.</Issue>
            </Message>
            <Message Id="mouse" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1147">Correct the casing of 'mouse' in member name 'AllDataTable.mouse_method(object, EventArgs)' by changing it to 'Mouse'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1147">Remove the underscores from member name 'AllDataTable.mouse_method(object, EventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#not_accepted_count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.not_accepted_count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#not_h62_error_count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.not_h62_error_count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#object_item" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.object_item' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#remeasure_item" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.remeasure_item' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="remeasure" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'remeasure' in member name 'AllDataTable.remeasure_item' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#remeasure_item_clicked(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1817">In method 'AllDataTable.remeasure_item_clicked(object, EventArgs)', call System.IDisposable.Dispose on object 'new Dialoge(this.selected_lot_id.ToString(), this.selected_roll_id.ToString(), this.measuretype)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1821">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.remeasure_item_clicked(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1821">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.remeasure_item_clicked(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1821">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.remeasure_item_clicked(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.roll_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_to_invalidate" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'AllDataTable.roll_to_invalidate' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#rollid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.rollid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="rollid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'rollid' in member name 'AllDataTable.rollid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#row_number" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.row_number' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sd" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.sd' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sd' in member name 'AllDataTable.sd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_codes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_codes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'AllDataTable.selected_codes' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_computers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_computers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'AllDataTable.selected_computers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_device_replace" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_device_replace' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'AllDataTable.selected_device_replace' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_early_dribble" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_early_dribble' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'AllDataTable.selected_early_dribble' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_end_dates" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_end_dates' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'AllDataTable.selected_end_dates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_error" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_error' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'AllDataTable.selected_error' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_error_text" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_error_text' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'AllDataTable.selected_error_text' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_fk_errors_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_fk_errors_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'AllDataTable.selected_fk_errors_id' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="fk" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'fk' in member name 'AllDataTable.selected_fk_errors_id' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_glus" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_glus' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'AllDataTable.selected_glus' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="glus" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glus' in member name 'AllDataTable.selected_glus' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_h62" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_h62' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'AllDataTable.selected_h62' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_lot_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_lot_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_measurytype" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_measurytype' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="measurytype" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'measurytype' in member name 'AllDataTable.selected_measurytype' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_nano_ampers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_nano_ampers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'AllDataTable.selected_nano_ampers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="ampers" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'ampers' in member name 'AllDataTable.selected_nano_ampers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="nano" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'nano' in member name 'AllDataTable.selected_nano_ampers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_not_h62" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_not_h62' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'AllDataTable.selected_not_h62' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_result" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_result' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_result_ids" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_result_ids' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'AllDataTable.selected_result_ids' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_roll_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_roll_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_rolls" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_rolls' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'AllDataTable.selected_rolls' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_serial_numbers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_serial_numbers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'AllDataTable.selected_serial_numbers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_sn_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_sn_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sn' in member name 'AllDataTable.selected_sn_id' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_start_dates" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_start_dates' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'AllDataTable.selected_start_dates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_temp" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_temp' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'AllDataTable.selected_temp' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_users" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.selected_users' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'AllDataTable.selected_users' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetButtonOk()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2987">Method 'AllDataTable.SetButtonOk()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "OK".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetInvalidatedClickedRoll(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1515">'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' has a cyclomatic complexity of 37. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1798">Object 'conn' can be disposed more than once in method 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1798</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1595">Object 'dr' can be disposed more than once in method 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1595</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1662">Object 'dr' can be disposed more than once in method 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1662</Issue>
            </Message>
            <Message Id="id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1515">In member 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)', correct the casing of 'id' in parameter name 'lot_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1515">In member 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)', correct the casing of 'id' in parameter name 'roll_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="measuretype" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1515">In method 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)', correct the spelling of 'measuretype' in parameter name 'measuretype' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1515">In member 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)', remove the underscores from parameter name 'lot_id'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1515">In member 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)', remove the underscores from parameter name 'roll_id'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1610">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'Convert.ToInt32(pk)'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1677">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'actpk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1535">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1701">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1720">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1740">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1557">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'measuretype'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1575">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'measuretype'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1624">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'pk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1642">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'pk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1769">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'this.remeasured_lotid', 'this.remeasured_rollid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1584">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1651">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1610">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1677">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1535">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1701">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1720">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1740">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1769">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1557">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1575">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1624">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1642">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1515">In externally visible method 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)', validate parameter 'measuretype' before using it.</Issue>
            </Message>
            <Message Id="lot_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1515">'lot_id', a parameter declared in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="measuretype" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1515">'measuretype', a parameter declared in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="roll_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1515">'roll_id', a parameter declared in 'AllDataTable.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetRemeasuredClickedRoll(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2120">'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' has a cyclomatic complexity of 37. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2400">Object 'conn' can be disposed more than once in method 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2400</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2200">Object 'dr' can be disposed more than once in method 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2200</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2264">Object 'dr' can be disposed more than once in method 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2264</Issue>
            </Message>
            <Message Id="id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2120">In member 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)', correct the casing of 'id' in parameter name 'lot_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2120">In member 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)', correct the casing of 'id' in parameter name 'roll_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Remeasured" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2120">Correct the spelling of 'Remeasured' in member name 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="measuretype" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2120">In method 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)', correct the spelling of 'measuretype' in parameter name 'measuretype' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2120">In member 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)', remove the underscores from parameter name 'lot_id'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2120">In member 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)', remove the underscores from parameter name 'roll_id'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2215">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'Convert.ToInt32(pk)'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2279">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'actpk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2140">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2303">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2322">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2342">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2162">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'measuretype'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2180">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'measuretype'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2227">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'pk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2244">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'pk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2371">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'this.remeasured_lotid', 'this.remeasured_rollid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2189">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2253">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2215">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2279">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2140">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2303">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2322">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2342">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2371">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2162">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2180">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2227">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2244">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2120">In externally visible method 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)', validate parameter 'measuretype' before using it.</Issue>
            </Message>
            <Message Id="lot_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2120">'lot_id', a parameter declared in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="measuretype" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2120">'measuretype', a parameter declared in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="roll_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2120">'roll_id', a parameter declared in 'AllDataTable.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowContextMenu(System.Windows.Forms.DataGridViewCell)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="761">In method 'AllDataTable.ShowContextMenu(DataGridViewCell)', call System.IDisposable.Dispose on object 'cm' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MenuItem.#ctor(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="765">Method 'AllDataTable.ShowContextMenu(DataGridViewCell)' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Adatok kiemelése színnel, ,  oszlop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="763">Method 'AllDataTable.ShowContextMenu(DataGridViewCell)' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Oszlop elrejtése:,  oszlop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="764">Method 'AllDataTable.ShowContextMenu(DataGridViewCell)' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Értékekből avg,stddev,cv vagy összeg számolás:,  oszlop".</Issue>
            </Message>
            <Message Id="Adatok" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="765">Correct the spelling of the unrecognized token 'Adatok' in the literal '"Adatok kiemelése színnel, "'.</Issue>
            </Message>
            <Message Id="Oszlop" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="763">Correct the spelling of the unrecognized token 'Oszlop' in the literal '"Oszlop elrejtése:"'.</Issue>
            </Message>
            <Message Id="avg" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="764">Correct the spelling of the unrecognized token 'avg' in the literal '"Értékekből avg,stddev,cv vagy összeg számolás:"'.</Issue>
            </Message>
            <Message Id="elrejtése" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="763">Correct the spelling of the unrecognized token 'elrejtése' in the literal '"Oszlop elrejtése:"'.</Issue>
            </Message>
            <Message Id="kiemelése" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="765">Correct the spelling of the unrecognized token 'kiemelése' in the literal '"Adatok kiemelése színnel, "'.</Issue>
            </Message>
            <Message Id="oszlop" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="763">Correct the spelling of the unrecognized token 'oszlop' in the literal '" oszlop"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="764">Correct the spelling of the unrecognized token 'oszlop' in the literal '" oszlop"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="765">Correct the spelling of the unrecognized token 'oszlop' in the literal '" oszlop"'.</Issue>
            </Message>
            <Message Id="stddev" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="764">Correct the spelling of the unrecognized token 'stddev' in the literal '"Értékekből avg,stddev,cv vagy összeg számolás:"'.</Issue>
            </Message>
            <Message Id="számolás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="764">Correct the spelling of the unrecognized token 'számolás' in the literal '"Értékekből avg,stddev,cv vagy összeg számolás:"'.</Issue>
            </Message>
            <Message Id="színnel" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="765">Correct the spelling of the unrecognized token 'színnel' in the literal '"Adatok kiemelése színnel, "'.</Issue>
            </Message>
            <Message Id="vagy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="764">Correct the spelling of the unrecognized token 'vagy' in the literal '"Értékekből avg,stddev,cv vagy összeg számolás:"'.</Issue>
            </Message>
            <Message Id="Értékekből" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="764">Correct the spelling of the unrecognized token 'Értékekből' in the literal '"Értékekből avg,stddev,cv vagy összeg számolás:"'.</Issue>
            </Message>
            <Message Id="összeg" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="764">Correct the spelling of the unrecognized token 'összeg' in the literal '"Értékekből avg,stddev,cv vagy összeg számolás:"'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="763">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.ShowContextMenu(DataGridViewCell)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="764">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.ShowContextMenu(DataGridViewCell)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="765">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.ShowContextMenu(DataGridViewCell)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowContextMenu(System.Windows.Forms.DataGridViewCell,System.Object,System.Object,System.Object,System.Object,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1190">In method 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', call System.IDisposable.Dispose on object 'cm' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MenuItem.#ctor(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1195">Method 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Adatok mutatása(LOT ID:,  ,Roll ID:, ,Tube_SN:, )".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1192">Method 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Invalidálás(LOT ID:,  ,Roll ID:, ,Tube_SN:, )".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1194">Method 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Újramérés(LOT ID:,  ,Roll ID:, ,Tube_SN:, )".</Issue>
            </Message>
            <Message Id="id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">In member 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', correct the casing of 'id' in parameter name 'selected_lot_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">In member 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', correct the casing of 'id' in parameter name 'selected_roll_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">In member 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', correct the casing of 'id' in parameter name 'selected_sn_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="lot" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">In member 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', correct the casing of 'lot' in parameter name 'selected_lot_id' by changing it to 'Lot'.</Issue>
            </Message>
            <Message Id="result" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">In member 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', correct the casing of 'result' in parameter name 'selected_result' by changing it to 'Result'.</Issue>
            </Message>
            <Message Id="roll" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">In member 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', correct the casing of 'roll' in parameter name 'selected_roll_id' by changing it to 'Roll'.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">In member 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', correct the casing of 'sn' in parameter name 'selected_sn_id' by changing it to 'SN'.</Issue>
            </Message>
            <Message Id="type" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">In member 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', correct the casing of 'type' in parameter name 'measure_type' by changing it to 'Type'.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">In method 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', correct the spelling of 'sn' in parameter name 'selected_sn_id' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">In member 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', remove the underscores from parameter name 'measure_type'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">In member 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', remove the underscores from parameter name 'selected_lot_id'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">In member 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', remove the underscores from parameter name 'selected_result'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">In member 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', remove the underscores from parameter name 'selected_roll_id'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">In member 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', remove the underscores from parameter name 'selected_sn_id'.</Issue>
            </Message>
            <Message Id="Adatok" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1195">Correct the spelling of the unrecognized token 'Adatok' in the literal '"Adatok mutatása(LOT ID:"'.</Issue>
            </Message>
            <Message Id="Invalidálás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1192">Correct the spelling of the unrecognized token 'Invalidálás' in the literal '"Invalidálás(LOT ID:"'.</Issue>
            </Message>
            <Message Id="TubeSN" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1192">Correct the spelling of the unrecognized token 'TubeSN' in the literal '",Tube_SN:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1194">Correct the spelling of the unrecognized token 'TubeSN' in the literal '",Tube_SN:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1195">Correct the spelling of the unrecognized token 'TubeSN' in the literal '",Tube_SN:"'.</Issue>
            </Message>
            <Message Id="mutatása" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1195">Correct the spelling of the unrecognized token 'mutatása' in the literal '"Adatok mutatása(LOT ID:"'.</Issue>
            </Message>
            <Message Id="Újramérés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1194">Correct the spelling of the unrecognized token 'Újramérés' in the literal '"Újramérés(LOT ID:"'.</Issue>
            </Message>
            <Message Id="measure_type" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">Parameter 'measure_type' of 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_result" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">Parameter 'selected_result' of 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1192">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1194">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1195">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="measure_type" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">'measure_type', a parameter declared in 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_lot_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">'selected_lot_id', a parameter declared in 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_result" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">'selected_result', a parameter declared in 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_roll_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">'selected_roll_id', a parameter declared in 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_sn_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1186">'selected_sn_id', a parameter declared in 'AllDataTable.ShowContextMenu(DataGridViewCell, object, object, object, object, object)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#showdata_item" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.showdata_item' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="showdata" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'showdata' in member name 'AllDataTable.showdata_item' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#showdata_item_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1228">'AllDataTable.showdata_item_Click(object, EventArgs)' has a cyclomatic complexity of 33. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1453">Object 'conn' can be disposed more than once in method 'AllDataTable.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1453</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1269">Object 'dr' can be disposed more than once in method 'AllDataTable.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1269</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1330">Object 'dr' can be disposed more than once in method 'AllDataTable.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1330</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1383">Object 'dr' can be disposed more than once in method 'AllDataTable.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1383</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1433">Object 'dr' can be disposed more than once in method 'AllDataTable.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1433</Issue>
            </Message>
            <Message TypeName="Provide correct arguments to formatting methods" Category="Microsoft.Usage" CheckId="CA2241" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1361">Method 'AllDataTable.showdata_item_Click(object, EventArgs)' calls 'string.Format(string, object, object, object)' and does not provide a format item for argument "3". The provided format string is: '"select * from blank_test_environment where invalidate=false and remeasured=false..."'</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1251">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.showdata_item_Click(object, EventArgs)' could contain the following variables 'this.selected_lot_id', 'this.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1361">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.showdata_item_Click(object, EventArgs)' could contain the following variables 'this.selected_lot_id', 'this.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1235">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.showdata_item_Click(object, EventArgs)' could contain the following variables 'this.selected_lot_id', 'this.selected_roll_id', 'this.selected_sn_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1305">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.showdata_item_Click(object, EventArgs)' could contain the following variables 'this.selected_lot_id', 'this.selected_roll_id', 'this.selected_sn_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1342">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.showdata_item_Click(object, EventArgs)' could contain the following variables 'this.selected_lot_id', 'this.selected_roll_id', 'this.selected_sn_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1394">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.showdata_item_Click(object, EventArgs)' could contain the following variables 'this.selected_lot_id', 'this.selected_roll_id', 'this.selected_sn_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1411">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.showdata_item_Click(object, EventArgs)' could contain the following variables 'this.selected_lot_id', 'this.selected_roll_id', 'this.selected_sn_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1287">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.showdata_item_Click(object, EventArgs)' could contain the following variables 'this.selected_roll_id', 'this.selected_sn_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1423">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1424">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1425">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1426">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1373">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1374">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1321">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1322">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1375">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1262">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1318">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1323">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1319">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1320">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1371">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1372">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1421">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1422">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1251">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1235">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1287">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1305">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1342">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1361">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1394">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1411">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#showdata_item_MoseDown(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1856">'AllDataTable.showdata_item_MoseDown(object, EventArgs)' has a cyclomatic complexity of 33. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2082">Object 'conn' can be disposed more than once in method 'AllDataTable.showdata_item_MoseDown(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2082</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1897">Object 'dr' can be disposed more than once in method 'AllDataTable.showdata_item_MoseDown(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1897</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1958">Object 'dr' can be disposed more than once in method 'AllDataTable.showdata_item_MoseDown(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1958</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2010">Object 'dr' can be disposed more than once in method 'AllDataTable.showdata_item_MoseDown(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2010</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2062">Object 'dr' can be disposed more than once in method 'AllDataTable.showdata_item_MoseDown(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2062</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2021">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' could contain the following variables 'act_error_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2040">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' could contain the following variables 'act_error_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1915">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' could contain the following variables 'act_result_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1933">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' could contain the following variables 'act_result_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1863">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' could contain the following variables 'this.selected_lot_id', 'this.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1879">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' could contain the following variables 'this.selected_lot_id', 'this.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1970">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' could contain the following variables 'this.selected_lot_id', 'this.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1988">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' could contain the following variables 'this.selected_lot_id', 'this.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2052">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2053">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2054">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2055">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2000">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2001">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1949">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1950">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2002">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1890">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1946">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1951">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1947">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1948">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1998">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1999">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2050">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2051">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1915">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1933">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2021">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="2040">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1863">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1879">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1970">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="AllDataTable.cs" Line="1988">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AllDataTable.showdata_item_MoseDown(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stddev" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.stddev' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="stddev" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'stddev' in member name 'AllDataTable.stddev' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stringTyped" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.stringTyped' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sum" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.sum' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#summary_ints" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.summary_ints' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="ints" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'ints' in member name 'AllDataTable.summary_ints' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sumOfSquaresOfDifferences" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.sumOfSquaresOfDifferences' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#true_items" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.true_items' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tsp" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.tsp' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="tsp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'tsp' in member name 'AllDataTable.tsp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#txbCell" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.txbCell' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="txb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'txb' in member name 'AllDataTable.txbCell' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#types" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.types' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;Type&gt;' in 'AllDataTable.types' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#valueForStore" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.valueForStore' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#values" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AllDataTable.values' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;object&gt;' in 'AllDataTable.values' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#valuesNeededForChart" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'AllDataTable.valuesNeededForChart' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BlankResult" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.String,System.Double[],System.Double[],System.Int32[],System.String[],System.Boolean[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="amp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In member 'BlankResult.BlankResult(string, string, string, double[], double[], int[], string[], bool[])', correct the casing of 'amp' in parameter name 'nano_amp' by changing it to 'Amp'.</Issue>
            </Message>
            <Message Id="type" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In member 'BlankResult.BlankResult(string, string, string, double[], double[], int[], string[], bool[])', correct the casing of 'type' in parameter name 'meas_type' by changing it to 'Type'.</Issue>
            </Message>
            <Message Id="glu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In method 'BlankResult.BlankResult(string, string, string, double[], double[], int[], string[], bool[])', correct the spelling of 'glu' in parameter name 'glu' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="meas" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In method 'BlankResult.BlankResult(string, string, string, double[], double[], int[], string[], bool[])', correct the spelling of 'meas' in parameter name 'meas_type' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="nano" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In method 'BlankResult.BlankResult(string, string, string, double[], double[], int[], string[], bool[])', correct the spelling of 'nano' in parameter name 'nano_amp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="remeas" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In method 'BlankResult.BlankResult(string, string, string, double[], double[], int[], string[], bool[])', correct the spelling of 'remeas' in parameter name 'remeas' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In method 'BlankResult.BlankResult(string, string, string, double[], double[], int[], string[], bool[])', correct the spelling of 'sn' in parameter name 'sn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In member 'BlankResult.BlankResult(string, string, string, double[], double[], int[], string[], bool[])', remove the underscores from parameter name 'meas_type'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In member 'BlankResult.BlankResult(string, string, string, double[], double[], int[], string[], bool[])', remove the underscores from parameter name 'nano_amp'.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'BlankResult.BlankResult(string, string, string, double[], double[], int[], string[], bool[])', validate parameter 'glu' before using it.</Issue>
            </Message>
            <Message Id="4" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'BlankResult.BlankResult(string, string, string, double[], double[], int[], string[], bool[])', validate parameter 'nano_amp' before using it.</Issue>
            </Message>
            <Message Id="5" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="33">In externally visible method 'BlankResult.BlankResult(string, string, string, double[], double[], int[], string[], bool[])', validate parameter 'sn' before using it.</Issue>
            </Message>
            <Message Id="6" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="33">In externally visible method 'BlankResult.BlankResult(string, string, string, double[], double[], int[], string[], bool[])', validate parameter 'bar' before using it.</Issue>
            </Message>
            <Message Id="7" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'BlankResult.BlankResult(string, string, string, double[], double[], int[], string[], bool[])', validate parameter 'remeas' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String[],System.Double[],System.Boolean[],System.Double[],System.DateTime[],System.Int32[],System.Double[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="averages" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In member 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', correct the casing of 'averages' in parameter name 'blank_averages' by changing it to 'Averages'.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In member 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', correct the casing of 'ceve' in parameter name 'blank_ceve' by changing it to 'Ceve'.</Issue>
            </Message>
            <Message Id="count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In member 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', correct the casing of 'count' in parameter name 'tube_count' by changing it to 'Count'.</Issue>
            </Message>
            <Message Id="date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In member 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', correct the casing of 'date' in parameter name 'test_date' by changing it to 'Date'.</Issue>
            </Message>
            <Message Id="is" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In member 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', correct the casing of 'is' in parameter name 'blank_is_valid' by changing it to 'Is'.</Issue>
            </Message>
            <Message Id="stddev" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In member 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', correct the casing of 'stddev' in parameter name 'blank_stddev' by changing it to 'Stddev'.</Issue>
            </Message>
            <Message Id="valid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In member 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', correct the casing of 'valid' in parameter name 'blank_is_valid' by changing it to 'Valid'.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In method 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', correct the spelling of 'ceve' in parameter name 'blank_ceve' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="stddev" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In method 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', correct the spelling of 'stddev' in parameter name 'blank_stddev' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In member 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', remove the underscores from parameter name 'blank_averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In member 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', remove the underscores from parameter name 'blank_ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In member 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', remove the underscores from parameter name 'blank_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In member 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', remove the underscores from parameter name 'blank_stddev'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In member 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', remove the underscores from parameter name 'test_date'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">In member 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', remove the underscores from parameter name 'tube_count'.</Issue>
            </Message>
            <Message Id="blank_stddev" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="15">Parameter 'blank_stddev' of 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="55">In externally visible method 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', validate parameter 'roll' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', validate parameter 'blank_averages' before using it.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', validate parameter 'blank_is_valid' before using it.</Issue>
            </Message>
            <Message Id="4" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', validate parameter 'blank_ceve' before using it.</Issue>
            </Message>
            <Message Id="5" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="63">In externally visible method 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', validate parameter 'test_date' before using it.</Issue>
            </Message>
            <Message Id="6" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="63">In externally visible method 'BlankResult.BlankResult(string, string[], double[], bool[], double[], DateTime[], int[], double[])', validate parameter 'tube_count' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btOK" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'BlankResult.btOK' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridLOT" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'BlankResult.dataGridLOT' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridRoll" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'BlankResult.dataGridRoll' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnumsAndComboBox_Load_For_All(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="85">In method 'BlankResult.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="90">In method 'BlankResult.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="95">In method 'BlankResult.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="101">In method 'BlankResult.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="107">In method 'BlankResult.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="113">In method 'BlankResult.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="118">In method 'BlankResult.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="127">Method 'BlankResult.EnumsAndComboBox_Load_For_All(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Blank teszt eredmények".</Issue>
            </Message>
            <Message Id="eredmények" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="127">Correct the spelling of the unrecognized token 'eredmények' in the literal '"Blank teszt eredmények"'.</Issue>
            </Message>
            <Message Id="teszt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="127">Correct the spelling of the unrecognized token 'teszt' in the literal '"Blank teszt eredmények"'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.cs" Line="130">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'BlankResult.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#i" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankResult.i' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'BlankResult.i'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.Designer.cs" Line="33">Method 'BlankResult.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "BlankResult".</Issue>
            </Message>
            <Message Id="BlankResult" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="BlankResult.Designer.cs" Line="33">Correct the spelling of the unrecognized token 'BlankResult' in the literal '"BlankResult"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#res" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankResult.res' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CalculatedColumnValuesForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="accepted" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In member 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', correct the casing of 'accepted' in parameter name 'not_accepted_count' by changing it to 'Accepted'.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In member 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', correct the casing of 'avg' in parameter name 'int_avg' by changing it to 'Avg'.</Issue>
            </Message>
            <Message Id="count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In member 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', correct the casing of 'count' in parameter name 'accepted_count' by changing it to 'Count'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In member 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', correct the casing of 'count' in parameter name 'not_accepted_count' by changing it to 'Count'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In member 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', correct the casing of 'h' in parameter name 'not_h62' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="ints" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In member 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', correct the casing of 'ints' in parameter name 'summary_ints' by changing it to 'Ints'.</Issue>
            </Message>
            <Message Id="name" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In member 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', correct the casing of 'name' in parameter name 'col_name' by changing it to 'Name'.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In method 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', correct the spelling of 'avg' in parameter name 'avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In method 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', correct the spelling of 'avg' in parameter name 'int_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In method 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', correct the spelling of 'h' in parameter name 'h62' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="ints" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In method 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', correct the spelling of 'ints' in parameter name 'summary_ints' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In method 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', correct the spelling of 'sd' in parameter name 'sd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="tsp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In method 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', correct the spelling of 'tsp' in parameter name 'tsp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In member 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', remove the underscores from parameter name 'accepted_count'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In member 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', remove the underscores from parameter name 'col_name'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In member 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', remove the underscores from parameter name 'int_avg'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In member 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', remove the underscores from parameter name 'not_accepted_count'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In member 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', remove the underscores from parameter name 'not_h62'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">In member 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)', remove the underscores from parameter name 'summary_ints'.</Issue>
            </Message>
            <Message Id="h62" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">Parameter 'h62' of 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="not_h62" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="17">Parameter 'not_h62' of 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="27">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="28">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="29">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="33">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="34">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="38">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="39">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CalculatedColumnValuesForm.CalculatedColumnValuesForm(double, double, double, double, int, int, int, int, int, TimeSpan, string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Close()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.cs" Line="61">Object 'this' can be disposed more than once in method 'CalculatedColumnValuesForm.Close()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 61</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="195">Method 'CalculatedColumnValuesForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A cellák Megfelelő értékeinek száma:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="213">Method 'CalculatedColumnValuesForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A cellák Nem Megfelelő értékeinek száma:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="142">Method 'CalculatedColumnValuesForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A cellák értékeinek CV százaléka:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="131">Method 'CalculatedColumnValuesForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A cellák értékeinek szórása:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="120">Method 'CalculatedColumnValuesForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A cellák értékeinek átlaga:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="109">Method 'CalculatedColumnValuesForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A cellák értékeinek összege:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="78">Method 'CalculatedColumnValuesForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A kiválasztott oszlopból kiszámolt adatok".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="66">Method 'CalculatedColumnValuesForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A {0} számú LOT-ból a {1} számú roll {2} típusú mérése következik".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="283">Method 'CalculatedColumnValuesForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Kiszámolt adatok".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="231">Method 'CalculatedColumnValuesForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Kiválasztott táblázat méréseinek lefutsi ideje:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="248">Method 'CalculatedColumnValuesForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "OK".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="89">Method 'CalculatedColumnValuesForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Oszlop neve:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="99">Method 'CalculatedColumnValuesForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Oszlop típusa:".</Issue>
            </Message>
            <Message Id="Kiszámolt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="283">Correct the spelling of the unrecognized token 'Kiszámolt' in the literal '"Kiszámolt adatok"'.</Issue>
            </Message>
            <Message Id="Kiválasztott" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="231">Correct the spelling of the unrecognized token 'Kiválasztott' in the literal '"Kiválasztott táblázat méréseinek lefutsi ideje:"'.</Issue>
            </Message>
            <Message Id="LOT-ból" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="66">Correct the spelling of the unrecognized token 'LOT-ból' in the literal '"A {0} számú LOT-ból a {1} számú roll {2} típusú mérése következik"'.</Issue>
            </Message>
            <Message Id="Megfelelő" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="195">Correct the spelling of the unrecognized token 'Megfelelő' in the literal '"A cellák Megfelelő értékeinek száma:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="213">Correct the spelling of the unrecognized token 'Megfelelő' in the literal '"A cellák Nem Megfelelő értékeinek száma:"'.</Issue>
            </Message>
            <Message Id="Nem" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="213">Correct the spelling of the unrecognized token 'Nem' in the literal '"A cellák Nem Megfelelő értékeinek száma:"'.</Issue>
            </Message>
            <Message Id="Oszlop" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="89">Correct the spelling of the unrecognized token 'Oszlop' in the literal '"Oszlop neve:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="99">Correct the spelling of the unrecognized token 'Oszlop' in the literal '"Oszlop típusa:"'.</Issue>
            </Message>
            <Message Id="adatok" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="78">Correct the spelling of the unrecognized token 'adatok' in the literal '"A kiválasztott oszlopból kiszámolt adatok"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="283">Correct the spelling of the unrecognized token 'adatok' in the literal '"Kiszámolt adatok"'.</Issue>
            </Message>
            <Message Id="cellák" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="195">Correct the spelling of the unrecognized token 'cellák' in the literal '"A cellák Megfelelő értékeinek száma:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="213">Correct the spelling of the unrecognized token 'cellák' in the literal '"A cellák Nem Megfelelő értékeinek száma:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="142">Correct the spelling of the unrecognized token 'cellák' in the literal '"A cellák értékeinek CV százaléka:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="131">Correct the spelling of the unrecognized token 'cellák' in the literal '"A cellák értékeinek szórása:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="120">Correct the spelling of the unrecognized token 'cellák' in the literal '"A cellák értékeinek átlaga:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="109">Correct the spelling of the unrecognized token 'cellák' in the literal '"A cellák értékeinek összege:"'.</Issue>
            </Message>
            <Message Id="ideje" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="231">Correct the spelling of the unrecognized token 'ideje' in the literal '"Kiválasztott táblázat méréseinek lefutsi ideje:"'.</Issue>
            </Message>
            <Message Id="kiszámolt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="78">Correct the spelling of the unrecognized token 'kiszámolt' in the literal '"A kiválasztott oszlopból kiszámolt adatok"'.</Issue>
            </Message>
            <Message Id="kiválasztott" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="78">Correct the spelling of the unrecognized token 'kiválasztott' in the literal '"A kiválasztott oszlopból kiszámolt adatok"'.</Issue>
            </Message>
            <Message Id="következik" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="66">Correct the spelling of the unrecognized token 'következik' in the literal '"A {0} számú LOT-ból a {1} számú roll {2} típusú mérése következik"'.</Issue>
            </Message>
            <Message Id="lefutsi" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="231">Correct the spelling of the unrecognized token 'lefutsi' in the literal '"Kiválasztott táblázat méréseinek lefutsi ideje:"'.</Issue>
            </Message>
            <Message Id="mérése" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="66">Correct the spelling of the unrecognized token 'mérése' in the literal '"A {0} számú LOT-ból a {1} számú roll {2} típusú mérése következik"'.</Issue>
            </Message>
            <Message Id="méréseinek" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="231">Correct the spelling of the unrecognized token 'méréseinek' in the literal '"Kiválasztott táblázat méréseinek lefutsi ideje:"'.</Issue>
            </Message>
            <Message Id="neve" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="89">Correct the spelling of the unrecognized token 'neve' in the literal '"Oszlop neve:"'.</Issue>
            </Message>
            <Message Id="oszlopból" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="78">Correct the spelling of the unrecognized token 'oszlopból' in the literal '"A kiválasztott oszlopból kiszámolt adatok"'.</Issue>
            </Message>
            <Message Id="száma" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="195">Correct the spelling of the unrecognized token 'száma' in the literal '"A cellák Megfelelő értékeinek száma:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="213">Correct the spelling of the unrecognized token 'száma' in the literal '"A cellák Nem Megfelelő értékeinek száma:"'.</Issue>
            </Message>
            <Message Id="számú" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="66">Correct the spelling of the unrecognized token 'számú' in the literal '"A {0} számú LOT-ból a {1} számú roll {2} típusú mérése következik"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="66">Correct the spelling of the unrecognized token 'számú' in the literal '"A {0} számú LOT-ból a {1} számú roll {2} típusú mérése következik"'.</Issue>
            </Message>
            <Message Id="százaléka" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="142">Correct the spelling of the unrecognized token 'százaléka' in the literal '"A cellák értékeinek CV százaléka:"'.</Issue>
            </Message>
            <Message Id="szórása" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="131">Correct the spelling of the unrecognized token 'szórása' in the literal '"A cellák értékeinek szórása:"'.</Issue>
            </Message>
            <Message Id="táblázat" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="231">Correct the spelling of the unrecognized token 'táblázat' in the literal '"Kiválasztott táblázat méréseinek lefutsi ideje:"'.</Issue>
            </Message>
            <Message Id="típusa" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="99">Correct the spelling of the unrecognized token 'típusa' in the literal '"Oszlop típusa:"'.</Issue>
            </Message>
            <Message Id="típusú" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="66">Correct the spelling of the unrecognized token 'típusú' in the literal '"A {0} számú LOT-ból a {1} számú roll {2} típusú mérése következik"'.</Issue>
            </Message>
            <Message Id="átlaga" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="120">Correct the spelling of the unrecognized token 'átlaga' in the literal '"A cellák értékeinek átlaga:"'.</Issue>
            </Message>
            <Message Id="értékeinek" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="195">Correct the spelling of the unrecognized token 'értékeinek' in the literal '"A cellák Megfelelő értékeinek száma:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="213">Correct the spelling of the unrecognized token 'értékeinek' in the literal '"A cellák Nem Megfelelő értékeinek száma:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="142">Correct the spelling of the unrecognized token 'értékeinek' in the literal '"A cellák értékeinek CV százaléka:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="131">Correct the spelling of the unrecognized token 'értékeinek' in the literal '"A cellák értékeinek szórása:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="120">Correct the spelling of the unrecognized token 'értékeinek' in the literal '"A cellák értékeinek átlaga:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="109">Correct the spelling of the unrecognized token 'értékeinek' in the literal '"A cellák értékeinek összege:"'.</Issue>
            </Message>
            <Message Id="összege" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="CalculatedColumnValuesForm.Designer.cs" Line="109">Correct the spelling of the unrecognized token 'összege' in the literal '"A cellák értékeinek összege:"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#measure" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CalculatedColumnValuesForm.measure' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Dialoge" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Dialoge" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Dialoge' in type name 'Dialoge'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="37">Method 'Dialoge.Dialoge(string, string, string)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Biztos benne, hogy az \', \' számú Lot-ból a \', \' Roll-t minden ,  mérés eredm...".</Issue>
            </Message>
            <Message Id="lotid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="19">In method 'Dialoge.Dialoge(string, string, string)', correct the spelling of 'lotid' in parameter name 'lotid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="rollid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="19">In method 'Dialoge.Dialoge(string, string, string)', correct the spelling of 'rollid' in parameter name 'rollid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Biztos" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="37">Correct the spelling of the unrecognized token 'Biztos' in the literal '"Biztos benne, hogy az \'"'.</Issue>
            </Message>
            <Message Id="Lot-ból" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="37">Correct the spelling of the unrecognized token 'Lot-ból' in the literal '"\' számú Lot-ból a \'"'.</Issue>
            </Message>
            <Message Id="az" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="37">Correct the spelling of the unrecognized token 'az' in the literal '"Biztos benne, hogy az \'"'.</Issue>
            </Message>
            <Message Id="eldobja" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="37">Correct the spelling of the unrecognized token 'eldobja' in the literal '" mérés eredményét eldobja?!"'.</Issue>
            </Message>
            <Message Id="eredményét" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="37">Correct the spelling of the unrecognized token 'eredményét' in the literal '" mérés eredményét eldobja?!"'.</Issue>
            </Message>
            <Message Id="hogy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="37">Correct the spelling of the unrecognized token 'hogy' in the literal '"Biztos benne, hogy az \'"'.</Issue>
            </Message>
            <Message Id="mérés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="37">Correct the spelling of the unrecognized token 'mérés' in the literal '" mérés eredményét eldobja?!"'.</Issue>
            </Message>
            <Message Id="számú" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="37">Correct the spelling of the unrecognized token 'számú' in the literal '"\' számú Lot-ból a \'"'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="37">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'Dialoge.Dialoge(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="54">Method 'Dialoge.Dialoge(string, string, string, bool)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Biztos benne, hogy az \', \' számú Lot-ból a \', \' Roll-t minden ,  mérés eredm...".</Issue>
            </Message>
            <Message Id="lotid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="19">In method 'Dialoge.Dialoge(string, string, string, bool)', correct the spelling of 'lotid' in parameter name 'lotid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="rollid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="19">In method 'Dialoge.Dialoge(string, string, string, bool)', correct the spelling of 'rollid' in parameter name 'rollid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Biztos" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="54">Correct the spelling of the unrecognized token 'Biztos' in the literal '"Biztos benne, hogy az \'"'.</Issue>
            </Message>
            <Message Id="Lot-ból" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="54">Correct the spelling of the unrecognized token 'Lot-ból' in the literal '"\' számú Lot-ból a \'"'.</Issue>
            </Message>
            <Message Id="az" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="54">Correct the spelling of the unrecognized token 'az' in the literal '"Biztos benne, hogy az \'"'.</Issue>
            </Message>
            <Message Id="eredményét" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="54">Correct the spelling of the unrecognized token 'eredményét' in the literal '" mérés eredményét invalidálja?!"'.</Issue>
            </Message>
            <Message Id="hogy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="54">Correct the spelling of the unrecognized token 'hogy' in the literal '"Biztos benne, hogy az \'"'.</Issue>
            </Message>
            <Message Id="invalidálja" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="54">Correct the spelling of the unrecognized token 'invalidálja' in the literal '" mérés eredményét invalidálja?!"'.</Issue>
            </Message>
            <Message Id="mérés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="54">Correct the spelling of the unrecognized token 'mérés' in the literal '" mérés eredményét invalidálja?!"'.</Issue>
            </Message>
            <Message Id="számú" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="54">Correct the spelling of the unrecognized token 'számú' in the literal '"\' számú Lot-ból a \'"'.</Issue>
            </Message>
            <Message Id="invalidate" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="19">Parameter 'invalidate' of 'Dialoge.Dialoge(string, string, string, bool)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="54">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'Dialoge.Dialoge(string, string, string, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddValueToProgressBar()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="152">Object 'this' can be disposed more than once in method 'Dialoge.AddValueToProgressBar()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 152</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="142">Method 'Dialoge.AddValueToProgressBar()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A ,  számú Roll ,  mérésének előkészítése...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="146">Method 'Dialoge.AddValueToProgressBar()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Mérés előkészítve, kérem vegyen elő a ,  számú Lot-ból, ,  azonosítójú tekercset...".</Issue>
            </Message>
            <Message Id="Lot-ból" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="146">Correct the spelling of the unrecognized token 'Lot-ból' in the literal '" számú Lot-ból, "'.</Issue>
            </Message>
            <Message Id="Mérés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="146">Correct the spelling of the unrecognized token 'Mérés' in the literal '"Mérés előkészítve, kérem vegyen elő a "'.</Issue>
            </Message>
            <Message Id="azonosítójú" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="146">Correct the spelling of the unrecognized token 'azonosítójú' in the literal '" azonosítójú tekercset, a "'.</Issue>
            </Message>
            <Message Id="elő" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="146">Correct the spelling of the unrecognized token 'elő' in the literal '"Mérés előkészítve, kérem vegyen elő a "'.</Issue>
            </Message>
            <Message Id="előkészítve" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="146">Correct the spelling of the unrecognized token 'előkészítve' in the literal '"Mérés előkészítve, kérem vegyen elő a "'.</Issue>
            </Message>
            <Message Id="előkészítése" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="142">Correct the spelling of the unrecognized token 'előkészítése' in the literal '" mérésének előkészítése..."'.</Issue>
            </Message>
            <Message Id="kérem" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="146">Correct the spelling of the unrecognized token 'kérem' in the literal '"Mérés előkészítve, kérem vegyen elő a "'.</Issue>
            </Message>
            <Message Id="méréshez" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="146">Correct the spelling of the unrecognized token 'méréshez' in the literal '" méréshez!"'.</Issue>
            </Message>
            <Message Id="mérésének" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="142">Correct the spelling of the unrecognized token 'mérésének' in the literal '" mérésének előkészítése..."'.</Issue>
            </Message>
            <Message Id="számú" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="146">Correct the spelling of the unrecognized token 'számú' in the literal '" számú Lot-ból, "'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="142">Correct the spelling of the unrecognized token 'számú' in the literal '" számú Roll "'.</Issue>
            </Message>
            <Message Id="tekercset" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="146">Correct the spelling of the unrecognized token 'tekercset' in the literal '" azonosítójú tekercset, a "'.</Issue>
            </Message>
            <Message Id="vegyen" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="146">Correct the spelling of the unrecognized token 'vegyen' in the literal '"Mérés előkészítve, kérem vegyen elő a "'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="142">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'Dialoge.AddValueToProgressBar()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="146">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'Dialoge.AddValueToProgressBar()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="100">Method 'Dialoge.button1_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A mért adatok kiszűrése folyamatban, néhány pillanat múlva elkezdődik a ,  mérés...".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="71">Method 'Dialoge.button1_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Figyelmeztetés!".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="71">Method 'Dialoge.button1_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Biztosan érvénytelenné teszi a ,  Lot,,  Roll összes eredményét?".</Issue>
            </Message>
            <Message Id="Biztosan" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="71">Correct the spelling of the unrecognized token 'Biztosan' in the literal '"Biztosan érvénytelenné teszi a "'.</Issue>
            </Message>
            <Message Id="Figyelmeztetés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="71">Correct the spelling of the unrecognized token 'Figyelmeztetés' in the literal '"Figyelmeztetés!"'.</Issue>
            </Message>
            <Message Id="adatok" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="100">Correct the spelling of the unrecognized token 'adatok' in the literal '"A mért adatok kiszűrése folyamatban, néhány pillanat múlva elkezdődik a "'.</Issue>
            </Message>
            <Message Id="azonosítójú" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="100">Correct the spelling of the unrecognized token 'azonosítójú' in the literal '" azonosítójú tekercséből."'.</Issue>
            </Message>
            <Message Id="elkezdődik" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="100">Correct the spelling of the unrecognized token 'elkezdődik' in the literal '"A mért adatok kiszűrése folyamatban, néhány pillanat múlva elkezdődik a "'.</Issue>
            </Message>
            <Message Id="eredményét" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="71">Correct the spelling of the unrecognized token 'eredményét' in the literal '" Roll összes eredményét?"'.</Issue>
            </Message>
            <Message Id="folyamatban" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="100">Correct the spelling of the unrecognized token 'folyamatban' in the literal '"A mért adatok kiszűrése folyamatban, néhány pillanat múlva elkezdődik a "'.</Issue>
            </Message>
            <Message Id="kiszűrése" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="100">Correct the spelling of the unrecognized token 'kiszűrése' in the literal '"A mért adatok kiszűrése folyamatban, néhány pillanat múlva elkezdődik a "'.</Issue>
            </Message>
            <Message Id="mért" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="100">Correct the spelling of the unrecognized token 'mért' in the literal '"A mért adatok kiszűrése folyamatban, néhány pillanat múlva elkezdődik a "'.</Issue>
            </Message>
            <Message Id="méréstípus" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="100">Correct the spelling of the unrecognized token 'méréstípus' in the literal '" méréstípus a "'.</Issue>
            </Message>
            <Message Id="múlva" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="100">Correct the spelling of the unrecognized token 'múlva' in the literal '"A mért adatok kiszűrése folyamatban, néhány pillanat múlva elkezdődik a "'.</Issue>
            </Message>
            <Message Id="néhány" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="100">Correct the spelling of the unrecognized token 'néhány' in the literal '"A mért adatok kiszűrése folyamatban, néhány pillanat múlva elkezdődik a "'.</Issue>
            </Message>
            <Message Id="pillanat" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="100">Correct the spelling of the unrecognized token 'pillanat' in the literal '"A mért adatok kiszűrése folyamatban, néhány pillanat múlva elkezdődik a "'.</Issue>
            </Message>
            <Message Id="számú" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="100">Correct the spelling of the unrecognized token 'számú' in the literal '" számú Lot, "'.</Issue>
            </Message>
            <Message Id="tekercséből" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="100">Correct the spelling of the unrecognized token 'tekercséből' in the literal '" azonosítójú tekercséből."'.</Issue>
            </Message>
            <Message Id="teszi" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="71">Correct the spelling of the unrecognized token 'teszi' in the literal '"Biztosan érvénytelenné teszi a "'.</Issue>
            </Message>
            <Message Id="érvénytelenné" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="71">Correct the spelling of the unrecognized token 'érvénytelenné' in the literal '"Biztosan érvénytelenné teszi a "'.</Issue>
            </Message>
            <Message Id="összes" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="71">Correct the spelling of the unrecognized token 'összes' in the literal '" Roll összes eredményét?"'.</Issue>
            </Message>
            <Message TypeName="Provide correct arguments to formatting methods" Category="Microsoft.Usage" CheckId="CA2241" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="71">Method 'Dialoge.button1_Click(object, EventArgs)' calls 'string.Format(string, object, object)' and does not provide a format item for argument "2". The provided format string is: '"Biztosan érvénytelenné teszi a {0} Lot,{0} Roll összes eredményét?"'</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="71">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'Dialoge.button1_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="100">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'Dialoge.button1_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="71">Change 'Dialoge.button1_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FormClosed()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="118">Object 'this' can be disposed more than once in method 'Dialoge.FormClosed()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 118</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="112">Method 'Dialoge.FormClosed()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Előkészített eredmények zárolása..".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="114">Method 'Dialoge.FormClosed()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Nem történt érvénytelenítés egyetlen eredményen sem.".</Issue>
            </Message>
            <Message Id="Előkészített" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="112">Correct the spelling of the unrecognized token 'Előkészített' in the literal '"Előkészített eredmények zárolása.."'.</Issue>
            </Message>
            <Message Id="Nem" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="114">Correct the spelling of the unrecognized token 'Nem' in the literal '"Nem történt érvénytelenítés egyetlen eredményen sem."'.</Issue>
            </Message>
            <Message Id="egyetlen" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="114">Correct the spelling of the unrecognized token 'egyetlen' in the literal '"Nem történt érvénytelenítés egyetlen eredményen sem."'.</Issue>
            </Message>
            <Message Id="eredmények" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="112">Correct the spelling of the unrecognized token 'eredmények' in the literal '"Előkészített eredmények zárolása.."'.</Issue>
            </Message>
            <Message Id="eredményen" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="114">Correct the spelling of the unrecognized token 'eredményen' in the literal '"Nem történt érvénytelenítés egyetlen eredményen sem."'.</Issue>
            </Message>
            <Message Id="sem" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="114">Correct the spelling of the unrecognized token 'sem' in the literal '"Nem történt érvénytelenítés egyetlen eredményen sem."'.</Issue>
            </Message>
            <Message Id="történt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="114">Correct the spelling of the unrecognized token 'történt' in the literal '"Nem történt érvénytelenítés egyetlen eredményen sem."'.</Issue>
            </Message>
            <Message Id="zárolása" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="112">Correct the spelling of the unrecognized token 'zárolása' in the literal '"Előkészített eredmények zárolása.."'.</Issue>
            </Message>
            <Message Id="érvénytelenítés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="Dialoge.cs" Line="114">Correct the spelling of the unrecognized token 'érvénytelenítés' in the literal '"Nem történt érvénytelenítés egyetlen eredményen sem."'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Dialoge.lot' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#measure" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Dialoge.measure' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pb" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Dialoge.pb' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="pb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'pb' in member name 'Dialoge.pb' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Dialoge.roll' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HomogenityResult" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Homogenity' in type name 'HomogenityResult'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.String[],System.Double[],System.Boolean[],System.Double[],System.DateTime[],System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Double[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="81">Modify 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="c" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="18">In member 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', correct the casing of 'c' in parameter name 'strip_c' by changing it to 'C'.</Issue>
            </Message>
            <Message Id="count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="18">In member 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', correct the casing of 'count' in parameter name 'out_of_range_strip_count' by changing it to 'Count'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="18">In member 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', correct the casing of 'count' in parameter name 'tube_count' by changing it to 'Count'.</Issue>
            </Message>
            <Message Id="date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="18">In member 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', correct the casing of 'date' in parameter name 'test_date' by changing it to 'Date'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="18">In member 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', correct the casing of 'h' in parameter name 'not_h62' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="of" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="18">In member 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', correct the casing of 'of' in parameter name 'out_of_range_strip_count' by changing it to 'Of'.</Issue>
            </Message>
            <Message Id="range" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="18">In member 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', correct the casing of 'range' in parameter name 'out_of_range_strip_count' by changing it to 'Range'.</Issue>
            </Message>
            <Message Id="strip" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="18">In member 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', correct the casing of 'strip' in parameter name 'out_of_range_strip_count' by changing it to 'Strip'.</Issue>
            </Message>
            <Message Id="valid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="18">In member 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', correct the casing of 'valid' in parameter name 'is_valid' by changing it to 'Valid'.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="18">In method 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', correct the spelling of 'ceve' in parameter name 'ceve' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="18">In method 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', correct the spelling of 'h' in parameter name 'h62' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="stddev" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="18">In method 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', correct the spelling of 'stddev' in parameter name 'stddev' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="18">In member 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', remove the underscores from parameter name 'is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="18">In member 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', remove the underscores from parameter name 'not_h62'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="18">In member 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', remove the underscores from parameter name 'out_of_range_strip_count'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="18">In member 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', remove the underscores from parameter name 'strip_c'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="18">In member 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', remove the underscores from parameter name 'test_date'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="18">In member 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', remove the underscores from parameter name 'tube_count'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="63">In externally visible method 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', validate parameter 'roll' before using it.</Issue>
            </Message>
            <Message Id="10" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="72">In externally visible method 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', validate parameter 'tube_count' before using it.</Issue>
            </Message>
            <Message Id="11" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', validate parameter 'stddev' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', validate parameter 'averages' before using it.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', validate parameter 'is_valid' before using it.</Issue>
            </Message>
            <Message Id="4" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', validate parameter 'ceve' before using it.</Issue>
            </Message>
            <Message Id="5" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="72">In externally visible method 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', validate parameter 'test_date' before using it.</Issue>
            </Message>
            <Message Id="6" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="72">In externally visible method 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', validate parameter 'h62' before using it.</Issue>
            </Message>
            <Message Id="7" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="72">In externally visible method 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', validate parameter 'not_h62' before using it.</Issue>
            </Message>
            <Message Id="8" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="72">In externally visible method 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', validate parameter 'out_of_range_strip_count' before using it.</Issue>
            </Message>
            <Message Id="9" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="72">In externally visible method 'HomogenityResult.HomogenityResult(string, string[], double[], bool[], double[], DateTime[], int[], int[], int[], int[], int[], double[])', validate parameter 'strip_c' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bindingRollSource" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'HomogenityResult.bindingRollSource' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btOK" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'HomogenityResult.btOK' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#calculate_item_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1410">'HomogenityResult.calculate_item_Click(object, EventArgs)' has a cyclomatic complexity of 60. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1680">In method 'HomogenityResult.calculate_item_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'new CalculatedColumnValuesForm(this.avg, this.sd, this.cv, this.int_avg, this.summary_ints, this.accepted_count, this.not_accepted_count, this.not_h62d_error_count, this.h62d_error_count, this.tsp, this.dataGridRoll.Columns[this.column_index].Name)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1416">'sender', a parameter, is cast to type 'DataGridViewCell' multiple times in method 'HomogenityResult.calculate_item_Click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1412">'sender', a parameter, is cast to type 'DataGridViewColumn' multiple times in method 'HomogenityResult.calculate_item_Click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="calculate" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1410">Correct the casing of 'calculate' in member name 'HomogenityResult.calculate_item_Click(object, EventArgs)' by changing it to 'Calculate'.</Issue>
            </Message>
            <Message Id="item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1410">Correct the casing of 'item' in member name 'HomogenityResult.calculate_item_Click(object, EventArgs)' by changing it to 'Item'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1410">Remove the underscores from member name 'HomogenityResult.calculate_item_Click(object, EventArgs)'.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1651">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1676">Because the behavior of 'Convert.ToDateTime(string)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDateTime(string, IFormatProvider)'. If the result of 'Convert.ToDateTime(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1676">Because the behavior of 'Convert.ToDateTime(string)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDateTime(string, IFormatProvider)'. If the result of 'Convert.ToDateTime(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1607">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1621">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1621">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1641">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1431">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1469">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1506">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1556">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1664">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1668">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ClearGridVariables(System.Object,System.Object,System.Object,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.Double&gt;,System.Collections.Generic.List`1&lt;System.Double&gt;,System.Collections.Generic.List`1&lt;System.Boolean&gt;,System.Collections.Generic.List`1&lt;System.Boolean&gt;,System.Collections.Generic.List`1&lt;System.DateTime&gt;,System.Collections.Generic.List`1&lt;System.DateTime&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">The 'this' parameter (or 'Me' in Visual Basic) of 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="selected_computers" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">Parameter 'selected_computers' of 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_end_dates" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">Parameter 'selected_end_dates' of 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_error" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">Parameter 'selected_error' of 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_error_text" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">Parameter 'selected_error_text' of 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_glus" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">Parameter 'selected_glus' of 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_h62" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">Parameter 'selected_h62' of 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_lot_id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">Parameter 'selected_lot_id' of 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_nano_ampers" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">Parameter 'selected_nano_ampers' of 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_not_h62" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">Parameter 'selected_not_h62' of 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_result" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">Parameter 'selected_result' of 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_roll_id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">Parameter 'selected_roll_id' of 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_serial_numbers" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">Parameter 'selected_serial_numbers' of 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_start_dates" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">Parameter 'selected_start_dates' of 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_users" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">Parameter 'selected_users' of 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_computers" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">'selected_computers', a parameter declared in 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_end_dates" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">'selected_end_dates', a parameter declared in 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_error" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">'selected_error', a parameter declared in 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_error_text" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">'selected_error_text', a parameter declared in 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_glus" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">'selected_glus', a parameter declared in 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_h62" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">'selected_h62', a parameter declared in 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_lot_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">'selected_lot_id', a parameter declared in 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_nano_ampers" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">'selected_nano_ampers', a parameter declared in 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_not_h62" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">'selected_not_h62', a parameter declared in 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_result" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">'selected_result', a parameter declared in 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_roll_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">'selected_roll_id', a parameter declared in 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_serial_numbers" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">'selected_serial_numbers', a parameter declared in 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_start_dates" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">'selected_start_dates', a parameter declared in 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_users" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="774">'selected_users', a parameter declared in 'HomogenityResult.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#color" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.color' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#column_number" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'HomogenityResult.column_number' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateAllDataTable()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="745">In method 'HomogenityResult.CreateAllDataTable()', call System.IDisposable.Dispose on object 'new AllDataTable(this.selected_result, this.selected_lot_id, this.selected_roll_id, this.selected_serial_numbers, this.selected_users, this.selected_computers, this.selected_error, this.selected_error_text, this.selected_glus, this.selected_nano_ampers, this.selected_not_h62, this.selected_h62, this.selected_start_dates, this.selected_end_dates)' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridLOT" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'HomogenityResult.dataGridLOT' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridRoll_CellMouseClick(System.Object,System.Windows.Forms.DataGridViewCellMouseEventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="data" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1142">Correct the casing of 'data' in member name 'HomogenityResult.dataGridRoll_CellMouseClick(object, DataGridViewCellMouseEventArgs)' by changing it to 'Data'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1142">Remove the underscores from member name 'HomogenityResult.dataGridRoll_CellMouseClick(object, DataGridViewCellMouseEventArgs)'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1142">In externally visible method 'HomogenityResult.dataGridRoll_CellMouseClick(object, DataGridViewCellMouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridView1_CellMouseDown(System.Object,System.Windows.Forms.DataGridViewCellMouseEventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="data" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="105">Correct the casing of 'data' in member name 'HomogenityResult.dataGridView1_CellMouseDown(object, DataGridViewCellMouseEventArgs)' by changing it to 'Data'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="105">Remove the underscores from member name 'HomogenityResult.dataGridView1_CellMouseDown(object, DataGridViewCellMouseEventArgs)'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="105">In externally visible method 'HomogenityResult.dataGridView1_CellMouseDown(object, DataGridViewCellMouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridView1_ColumnHeaderMouseClicked(System.Object,System.Windows.Forms.DataGridViewCellMouseEventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="data" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1754">Correct the casing of 'data' in member name 'HomogenityResult.dataGridView1_ColumnHeaderMouseClicked(object, DataGridViewCellMouseEventArgs)' by changing it to 'Data'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1754">Remove the underscores from member name 'HomogenityResult.dataGridView1_ColumnHeaderMouseClicked(object, DataGridViewCellMouseEventArgs)'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1754">In externally visible method 'HomogenityResult.dataGridView1_ColumnHeaderMouseClicked(object, DataGridViewCellMouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnumsAndComboBox_Load_For_All(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1173">In method 'HomogenityResult.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1178">In method 'HomogenityResult.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1183">In method 'HomogenityResult.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1189">In method 'HomogenityResult.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1195">In method 'HomogenityResult.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1201">In method 'HomogenityResult.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1206">In method 'HomogenityResult.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1211">In method 'HomogenityResult.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1217">In method 'HomogenityResult.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1223">In method 'HomogenityResult.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1232">Method 'HomogenityResult.EnumsAndComboBox_Load_For_All(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Homogenity teszt eredmények".</Issue>
            </Message>
            <Message Id="Homogenity" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1232">Correct the spelling of the unrecognized token 'Homogenity' in the literal '"Homogenity teszt eredmények"'.</Issue>
            </Message>
            <Message Id="eredmények" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1232">Correct the spelling of the unrecognized token 'eredmények' in the literal '"Homogenity teszt eredmények"'.</Issue>
            </Message>
            <Message Id="teszt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1232">Correct the spelling of the unrecognized token 'teszt' in the literal '"Homogenity teszt eredmények"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getSortOrder(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1729">The 'this' parameter (or 'Me' in Visual Basic) of 'HomogenityResult.getSortOrder(int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hide_item_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1707">'sender', a parameter, is cast to type 'DataGridViewCell' multiple times in method 'HomogenityResult.hide_item_Click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1703">'sender', a parameter, is cast to type 'DataGridViewColumn' multiple times in method 'HomogenityResult.hide_item_Click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="column_number" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1697">'column_number', a variable declared in 'HomogenityResult.hide_item_Click(object, EventArgs)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_color" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.homogenity_color' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResult.homogenity_color' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#i" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.i' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'HomogenityResult.i'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.Designer.cs" Line="42">Method 'HomogenityResult.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "HomogenityResult".</Issue>
            </Message>
            <Message Id="HomogenityResult" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.Designer.cs" Line="42">Correct the spelling of the unrecognized token 'HomogenityResult' in the literal '"HomogenityResult"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#invalidate_item_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="133">In method 'HomogenityResult.invalidate_item_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'new Dialoge(this.selected_lot_id.ToString(), this.selected_roll_id.ToString(), this.measuretype, true)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="137">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.invalidate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="137">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.invalidate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="137">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.invalidate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#measure_type" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'HomogenityResult.measure_type' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#object_item" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.object_item' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#remeasure_item" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.remeasure_item' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="remeasure" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'remeasure' in member name 'HomogenityResult.remeasure_item' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#remeasure_item_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="462">In method 'HomogenityResult.remeasure_item_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'new Dialoge(this.selected_lot_id.ToString(), this.selected_roll_id.ToString(), this.measuretype)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="466">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.remeasure_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="466">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.remeasure_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="466">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.remeasure_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#res" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.res' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_codes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.selected_codes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'HomogenityResult.selected_codes' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_computers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.selected_computers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResult.selected_computers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_device_replace" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.selected_device_replace' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'HomogenityResult.selected_device_replace' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_early_dribble" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.selected_early_dribble' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'HomogenityResult.selected_early_dribble' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_end_dates" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.selected_end_dates' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'HomogenityResult.selected_end_dates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_error" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.selected_error' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResult.selected_error' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_error_text" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.selected_error_text' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResult.selected_error_text' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_fk_errors_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.selected_fk_errors_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'HomogenityResult.selected_fk_errors_id' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="fk" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'fk' in member name 'HomogenityResult.selected_fk_errors_id' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_glus" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.selected_glus' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'HomogenityResult.selected_glus' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="glus" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glus' in member name 'HomogenityResult.selected_glus' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_h62" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.selected_h62' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'HomogenityResult.selected_h62' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_nano_ampers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.selected_nano_ampers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'HomogenityResult.selected_nano_ampers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="ampers" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'ampers' in member name 'HomogenityResult.selected_nano_ampers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="nano" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'nano' in member name 'HomogenityResult.selected_nano_ampers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_not_h62" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.selected_not_h62' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'HomogenityResult.selected_not_h62' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_result_ids" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.selected_result_ids' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'HomogenityResult.selected_result_ids' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_rolls" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.selected_rolls' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResult.selected_rolls' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_serial_numbers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.selected_serial_numbers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResult.selected_serial_numbers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_start_dates" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.selected_start_dates' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'HomogenityResult.selected_start_dates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_temp" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.selected_temp' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'HomogenityResult.selected_temp' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_users" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.selected_users' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResult.selected_users' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetInvalidatedClickedRoll(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="161">'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' has a cyclomatic complexity of 37. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="444">Object 'conn' can be disposed more than once in method 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 444</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="241">Object 'dr' can be disposed more than once in method 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 241</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="308">Object 'dr' can be disposed more than once in method 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 308</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="239">Method 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Nincs megfelelő eredmény".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="306">Method 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Nincs megfelelő eredmény".</Issue>
            </Message>
            <Message Id="id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="161">In member 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)', correct the casing of 'id' in parameter name 'lot_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="161">In member 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)', correct the casing of 'id' in parameter name 'roll_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="measuretype" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="161">In method 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)', correct the spelling of 'measuretype' in parameter name 'measuretype' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="161">In member 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)', remove the underscores from parameter name 'lot_id'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="161">In member 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)', remove the underscores from parameter name 'roll_id'.</Issue>
            </Message>
            <Message Id="Nincs" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="239">Correct the spelling of the unrecognized token 'Nincs' in the literal '"Nincs megfelelő eredmény"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="306">Correct the spelling of the unrecognized token 'Nincs' in the literal '"Nincs megfelelő eredmény"'.</Issue>
            </Message>
            <Message Id="eredmény" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="239">Correct the spelling of the unrecognized token 'eredmény' in the literal '"Nincs megfelelő eredmény"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="306">Correct the spelling of the unrecognized token 'eredmény' in the literal '"Nincs megfelelő eredmény"'.</Issue>
            </Message>
            <Message Id="megfelelő" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="239">Correct the spelling of the unrecognized token 'megfelelő' in the literal '"Nincs megfelelő eredmény"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="306">Correct the spelling of the unrecognized token 'megfelelő' in the literal '"Nincs megfelelő eredmény"'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="256">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'Convert.ToInt32(pk)'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="323">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'actpk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="181">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="347">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="366">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="386">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="203">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'measuretype'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="221">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'measuretype'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="270">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'pk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="288">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'pk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="415">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'this.remeasured_lotid', 'this.remeasured_rollid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="230">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="297">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="256">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="323">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="181">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="347">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="366">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="386">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="415">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="203">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="221">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="270">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="288">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="239">Change 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="306">Change 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="161">In externally visible method 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)', validate parameter 'measuretype' before using it.</Issue>
            </Message>
            <Message Id="measuretype" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="161">'measuretype', a parameter declared in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="res" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="161">'res', a variable declared in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="161">'res', a variable declared in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="161">'res', a variable declared in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="161">'res', a variable declared in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="161">'res', a variable declared in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="161">'res', a variable declared in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="161">'res', a variable declared in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="161">'res', a variable declared in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="161">'res', a variable declared in 'HomogenityResult.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetRemeasuredClickedRoll(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="801">'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' has a cyclomatic complexity of 37. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1082">Object 'conn' can be disposed more than once in method 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1082</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="881">Object 'dr' can be disposed more than once in method 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 881</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="946">Object 'dr' can be disposed more than once in method 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 946</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="879">Method 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Nincs megfelelő eredmény".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="944">Method 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Nincs megfelelő eredmény".</Issue>
            </Message>
            <Message Id="id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="801">In member 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)', correct the casing of 'id' in parameter name 'lot_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="801">In member 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)', correct the casing of 'id' in parameter name 'roll_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Remeasured" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="801">Correct the spelling of 'Remeasured' in member name 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="measuretype" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="801">In method 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)', correct the spelling of 'measuretype' in parameter name 'measuretype' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="801">In member 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)', remove the underscores from parameter name 'lot_id'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="801">In member 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)', remove the underscores from parameter name 'roll_id'.</Issue>
            </Message>
            <Message Id="Nincs" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="879">Correct the spelling of the unrecognized token 'Nincs' in the literal '"Nincs megfelelő eredmény"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="944">Correct the spelling of the unrecognized token 'Nincs' in the literal '"Nincs megfelelő eredmény"'.</Issue>
            </Message>
            <Message Id="eredmény" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="879">Correct the spelling of the unrecognized token 'eredmény' in the literal '"Nincs megfelelő eredmény"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="944">Correct the spelling of the unrecognized token 'eredmény' in the literal '"Nincs megfelelő eredmény"'.</Issue>
            </Message>
            <Message Id="megfelelő" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="879">Correct the spelling of the unrecognized token 'megfelelő' in the literal '"Nincs megfelelő eredmény"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="944">Correct the spelling of the unrecognized token 'megfelelő' in the literal '"Nincs megfelelő eredmény"'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="896">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'Convert.ToInt32(pk)'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="961">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'actpk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="821">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="985">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1004">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1024">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="843">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'measuretype'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="861">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'measuretype'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="908">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'pk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="926">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'pk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1053">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'this.remeasured_lotid', 'this.remeasured_rollid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="870">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="935">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="896">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="961">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="821">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="985">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1004">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1024">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1053">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="843">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="861">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="908">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="926">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="879">Change 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="944">Change 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="801">In externally visible method 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)', validate parameter 'measuretype' before using it.</Issue>
            </Message>
            <Message Id="measuretype" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="801">'measuretype', a parameter declared in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="res" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="801">'res', a variable declared in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="801">'res', a variable declared in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="801">'res', a variable declared in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="801">'res', a variable declared in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="801">'res', a variable declared in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="801">'res', a variable declared in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="801">'res', a variable declared in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="801">'res', a variable declared in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="801">'res', a variable declared in 'HomogenityResult.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowContextMenu(System.Windows.Forms.DataGridViewCell)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1299">In method 'HomogenityResult.ShowContextMenu(DataGridViewCell)', call System.IDisposable.Dispose on object 'cm' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MenuItem.#ctor(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1305">Method 'HomogenityResult.ShowContextMenu(DataGridViewCell)' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Adatok kiemelése színnel, ,  oszlop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1301">Method 'HomogenityResult.ShowContextMenu(DataGridViewCell)' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Oszlop elrejtése:,  oszlop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1303">Method 'HomogenityResult.ShowContextMenu(DataGridViewCell)' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Értékekből avg,stddev,cv vagy összeg számolás:,  oszlop".</Issue>
            </Message>
            <Message Id="Adatok" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1305">Correct the spelling of the unrecognized token 'Adatok' in the literal '"Adatok kiemelése színnel, "'.</Issue>
            </Message>
            <Message Id="Oszlop" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1301">Correct the spelling of the unrecognized token 'Oszlop' in the literal '"Oszlop elrejtése:"'.</Issue>
            </Message>
            <Message Id="avg" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1303">Correct the spelling of the unrecognized token 'avg' in the literal '"Értékekből avg,stddev,cv vagy összeg számolás:"'.</Issue>
            </Message>
            <Message Id="elrejtése" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1301">Correct the spelling of the unrecognized token 'elrejtése' in the literal '"Oszlop elrejtése:"'.</Issue>
            </Message>
            <Message Id="kiemelése" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1305">Correct the spelling of the unrecognized token 'kiemelése' in the literal '"Adatok kiemelése színnel, "'.</Issue>
            </Message>
            <Message Id="oszlop" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1301">Correct the spelling of the unrecognized token 'oszlop' in the literal '" oszlop"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1303">Correct the spelling of the unrecognized token 'oszlop' in the literal '" oszlop"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1305">Correct the spelling of the unrecognized token 'oszlop' in the literal '" oszlop"'.</Issue>
            </Message>
            <Message Id="stddev" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1303">Correct the spelling of the unrecognized token 'stddev' in the literal '"Értékekből avg,stddev,cv vagy összeg számolás:"'.</Issue>
            </Message>
            <Message Id="számolás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1303">Correct the spelling of the unrecognized token 'számolás' in the literal '"Értékekből avg,stddev,cv vagy összeg számolás:"'.</Issue>
            </Message>
            <Message Id="színnel" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1305">Correct the spelling of the unrecognized token 'színnel' in the literal '"Adatok kiemelése színnel, "'.</Issue>
            </Message>
            <Message Id="vagy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1303">Correct the spelling of the unrecognized token 'vagy' in the literal '"Értékekből avg,stddev,cv vagy összeg számolás:"'.</Issue>
            </Message>
            <Message Id="Értékekből" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1303">Correct the spelling of the unrecognized token 'Értékekből' in the literal '"Értékekből avg,stddev,cv vagy összeg számolás:"'.</Issue>
            </Message>
            <Message Id="összeg" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1303">Correct the spelling of the unrecognized token 'összeg' in the literal '"Értékekből avg,stddev,cv vagy összeg számolás:"'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1301">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.ShowContextMenu(DataGridViewCell)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1303">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.ShowContextMenu(DataGridViewCell)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1305">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.ShowContextMenu(DataGridViewCell)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowContextMenu(System.Windows.Forms.DataGridViewCell,System.Object,System.Object,System.Object,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1106">In method 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)', call System.IDisposable.Dispose on object 'cm' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MenuItem.#ctor(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1110">Method 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Adatok mutatása(LOT ID:,  ,Roll ID:, )".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1108">Method 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Invalidálás(LOT ID:,  ,Roll ID:, )".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1109">Method 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Újramérés(LOT ID:,  ,Roll ID:, )".</Issue>
            </Message>
            <Message Id="id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1102">In member 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)', correct the casing of 'id' in parameter name 'selected_lot_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1102">In member 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)', correct the casing of 'id' in parameter name 'selected_roll_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="lot" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1102">In member 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)', correct the casing of 'lot' in parameter name 'selected_lot_id' by changing it to 'Lot'.</Issue>
            </Message>
            <Message Id="result" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1102">In member 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)', correct the casing of 'result' in parameter name 'selected_result' by changing it to 'Result'.</Issue>
            </Message>
            <Message Id="roll" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1102">In member 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)', correct the casing of 'roll' in parameter name 'selected_roll_id' by changing it to 'Roll'.</Issue>
            </Message>
            <Message Id="type" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1102">In member 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)', correct the casing of 'type' in parameter name 'measure_type' by changing it to 'Type'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1102">In member 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)', remove the underscores from parameter name 'measure_type'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1102">In member 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)', remove the underscores from parameter name 'selected_lot_id'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1102">In member 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)', remove the underscores from parameter name 'selected_result'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1102">In member 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)', remove the underscores from parameter name 'selected_roll_id'.</Issue>
            </Message>
            <Message Id="Adatok" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1110">Correct the spelling of the unrecognized token 'Adatok' in the literal '"Adatok mutatása(LOT ID:"'.</Issue>
            </Message>
            <Message Id="Invalidálás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1108">Correct the spelling of the unrecognized token 'Invalidálás' in the literal '"Invalidálás(LOT ID:"'.</Issue>
            </Message>
            <Message Id="mutatása" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1110">Correct the spelling of the unrecognized token 'mutatása' in the literal '"Adatok mutatása(LOT ID:"'.</Issue>
            </Message>
            <Message Id="Újramérés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1109">Correct the spelling of the unrecognized token 'Újramérés' in the literal '"Újramérés(LOT ID:"'.</Issue>
            </Message>
            <Message Id="measure_type" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1102">Parameter 'measure_type' of 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_result" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1102">Parameter 'selected_result' of 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1108">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1109">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1110">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="measure_type" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1102">'measure_type', a parameter declared in 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_lot_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1102">'selected_lot_id', a parameter declared in 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_result" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1102">'selected_result', a parameter declared in 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_roll_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="1102">'selected_roll_id', a parameter declared in 'HomogenityResult.ShowContextMenu(DataGridViewCell, object, object, object, object)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#showdata_item" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.showdata_item' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="showdata" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'showdata' in member name 'HomogenityResult.showdata_item' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#showdata_item_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="501">'HomogenityResult.showdata_item_Click(object, EventArgs)' has a cyclomatic complexity of 33. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="728">Object 'conn' can be disposed more than once in method 'HomogenityResult.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 728</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="542">Object 'dr' can be disposed more than once in method 'HomogenityResult.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 542</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="603">Object 'dr' can be disposed more than once in method 'HomogenityResult.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 603</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="656">Object 'dr' can be disposed more than once in method 'HomogenityResult.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 656</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="708">Object 'dr' can be disposed more than once in method 'HomogenityResult.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 708</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="667">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.showdata_item_Click(object, EventArgs)' could contain the following variables 'act_error_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="686">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.showdata_item_Click(object, EventArgs)' could contain the following variables 'act_error_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="560">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.showdata_item_Click(object, EventArgs)' could contain the following variables 'act_result_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="578">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.showdata_item_Click(object, EventArgs)' could contain the following variables 'act_result_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="508">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.showdata_item_Click(object, EventArgs)' could contain the following variables 'this.selected_lot_id', 'this.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="524">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.showdata_item_Click(object, EventArgs)' could contain the following variables 'this.selected_lot_id', 'this.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="615">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.showdata_item_Click(object, EventArgs)' could contain the following variables 'this.selected_lot_id', 'this.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="634">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResult.showdata_item_Click(object, EventArgs)' could contain the following variables 'this.selected_lot_id', 'this.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="698">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="699">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="700">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="701">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="646">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="647">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="594">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="595">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="648">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="535">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="591">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="596">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="592">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="593">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="644">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="645">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="696">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="697">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="560">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="578">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="667">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="686">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="508">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="524">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="615">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="634">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResult.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="res" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="501">'res', a variable declared in 'HomogenityResult.showdata_item_Click(object, EventArgs)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="501">'res', a variable declared in 'HomogenityResult.showdata_item_Click(object, EventArgs)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="501">'res', a variable declared in 'HomogenityResult.showdata_item_Click(object, EventArgs)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="HomogenityResult.cs" Line="501">'res', a variable declared in 'HomogenityResult.showdata_item_Click(object, EventArgs)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#types" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.types' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;Type&gt;' in 'HomogenityResult.types' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#values" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResult.values' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResult.values' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LoginForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Replace the term 'Login' in type name 'LoginForm' with the preferred alternate 'LogOn'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="38">Method 'LoginForm.LoginForm()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Bejelentkezve ,  felhasználóként".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="37">Method 'LoginForm.LoginForm()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Belépés az Ideál Csikvágás Teszt Szoftverbe".</Issue>
            </Message>
            <Message Id="Bejelentkezve" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="38">Correct the spelling of the unrecognized token 'Bejelentkezve' in the literal '"Bejelentkezve "'.</Issue>
            </Message>
            <Message Id="Belépés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="37">Correct the spelling of the unrecognized token 'Belépés' in the literal '"Belépés az Ideál Csikvágás Teszt Szoftverbe"'.</Issue>
            </Message>
            <Message Id="Csikvágás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="37">Correct the spelling of the unrecognized token 'Csikvágás' in the literal '"Belépés az Ideál Csikvágás Teszt Szoftverbe"'.</Issue>
            </Message>
            <Message Id="Ideál" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="37">Correct the spelling of the unrecognized token 'Ideál' in the literal '"Belépés az Ideál Csikvágás Teszt Szoftverbe"'.</Issue>
            </Message>
            <Message Id="Szoftverbe" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="37">Correct the spelling of the unrecognized token 'Szoftverbe' in the literal '"Belépés az Ideál Csikvágás Teszt Szoftverbe"'.</Issue>
            </Message>
            <Message Id="Teszt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="37">Correct the spelling of the unrecognized token 'Teszt' in the literal '"Belépés az Ideál Csikvágás Teszt Szoftverbe"'.</Issue>
            </Message>
            <Message Id="az" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="37">Correct the spelling of the unrecognized token 'az' in the literal '"Belépés az Ideál Csikvágás Teszt Szoftverbe"'.</Issue>
            </Message>
            <Message Id="felhasználóként" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="38">Correct the spelling of the unrecognized token 'felhasználóként' in the literal '" felhasználóként"'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="38">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LoginForm.LoginForm()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="37">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'LoginForm.LoginForm()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="301">Object 'conn' can be disposed more than once in method 'LoginForm.button1_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 301</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="283">Method 'LoginForm.button1_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Megvolt az 5 próbálkozás, 20 perc múlva tud újra próbálkozni,\n vagy értesítse a...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="289">Method 'LoginForm.button1_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Rossz jelszó lett megadva a \', \' felhasználónévhez!\nPróbálkozzon újra, még , ...".</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="263">Method 'LoginForm.button1_Click(object, EventArgs)' passes 'No value for this query: {0}' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message Id="Megvolt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="283">Correct the spelling of the unrecognized token 'Megvolt' in the literal '"Megvolt az 5 próbálkozás, 20 perc múlva tud újra próbálkozni,\n vagy értesítse a..."'.</Issue>
            </Message>
            <Message Id="Próbálkozzon" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="289">Correct the spelling of the unrecognized token 'Próbálkozzon' in the literal '"\' felhasználónévhez!\nPróbálkozzon újra, még "'.</Issue>
            </Message>
            <Message Id="Rossz" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="289">Correct the spelling of the unrecognized token 'Rossz' in the literal '"Rossz jelszó lett megadva a \'"'.</Issue>
            </Message>
            <Message Id="az" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="283">Correct the spelling of the unrecognized token 'az' in the literal '"Megvolt az 5 próbálkozás, 20 perc múlva tud újra próbálkozni,\n vagy értesítse a..."'.</Issue>
            </Message>
            <Message Id="fejlesztést" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="283">Correct the spelling of the unrecognized token 'fejlesztést' in the literal '"Megvolt az 5 próbálkozás, 20 perc múlva tud újra próbálkozni,\n vagy értesítse a..."'.</Issue>
            </Message>
            <Message Id="felhasználónévhez" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="289">Correct the spelling of the unrecognized token 'felhasználónévhez' in the literal '"\' felhasználónévhez!\nPróbálkozzon újra, még "'.</Issue>
            </Message>
            <Message Id="jelszó" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="289">Correct the spelling of the unrecognized token 'jelszó' in the literal '"Rossz jelszó lett megadva a \'"'.</Issue>
            </Message>
            <Message Id="lehetőség" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="289">Correct the spelling of the unrecognized token 'lehetőség' in the literal '" lehetőség áll rendelkezésre."'.</Issue>
            </Message>
            <Message Id="lett" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="289">Correct the spelling of the unrecognized token 'lett' in the literal '"Rossz jelszó lett megadva a \'"'.</Issue>
            </Message>
            <Message Id="megadva" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="289">Correct the spelling of the unrecognized token 'megadva' in the literal '"Rossz jelszó lett megadva a \'"'.</Issue>
            </Message>
            <Message Id="még" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="289">Correct the spelling of the unrecognized token 'még' in the literal '"\' felhasználónévhez!\nPróbálkozzon újra, még "'.</Issue>
            </Message>
            <Message Id="múlva" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="283">Correct the spelling of the unrecognized token 'múlva' in the literal '"Megvolt az 5 próbálkozás, 20 perc múlva tud újra próbálkozni,\n vagy értesítse a..."'.</Issue>
            </Message>
            <Message Id="perc" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="283">Correct the spelling of the unrecognized token 'perc' in the literal '"Megvolt az 5 próbálkozás, 20 perc múlva tud újra próbálkozni,\n vagy értesítse a..."'.</Issue>
            </Message>
            <Message Id="próbálkozni" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="283">Correct the spelling of the unrecognized token 'próbálkozni' in the literal '"Megvolt az 5 próbálkozás, 20 perc múlva tud újra próbálkozni,\n vagy értesítse a..."'.</Issue>
            </Message>
            <Message Id="próbálkozás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="283">Correct the spelling of the unrecognized token 'próbálkozás' in the literal '"Megvolt az 5 próbálkozás, 20 perc múlva tud újra próbálkozni,\n vagy értesítse a..."'.</Issue>
            </Message>
            <Message Id="rendelkezésre" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="289">Correct the spelling of the unrecognized token 'rendelkezésre' in the literal '" lehetőség áll rendelkezésre."'.</Issue>
            </Message>
            <Message Id="tud" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="283">Correct the spelling of the unrecognized token 'tud' in the literal '"Megvolt az 5 próbálkozás, 20 perc múlva tud újra próbálkozni,\n vagy értesítse a..."'.</Issue>
            </Message>
            <Message Id="vagy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="283">Correct the spelling of the unrecognized token 'vagy' in the literal '"Megvolt az 5 próbálkozás, 20 perc múlva tud újra próbálkozni,\n vagy értesítse a..."'.</Issue>
            </Message>
            <Message Id="áll" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="289">Correct the spelling of the unrecognized token 'áll' in the literal '" lehetőség áll rendelkezésre."'.</Issue>
            </Message>
            <Message Id="értesítse" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="283">Correct the spelling of the unrecognized token 'értesítse' in the literal '"Megvolt az 5 próbálkozás, 20 perc múlva tud újra próbálkozni,\n vagy értesítse a..."'.</Issue>
            </Message>
            <Message Id="újra" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="283">Correct the spelling of the unrecognized token 'újra' in the literal '"Megvolt az 5 próbálkozás, 20 perc múlva tud újra próbálkozni,\n vagy értesítse a..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="289">Correct the spelling of the unrecognized token 'újra' in the literal '"\' felhasználónévhez!\nPróbálkozzon újra, még "'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="255">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'LoginForm.button1_Click(object, EventArgs)' could contain the following variables 'this.controllerUser'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="268">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LoginForm.button1_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="255">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LoginForm.button1_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="289">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'LoginForm.button1_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="283">Change 'LoginForm.button1_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="289">Change 'LoginForm.button1_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button3_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="411">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'LoginForm.button3_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="411">Change 'LoginForm.button3_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Cancel_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="47">Remove the underscores from member name 'LoginForm.Cancel_Click(object, EventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#controllerUser" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LoginForm.controllerUser' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#helpString" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LoginForm.helpString' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="166">Method 'LoginForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "?".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="94">Method 'LoginForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Bejelentkezve felhasználóként".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="202">Method 'LoginForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Belépés az Ideál Csikvágás Teszt Szoftver".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="106">Method 'LoginForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Belépés".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="149">Method 'LoginForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Bezárás".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="123">Method 'LoginForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Ideál Csikvágás Teszt Szoftver".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="83">Method 'LoginForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Jelszó:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="137">Method 'LoginForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Mérés típus választása:".</Issue>
            </Message>
            <Message Id="Bejelentkezve" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="94">Correct the spelling of the unrecognized token 'Bejelentkezve' in the literal '"Bejelentkezve felhasználóként"'.</Issue>
            </Message>
            <Message Id="Belépés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="202">Correct the spelling of the unrecognized token 'Belépés' in the literal '"Belépés az Ideál Csikvágás Teszt Szoftver"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="106">Correct the spelling of the unrecognized token 'Belépés' in the literal '"Belépés"'.</Issue>
            </Message>
            <Message Id="Bezárás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="149">Correct the spelling of the unrecognized token 'Bezárás' in the literal '"Bezárás"'.</Issue>
            </Message>
            <Message Id="Csikvágás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="202">Correct the spelling of the unrecognized token 'Csikvágás' in the literal '"Belépés az Ideál Csikvágás Teszt Szoftver"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="123">Correct the spelling of the unrecognized token 'Csikvágás' in the literal '"Ideál Csikvágás Teszt Szoftver"'.</Issue>
            </Message>
            <Message Id="Ideál" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="202">Correct the spelling of the unrecognized token 'Ideál' in the literal '"Belépés az Ideál Csikvágás Teszt Szoftver"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="123">Correct the spelling of the unrecognized token 'Ideál' in the literal '"Ideál Csikvágás Teszt Szoftver"'.</Issue>
            </Message>
            <Message Id="Jelszó" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="71">Correct the spelling of the unrecognized token 'Jelszó' in the literal '"&lt;Jelszó beírása&gt;"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="83">Correct the spelling of the unrecognized token 'Jelszó' in the literal '"Jelszó:"'.</Issue>
            </Message>
            <Message Id="Mérés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="137">Correct the spelling of the unrecognized token 'Mérés' in the literal '"Mérés típus választása:"'.</Issue>
            </Message>
            <Message Id="Szoftver" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="202">Correct the spelling of the unrecognized token 'Szoftver' in the literal '"Belépés az Ideál Csikvágás Teszt Szoftver"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="123">Correct the spelling of the unrecognized token 'Szoftver' in the literal '"Ideál Csikvágás Teszt Szoftver"'.</Issue>
            </Message>
            <Message Id="Teszt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="202">Correct the spelling of the unrecognized token 'Teszt' in the literal '"Belépés az Ideál Csikvágás Teszt Szoftver"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="123">Correct the spelling of the unrecognized token 'Teszt' in the literal '"Ideál Csikvágás Teszt Szoftver"'.</Issue>
            </Message>
            <Message Id="az" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="202">Correct the spelling of the unrecognized token 'az' in the literal '"Belépés az Ideál Csikvágás Teszt Szoftver"'.</Issue>
            </Message>
            <Message Id="beírása" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="71">Correct the spelling of the unrecognized token 'beírása' in the literal '"&lt;Jelszó beírása&gt;"'.</Issue>
            </Message>
            <Message Id="felhasználóként" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="94">Correct the spelling of the unrecognized token 'felhasználóként' in the literal '"Bejelentkezve felhasználóként"'.</Issue>
            </Message>
            <Message Id="típus" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="137">Correct the spelling of the unrecognized token 'típus' in the literal '"Mérés típus választása:"'.</Issue>
            </Message>
            <Message Id="választása" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="137">Correct the spelling of the unrecognized token 'választása' in the literal '"Mérés típus választása:"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="211">'LoginForm.label2_Click(object, EventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lb" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LoginForm.lb' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lb' in member name 'LoginForm.lb' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#machineName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LoginForm.machineName' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OK_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="OK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="43">Correct the casing of 'OK' in member name 'LoginForm.OK_Click(object, EventArgs)' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="43">Remove the underscores from member name 'LoginForm.OK_Click(object, EventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pb" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LoginForm.pb' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="pb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'pb' in member name 'LoginForm.pb' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RaisePbValue()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Pb" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="363">Correct the casing of 'Pb' in member name 'LoginForm.RaisePbValue()' by changing it to 'PB'.</Issue>
            </Message>
            <Message Id="Pb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="363">Correct the spelling of 'Pb' in member name 'LoginForm.RaisePbValue()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="363">Consider making 'LoginForm.RaisePbValue()' an event.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveLoginControls()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="329">Replace the term 'Login' in member name 'LoginForm.RemoveLoginControls()' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WaitForLotSelectorFormReady()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="321">In method 'LoginForm.WaitForLotSelectorFormReady()', call System.IDisposable.Dispose on object 'lb' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="322">Method 'LoginForm.WaitForLotSelectorFormReady()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Folyamat lezárása...".</Issue>
            </Message>
            <Message Id="Folyamat" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="322">Correct the spelling of the unrecognized token 'Folyamat' in the literal '"Folyamat lezárása..."'.</Issue>
            </Message>
            <Message Id="lezárása" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="322">Correct the spelling of the unrecognized token 'lezárása' in the literal '"Folyamat lezárása..."'.</Issue>
            </Message>
            <Message Id="lb" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LoginForm.cs" Line="314">'lb', a variable declared in 'LoginForm.WaitForLotSelectorFormReady()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LotNumberForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="19">Change 'List&lt;string&gt;' in 'LotNumberForm.LotNumberForm(List&lt;string&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="19">In member 'LotNumberForm.LotNumberForm(List&lt;string&gt;)', correct the casing of 'homogenity' in parameter name 'blank_homogenity_valid_lot' by changing it to 'Homogenity'.</Issue>
            </Message>
            <Message Id="lot" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="19">In member 'LotNumberForm.LotNumberForm(List&lt;string&gt;)', correct the casing of 'lot' in parameter name 'blank_homogenity_valid_lot' by changing it to 'Lot'.</Issue>
            </Message>
            <Message Id="valid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="19">In member 'LotNumberForm.LotNumberForm(List&lt;string&gt;)', correct the casing of 'valid' in parameter name 'blank_homogenity_valid_lot' by changing it to 'Valid'.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="19">In method 'LotNumberForm.LotNumberForm(List&lt;string&gt;)', correct the spelling of 'homogenity' in parameter name 'blank_homogenity_valid_lot' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="19">In member 'LotNumberForm.LotNumberForm(List&lt;string&gt;)', remove the underscores from parameter name 'blank_homogenity_valid_lot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="WinFormBlankTest.ShowResult" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="32">'LotNumberForm.LotNumberForm(string, string, string)' creates a new instance of 'ShowResult' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="lotid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="19">In method 'LotNumberForm.LotNumberForm(string, string, string)', correct the spelling of 'lotid' in parameter name 'lotid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="meastype" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="19">In method 'LotNumberForm.LotNumberForm(string, string, string)', correct the spelling of 'meastype' in parameter name 'meastype' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="rollid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="19">In method 'LotNumberForm.LotNumberForm(string, string, string)', correct the spelling of 'rollid' in parameter name 'rollid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#allTestIsValid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="TestIs" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'TestIs' in member name 'LotNumberForm.allTestIsValid' exists as a discrete term. If your usage is intended to be single word, case it as 'Testis' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LotNumberForm.allTestIsValid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'LotNumberForm.allTestIsValid' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="292">Object 'this' can be disposed more than once in method 'LotNumberForm.button1_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 292, 304</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="270">'item', a variable, is cast to type 'TextBox' multiple times in method 'LotNumberForm.button1_Click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="272">'item', a variable, is cast to type 'TextBox' multiple times in method 'LotNumberForm.button1_Click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="273">'item', a variable, is cast to type 'TextBox' multiple times in method 'LotNumberForm.button1_Click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="WinFormBlankTest.ShowResult" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="291">'LotNumberForm.button1_Click(object, EventArgs)' creates a new instance of 'ShowResult' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="303">'LotNumberForm.button1_Click(object, EventArgs)' creates a new instance of 'ShowResult' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="264">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LotNumberForm.button1_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAvailableIDsInAllTestSucceed()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="179">Object 'conn' can be disposed more than once in method 'LotNumberForm.GetAvailableIDsInAllTestSucceed()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 179</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="111">Object 'dr' can be disposed more than once in method 'LotNumberForm.GetAvailableIDsInAllTestSucceed()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 111</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="157">Object 'dr' can be disposed more than once in method 'LotNumberForm.GetAvailableIDsInAllTestSucceed()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 157</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="168">Method 'LotNumberForm.GetAvailableIDsInAllTestSucceed()' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Nincs olyan LOT amelyik mind három teszten megfelelt volna".</Issue>
            </Message>
            <Message Id="Nincs" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="168">Correct the spelling of the unrecognized token 'Nincs' in the literal '"Nincs olyan LOT amelyik mind három teszten megfelelt volna"'.</Issue>
            </Message>
            <Message Id="amelyik" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="168">Correct the spelling of the unrecognized token 'amelyik' in the literal '"Nincs olyan LOT amelyik mind három teszten megfelelt volna"'.</Issue>
            </Message>
            <Message Id="három" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="168">Correct the spelling of the unrecognized token 'három' in the literal '"Nincs olyan LOT amelyik mind három teszten megfelelt volna"'.</Issue>
            </Message>
            <Message Id="megfelelt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="168">Correct the spelling of the unrecognized token 'megfelelt' in the literal '"Nincs olyan LOT amelyik mind három teszten megfelelt volna"'.</Issue>
            </Message>
            <Message Id="olyan" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="168">Correct the spelling of the unrecognized token 'olyan' in the literal '"Nincs olyan LOT amelyik mind három teszten megfelelt volna"'.</Issue>
            </Message>
            <Message Id="teszten" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="168">Correct the spelling of the unrecognized token 'teszten' in the literal '"Nincs olyan LOT amelyik mind három teszten megfelelt volna"'.</Issue>
            </Message>
            <Message Id="volna" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="168">Correct the spelling of the unrecognized token 'volna' in the literal '"Nincs olyan LOT amelyik mind három teszten megfelelt volna"'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="147">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'LotNumberForm.GetAvailableIDsInAllTestSucceed()' could contain the following variables 'item'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="123">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'LotNumberForm.GetAvailableIDsInAllTestSucceed()' could contain the following variables 'lot'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="104">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LotNumberForm.GetAvailableIDsInAllTestSucceed()' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="132">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LotNumberForm.GetAvailableIDsInAllTestSucceed()' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="155">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LotNumberForm.GetAvailableIDsInAllTestSucceed()' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="123">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LotNumberForm.GetAvailableIDsInAllTestSucceed()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="147">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LotNumberForm.GetAvailableIDsInAllTestSucceed()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="96">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'LotNumberForm.GetAvailableIDsInAllTestSucceed()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="168">Change 'LotNumberForm.GetAvailableIDsInAllTestSucceed()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAvailableLot_IDs()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="227">Object 'dr' can be disposed more than once in method 'LotNumberForm.GetAvailableLot_IDs()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 227</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="220">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LotNumberForm.GetAvailableLot_IDs()' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="212">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'LotNumberForm.GetAvailableLot_IDs()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenityIsValid2" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LotNumberForm.homogenityIsValid2' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'LotNumberForm.homogenityIsValid2' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'LotNumberForm.homogenityIsValid2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.Designer.cs" Line="47">Method 'LotNumberForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Adja meg a LOT számát:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.Designer.cs" Line="112">Method 'LotNumberForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "LotNumberForm".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.Designer.cs" Line="55">Method 'LotNumberForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "OK".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.Designer.cs" Line="92">Method 'LotNumberForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Program bezárása".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.Designer.cs" Line="66">Method 'LotNumberForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Érvényes LOT azonosítók:".</Issue>
            </Message>
            <Message Id="Adja" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.Designer.cs" Line="47">Correct the spelling of the unrecognized token 'Adja' in the literal '"Adja meg a LOT számát:"'.</Issue>
            </Message>
            <Message Id="LotNumberForm" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.Designer.cs" Line="112">Correct the spelling of the unrecognized token 'LotNumberForm' in the literal '"LotNumberForm"'.</Issue>
            </Message>
            <Message Id="azonosítók" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.Designer.cs" Line="66">Correct the spelling of the unrecognized token 'azonosítók' in the literal '"Érvényes LOT azonosítók:"'.</Issue>
            </Message>
            <Message Id="bezárása" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.Designer.cs" Line="92">Correct the spelling of the unrecognized token 'bezárása' in the literal '"Program bezárása"'.</Issue>
            </Message>
            <Message Id="számát" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.Designer.cs" Line="47">Correct the spelling of the unrecognized token 'számát' in the literal '"Adja meg a LOT számát:"'.</Issue>
            </Message>
            <Message Id="Érvényes" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.Designer.cs" Line="66">Correct the spelling of the unrecognized token 'Érvényes' in the literal '"Érvényes LOT azonosítók:"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_ids" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LotNumberForm.lot_ids' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'LotNumberForm.lot_ids' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_nr" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LotNumberForm.lot_nr' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lotid_list" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LotNumberForm.lotid_list' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'LotNumberForm.lotid_list' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="lotid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lotid' in member name 'LotNumberForm.lotid_list' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#printres" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="printres" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'printres' in member name 'LotNumberForm.printres' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'LotNumberForm.printres' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetLotIDsToShowPanelInCaseOfPrint(System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="allTestIsValid" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="187">'allTestIsValid', a parameter declared in 'LotNumberForm.SetLotIDsToShowPanelInCaseOfPrint(List&lt;string&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#source" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LotNumberForm.source' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tbLOTIDs_Enter(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="200">'LotNumberForm.tbLOTIDs_Enter(object, EventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="200">Method 'LotNumberForm.tbLOTIDs_Enter(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "tblotids enter".</Issue>
            </Message>
            <Message Id="tblotids" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="200">Correct the spelling of the unrecognized token 'tblotids' in the literal '"tblotids enter"'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.cs" Line="200">Change 'LotNumberForm.tbLOTIDs_Enter(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textBox1_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LotNumberForm.Designer.cs" Line="121">'LotNumberForm.textBox1_KeyDown(object, KeyEventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LOTResults" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="LOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'LOT' in type name 'LOTResults' by changing it to 'Lot'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.Double[],System.Boolean[],System.Double[],System.Boolean[],System.DateTime[],System.Int32[],System.Int32[],System.Boolean,System.Boolean[],System.Int32[],System.Int32[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="averages" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'averages' in parameter name 'lot_averages' by changing it to 'Averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'averages' in parameter name 'lot_averages_is_valid' by changing it to 'Averages'.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'ceve' in parameter name 'lot_ceve' by changing it to 'Ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'ceve' in parameter name 'lot_ceve_is_valid' by changing it to 'Ceve'.</Issue>
            </Message>
            <Message Id="count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'count' in parameter name 'h62_error_count' by changing it to 'Count'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'count' in parameter name 'not_h62_error_count' by changing it to 'Count'.</Issue>
            </Message>
            <Message Id="date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'date' in parameter name 'test_date' by changing it to 'Date'.</Issue>
            </Message>
            <Message Id="error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'error' in parameter name 'h62_error_count' by changing it to 'Error'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'error' in parameter name 'not_h62_error_count' by changing it to 'Error'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'h' in parameter name 'not_h62_error_count' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="is" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'is' in parameter name 'lot_averages_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'is' in parameter name 'lot_ceve_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'is' in parameter name 'lot_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'is' in parameter name 'stripCount_is_valid' by changing it to 'Is'.</Issue>
            </Message>
            <Message Id="of" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'of' in parameter name 'out_of_range_strips' by changing it to 'Of'.</Issue>
            </Message>
            <Message Id="range" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'range' in parameter name 'out_of_range_strips' by changing it to 'Range'.</Issue>
            </Message>
            <Message Id="strips" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'strips' in parameter name 'out_of_range_strips' by changing it to 'Strips'.</Issue>
            </Message>
            <Message Id="valid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'valid' in parameter name 'lot_averages_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'valid' in parameter name 'lot_ceve_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'valid' in parameter name 'lot_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the casing of 'valid' in parameter name 'stripCount_is_valid' by changing it to 'Valid'.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In method 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the spelling of 'ceve' in parameter name 'lot_ceve' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In method 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the spelling of 'ceve' in parameter name 'lot_ceve_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In method 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', correct the spelling of 'h' in parameter name 'h62_error_count' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', remove the underscores from parameter name 'h62_error_count'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', remove the underscores from parameter name 'lot_averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', remove the underscores from parameter name 'lot_averages_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', remove the underscores from parameter name 'lot_ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', remove the underscores from parameter name 'lot_ceve_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', remove the underscores from parameter name 'lot_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', remove the underscores from parameter name 'not_h62_error_count'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', remove the underscores from parameter name 'out_of_range_strips'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', remove the underscores from parameter name 'stripCount_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="14">In member 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', remove the underscores from parameter name 'test_date'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', validate parameter 'lot_averages' before using it.</Issue>
            </Message>
            <Message Id="10" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="49">In externally visible method 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', validate parameter 'h62_error_count' before using it.</Issue>
            </Message>
            <Message Id="11" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="49">In externally visible method 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', validate parameter 'not_h62_error_count' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', validate parameter 'lot_averages_is_valid' before using it.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', validate parameter 'lot_ceve' before using it.</Issue>
            </Message>
            <Message Id="4" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', validate parameter 'lot_ceve_is_valid' before using it.</Issue>
            </Message>
            <Message Id="5" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="49">In externally visible method 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', validate parameter 'test_date' before using it.</Issue>
            </Message>
            <Message Id="6" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="49">In externally visible method 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', validate parameter 'out_of_range_strips' before using it.</Issue>
            </Message>
            <Message Id="7" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="49">In externally visible method 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', validate parameter 'stripCount' before using it.</Issue>
            </Message>
            <Message Id="9" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'LOTResults.LOTResults(string, double[], bool[], double[], bool[], DateTime[], int[], int[], bool, bool[], int[], int[])', validate parameter 'lot_is_valid' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bindingRollSource" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'LOTResults.bindingRollSource' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btOK" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'LOTResults.btOK' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#cellColor" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'LOTResults.cellColor' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridLOT" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'LOTResults.dataGridLOT' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridRoll" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'LOTResults.dataGridRoll' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnumsAndComboBox_Load_For_All(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="72">'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' has a cyclomatic complexity of 138. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="72">'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' has a maintainability index of 0. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="76">In method 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="81">In method 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="87">In method 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="92">In method 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="98">In method 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="103">In method 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="109">In method 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="115">In method 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="121">In method 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="127">In method 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="133">In method 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="139">In method 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="148">Method 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "LOT eredmények".</Issue>
            </Message>
            <Message Id="eredmények" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="148">Correct the spelling of the unrecognized token 'eredmények' in the literal '"LOT eredmények"'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="159">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="159">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="176">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="192">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="192">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="214">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="214">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="219">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="219">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="236">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="236">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="242">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="242">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="258">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="258">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="264">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="264">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="281">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="281">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="286">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="286">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="301">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="301">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="306">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="306">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="322">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="322">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="327">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="327">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="343">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="343">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="348">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="348">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="364">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="364">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="369">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="369">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="385">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="385">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="390">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="390">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="406">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="406">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="411">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="411">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="426">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="426">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="431">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="431">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="447">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="447">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="452">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="452">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="468">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="468">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="473">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="473">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="489">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="489">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="494">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="494">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="510">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="510">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="515">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="515">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="531">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="531">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="536">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="536">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="552">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="552">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="557">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="557">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="573">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="573">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="578">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="578">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="595">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="595">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="600">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="600">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="616">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="616">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="621">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="621">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="637">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="637">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="642">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="642">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="658">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="658">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="663">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="663">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="678">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="678">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="683">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="683">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="699">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="699">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="704">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="704">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="720">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="720">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="725">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="725">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="741">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="741">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="746">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="746">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="762">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="762">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="767">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="767">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="783">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="783">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="788">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="788">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="151">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="168">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="184">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="201">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="606">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="612">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="627">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="633">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="648">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="654">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="669">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="675">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="689">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="695">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="710">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="716">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="731">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="737">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="752">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="758">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="773">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="779">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="794">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.cs" Line="800">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'LOTResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#i" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LOTResults.i' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'LOTResults.i'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.Designer.cs" Line="42">Method 'LOTResults.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "LOTResults".</Issue>
            </Message>
            <Message Id="LOTResults" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="LOTResults.Designer.cs" Line="42">Correct the spelling of the unrecognized token 'LOTResults' in the literal '"LOTResults"'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NoValidResults" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="17">Method 'NoValidResults.NoValidResults(string, string)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Nincs érvényes eredmény eltárolva a ,  számú LOT-ból a \', \' számú Roll esetén".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="18">Method 'NoValidResults.NoValidResults(string, string)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Nincs érvényes eredmény eltárolva a ,  számú LOT-ból a \', \' számú Roll esetén".</Issue>
            </Message>
            <Message Id="LOT-ból" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="17">Correct the spelling of the unrecognized token 'LOT-ból' in the literal '" számú LOT-ból a \'"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="18">Correct the spelling of the unrecognized token 'LOT-ból' in the literal '" számú LOT-ból a \'"'.</Issue>
            </Message>
            <Message Id="Nincs" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="17">Correct the spelling of the unrecognized token 'Nincs' in the literal '"Nincs érvényes eredmény eltárolva a "'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="18">Correct the spelling of the unrecognized token 'Nincs' in the literal '"Nincs érvényes eredmény eltárolva a "'.</Issue>
            </Message>
            <Message Id="eltárolva" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="17">Correct the spelling of the unrecognized token 'eltárolva' in the literal '"Nincs érvényes eredmény eltárolva a "'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="18">Correct the spelling of the unrecognized token 'eltárolva' in the literal '"Nincs érvényes eredmény eltárolva a "'.</Issue>
            </Message>
            <Message Id="eredmény" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="17">Correct the spelling of the unrecognized token 'eredmény' in the literal '"Nincs érvényes eredmény eltárolva a "'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="18">Correct the spelling of the unrecognized token 'eredmény' in the literal '"Nincs érvényes eredmény eltárolva a "'.</Issue>
            </Message>
            <Message Id="esetén" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="17">Correct the spelling of the unrecognized token 'esetén' in the literal '"\' számú Roll esetén"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="18">Correct the spelling of the unrecognized token 'esetén' in the literal '"\' számú Roll esetén"'.</Issue>
            </Message>
            <Message Id="számú" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="17">Correct the spelling of the unrecognized token 'számú' in the literal '" számú LOT-ból a \'"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="18">Correct the spelling of the unrecognized token 'számú' in the literal '" számú LOT-ból a \'"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="17">Correct the spelling of the unrecognized token 'számú' in the literal '"\' számú Roll esetén"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="18">Correct the spelling of the unrecognized token 'számú' in the literal '"\' számú Roll esetén"'.</Issue>
            </Message>
            <Message Id="érvényes" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="17">Correct the spelling of the unrecognized token 'érvényes' in the literal '"Nincs érvényes eredmény eltárolva a "'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="18">Correct the spelling of the unrecognized token 'érvényes' in the literal '"Nincs érvényes eredmény eltárolva a "'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="17">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'NoValidResults.NoValidResults(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.cs" Line="18">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'NoValidResults.NoValidResults(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.Designer.cs" Line="70">Method 'NoValidResults.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "NoValidResults".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.Designer.cs" Line="51">Method 'NoValidResults.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Rendben".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.Designer.cs" Line="43">Method 'NoValidResults.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "label1".</Issue>
            </Message>
            <Message Id="NoValidResults" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.Designer.cs" Line="70">Correct the spelling of the unrecognized token 'NoValidResults' in the literal '"NoValidResults"'.</Issue>
            </Message>
            <Message Id="Rendben" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="NoValidResults.Designer.cs" Line="51">Correct the spelling of the unrecognized token 'Rendben' in the literal '"Rendben"'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ProgramCloseWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Diagnostics.Stopwatch)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ProgramCloseWindow.cs" Line="47">Object 'this' can be disposed more than once in method 'ProgramCloseWindow.ProgramCloseWindow(Stopwatch)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 47</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ProgramCloseWindow.cs" Line="43">Method 'ProgramCloseWindow.ProgramCloseWindow(Stopwatch)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A program ,  másodperc múlva bezáródik!!".</Issue>
            </Message>
            <Message Id="bezáródik" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ProgramCloseWindow.cs" Line="43">Correct the spelling of the unrecognized token 'bezáródik' in the literal '" másodperc múlva bezáródik!!"'.</Issue>
            </Message>
            <Message Id="másodperc" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ProgramCloseWindow.cs" Line="43">Correct the spelling of the unrecognized token 'másodperc' in the literal '" másodperc múlva bezáródik!!"'.</Issue>
            </Message>
            <Message Id="múlva" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ProgramCloseWindow.cs" Line="43">Correct the spelling of the unrecognized token 'múlva' in the literal '" másodperc múlva bezáródik!!"'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ProgramCloseWindow.cs" Line="43">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ProgramCloseWindow.ProgramCloseWindow(Stopwatch)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ProgramCloseWindow.Designer.cs" Line="46">Method 'ProgramCloseWindow.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A program {0} másodperc múlva bezáródik.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ProgramCloseWindow.Designer.cs" Line="72">Method 'ProgramCloseWindow.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Bezárás most".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ProgramCloseWindow.Designer.cs" Line="90">Method 'ProgramCloseWindow.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Ne Záródjon be".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ProgramCloseWindow.Designer.cs" Line="109">Method 'ProgramCloseWindow.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Program bezárása".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ProgramCloseWindow.Designer.cs" Line="56">Method 'ProgramCloseWindow.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Rendben?".</Issue>
            </Message>
            <Message Id="Bezárás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ProgramCloseWindow.Designer.cs" Line="72">Correct the spelling of the unrecognized token 'Bezárás' in the literal '"Bezárás most"'.</Issue>
            </Message>
            <Message Id="Rendben" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ProgramCloseWindow.Designer.cs" Line="56">Correct the spelling of the unrecognized token 'Rendben' in the literal '"Rendben?"'.</Issue>
            </Message>
            <Message Id="Záródjon" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ProgramCloseWindow.Designer.cs" Line="90">Correct the spelling of the unrecognized token 'Záródjon' in the literal '"Ne Záródjon be"'.</Issue>
            </Message>
            <Message Id="bezárása" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ProgramCloseWindow.Designer.cs" Line="109">Correct the spelling of the unrecognized token 'bezárása' in the literal '"Program bezárása"'.</Issue>
            </Message>
            <Message Id="bezáródik" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ProgramCloseWindow.Designer.cs" Line="46">Correct the spelling of the unrecognized token 'bezáródik' in the literal '"A program {0} másodperc múlva bezáródik."'.</Issue>
            </Message>
            <Message Id="másodperc" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ProgramCloseWindow.Designer.cs" Line="46">Correct the spelling of the unrecognized token 'másodperc' in the literal '"A program {0} másodperc múlva bezáródik."'.</Issue>
            </Message>
            <Message Id="múlva" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ProgramCloseWindow.Designer.cs" Line="46">Correct the spelling of the unrecognized token 'múlva' in the literal '"A program {0} másodperc múlva bezáródik."'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RemeasureForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Remeasure" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Remeasure' in type name 'RemeasureForm'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.cs" Line="18">Method 'RemeasureForm.RemeasureForm(string, string, string)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A \', \' számú LOT-ból, az \', \' számú Roll, \', \' mérése következik".</Issue>
            </Message>
            <Message Id="lotid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.cs" Line="14">In method 'RemeasureForm.RemeasureForm(string, string, string)', correct the spelling of 'lotid' in parameter name 'lotid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="measuretype" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.cs" Line="14">In method 'RemeasureForm.RemeasureForm(string, string, string)', correct the spelling of 'measuretype' in parameter name 'measuretype' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="rollid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.cs" Line="14">In method 'RemeasureForm.RemeasureForm(string, string, string)', correct the spelling of 'rollid' in parameter name 'rollid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="LOT-ból" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.cs" Line="18">Correct the spelling of the unrecognized token 'LOT-ból' in the literal '"\' számú LOT-ból, az \'"'.</Issue>
            </Message>
            <Message Id="az" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.cs" Line="18">Correct the spelling of the unrecognized token 'az' in the literal '"\' számú LOT-ból, az \'"'.</Issue>
            </Message>
            <Message Id="következik" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.cs" Line="18">Correct the spelling of the unrecognized token 'következik' in the literal '"\' mérése következik"'.</Issue>
            </Message>
            <Message Id="mérése" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.cs" Line="18">Correct the spelling of the unrecognized token 'mérése' in the literal '"\' mérése következik"'.</Issue>
            </Message>
            <Message Id="számú" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.cs" Line="18">Correct the spelling of the unrecognized token 'számú' in the literal '"\' számú LOT-ból, az \'"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.cs" Line="18">Correct the spelling of the unrecognized token 'számú' in the literal '"\' számú Roll, \'"'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.cs" Line="18">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'RemeasureForm.RemeasureForm(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.Designer.cs" Line="47">Method 'RemeasureForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A {0} számú LOT-ból a {1} számú roll {2} típusú mérése következik".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.Designer.cs" Line="56">Method 'RemeasureForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Mérés indítása".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.Designer.cs" Line="73">Method 'RemeasureForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "RemeasureForm".</Issue>
            </Message>
            <Message Id="LOT-ból" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.Designer.cs" Line="47">Correct the spelling of the unrecognized token 'LOT-ból' in the literal '"A {0} számú LOT-ból a {1} számú roll {2} típusú mérése következik"'.</Issue>
            </Message>
            <Message Id="Mérés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.Designer.cs" Line="56">Correct the spelling of the unrecognized token 'Mérés' in the literal '"Mérés indítása"'.</Issue>
            </Message>
            <Message Id="RemeasureForm" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.Designer.cs" Line="73">Correct the spelling of the unrecognized token 'RemeasureForm' in the literal '"RemeasureForm"'.</Issue>
            </Message>
            <Message Id="indítása" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.Designer.cs" Line="56">Correct the spelling of the unrecognized token 'indítása' in the literal '"Mérés indítása"'.</Issue>
            </Message>
            <Message Id="következik" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.Designer.cs" Line="47">Correct the spelling of the unrecognized token 'következik' in the literal '"A {0} számú LOT-ból a {1} számú roll {2} típusú mérése következik"'.</Issue>
            </Message>
            <Message Id="mérése" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.Designer.cs" Line="47">Correct the spelling of the unrecognized token 'mérése' in the literal '"A {0} számú LOT-ból a {1} számú roll {2} típusú mérése következik"'.</Issue>
            </Message>
            <Message Id="számú" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.Designer.cs" Line="47">Correct the spelling of the unrecognized token 'számú' in the literal '"A {0} számú LOT-ból a {1} számú roll {2} típusú mérése következik"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.Designer.cs" Line="47">Correct the spelling of the unrecognized token 'számú' in the literal '"A {0} számú LOT-ból a {1} számú roll {2} típusú mérése következik"'.</Issue>
            </Message>
            <Message Id="típusú" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RemeasureForm.Designer.cs" Line="47">Correct the spelling of the unrecognized token 'típusú' in the literal '"A {0} számú LOT-ból a {1} számú roll {2} típusú mérése következik"'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ResultForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.Boolean,System.String,System.Boolean,System.Double,System.DateTime)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Reserved" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="330">'ResultForm.ResultForm(string, string, bool, string, bool, double, DateTime)' creates an exception of type 'IndexOutOfRangeException', an exception type that is reserved by the runtime and should never be raised by managed code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, bool, string, bool, double, DateTime)', correct the casing of 'ID' in parameter name 'LotID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Lot" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, bool, string, bool, double, DateTime)', correct the casing of 'Lot' in parameter name 'LotID' by changing it to 'lot'.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, bool, string, bool, double, DateTime)', correct the casing of 'avg' in parameter name 'blank_avg' by changing it to 'Avg'.</Issue>
            </Message>
            <Message Id="cv" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, bool, string, bool, double, DateTime)', correct the casing of 'cv' in parameter name 'blank_cv' by changing it to 'CV'.</Issue>
            </Message>
            <Message Id="ok" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, bool, string, bool, double, DateTime)', correct the casing of 'ok' in parameter name 'avg_ok' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="result" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, bool, string, bool, double, DateTime)', correct the casing of 'result' in parameter name 'blank_result' by changing it to 'Result'.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string, bool, string, bool, double, DateTime)', correct the spelling of 'avg' in parameter name 'avg_ok' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string, bool, string, bool, double, DateTime)', correct the spelling of 'avg' in parameter name 'blank_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="dt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string, bool, string, bool, double, DateTime)', correct the spelling of 'dt' in parameter name 'dt' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="rollid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string, bool, string, bool, double, DateTime)', correct the spelling of 'rollid' in parameter name 'rollid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, bool, string, bool, double, DateTime)', remove the underscores from parameter name 'avg_ok'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, bool, string, bool, double, DateTime)', remove the underscores from parameter name 'blank_avg'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, bool, string, bool, double, DateTime)', remove the underscores from parameter name 'blank_cv'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, bool, string, bool, double, DateTime)', remove the underscores from parameter name 'blank_result'.</Issue>
            </Message>
            <Message Id="Kevesebb" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="330">Correct the spelling of the unrecognized token 'Kevesebb' in the literal '"Kevesebb elem van a megmutatandónál"'.</Issue>
            </Message>
            <Message Id="elem" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="330">Correct the spelling of the unrecognized token 'elem' in the literal '"Kevesebb elem van a megmutatandónál"'.</Issue>
            </Message>
            <Message Id="megmutatandónál" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="330">Correct the spelling of the unrecognized token 'megmutatandónál' in the literal '"Kevesebb elem van a megmutatandónál"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'ID' in parameter name 'LotID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Lot" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'Lot' in parameter name 'LotID' by changing it to 'lot'.</Issue>
            </Message>
            <Message Id="count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'count' in parameter name 'out_of_range_strip_count' by changing it to 'Count'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'count' in parameter name 'strip_count' by changing it to 'Count'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'h' in parameter name 'not_h62' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="of" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'of' in parameter name 'out_of_range_strip_count' by changing it to 'Of'.</Issue>
            </Message>
            <Message Id="ok" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'ok' in parameter name 'avg_ok' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'ok' in parameter name 'cv_ok' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'ok' in parameter name 'out_ok' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="range" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'range' in parameter name 'out_of_range_strip_count' by changing it to 'Range'.</Issue>
            </Message>
            <Message Id="strip" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the casing of 'strip' in parameter name 'out_of_range_strip_count' by changing it to 'Strip'.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the spelling of 'avg' in parameter name 'avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the spelling of 'avg' in parameter name 'avg_ok' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the spelling of 'h' in parameter name 'h62' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="rollid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', correct the spelling of 'rollid' in parameter name 'rollid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', remove the underscores from parameter name 'avg_ok'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', remove the underscores from parameter name 'cv_ok'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', remove the underscores from parameter name 'not_h62'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', remove the underscores from parameter name 'out_of_range_strip_count'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', remove the underscores from parameter name 'out_ok'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string, string, string, string, string, string, string, string, string, string, string, string)', remove the underscores from parameter name 'strip_count'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String[],System.Double[],System.Boolean[],System.Double[],System.Boolean[],System.Double[],System.Boolean[],System.Double[],System.Boolean[],System.DateTime[],System.Int32[],System.Boolean[],System.Int32[],System.Boolean[],System.Boolean[],System.Boolean[],System.Boolean[],System.Boolean[],System.Int32[],System.Int32[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="averages" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'averages' in parameter name 'lot_averages' by changing it to 'Averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'averages' in parameter name 'lot_averages_is_valid' by changing it to 'Averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'averages' in parameter name 'roll_averages' by changing it to 'Averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'averages' in parameter name 'roll_averages_is_valid' by changing it to 'Averages'.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'ceve' in parameter name 'lot_ceve' by changing it to 'Ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'ceve' in parameter name 'lot_ceve_is_valid' by changing it to 'Ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'ceve' in parameter name 'roll_ceve' by changing it to 'Ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'ceve' in parameter name 'roll_ceve_is_valid' by changing it to 'Ceve'.</Issue>
            </Message>
            <Message Id="count" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'count' in parameter name 'h62_error_count' by changing it to 'Count'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'count' in parameter name 'not_h62_error_count' by changing it to 'Count'.</Issue>
            </Message>
            <Message Id="date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'date' in parameter name 'test_date' by changing it to 'Date'.</Issue>
            </Message>
            <Message Id="error" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'error' in parameter name 'h62_error_count' by changing it to 'Error'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'error' in parameter name 'not_h62_error_count' by changing it to 'Error'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'h' in parameter name 'not_h62_error_count' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="is" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'is' in parameter name 'blank_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'is' in parameter name 'homogenity_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'is' in parameter name 'lot_averages_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'is' in parameter name 'lot_ceve_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'is' in parameter name 'lot_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'is' in parameter name 'outofrange_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'is' in parameter name 'roll_averages_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'is' in parameter name 'roll_ceve_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'is' in parameter name 'roll_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'is' in parameter name 'stripCount_is_valid' by changing it to 'Is'.</Issue>
            </Message>
            <Message Id="stripcount" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'stripcount' in parameter name 'outofrange_stripcount' by changing it to 'Stripcount'.</Issue>
            </Message>
            <Message Id="valid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'valid' in parameter name 'blank_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'valid' in parameter name 'homogenity_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'valid' in parameter name 'lot_averages_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'valid' in parameter name 'lot_ceve_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'valid' in parameter name 'lot_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'valid' in parameter name 'outofrange_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'valid' in parameter name 'roll_averages_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'valid' in parameter name 'roll_ceve_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'valid' in parameter name 'roll_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the casing of 'valid' in parameter name 'stripCount_is_valid' by changing it to 'Valid'.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the spelling of 'ceve' in parameter name 'lot_ceve' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the spelling of 'ceve' in parameter name 'lot_ceve_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the spelling of 'ceve' in parameter name 'roll_ceve' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the spelling of 'ceve' in parameter name 'roll_ceve_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the spelling of 'h' in parameter name 'h62_error_count' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the spelling of 'homogenity' in parameter name 'homogenity_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="outofrange" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the spelling of 'outofrange' in parameter name 'outofrange_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the spelling of 'outofrange' in parameter name 'outofrange_stripcount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="stripcount" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', correct the spelling of 'stripcount' in parameter name 'outofrange_stripcount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', remove the underscores from parameter name 'blank_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', remove the underscores from parameter name 'h62_error_count'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', remove the underscores from parameter name 'homogenity_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', remove the underscores from parameter name 'lot_averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', remove the underscores from parameter name 'lot_averages_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', remove the underscores from parameter name 'lot_ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', remove the underscores from parameter name 'lot_ceve_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', remove the underscores from parameter name 'lot_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', remove the underscores from parameter name 'not_h62_error_count'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', remove the underscores from parameter name 'outofrange_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', remove the underscores from parameter name 'outofrange_stripcount'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', remove the underscores from parameter name 'roll_averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', remove the underscores from parameter name 'roll_averages_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', remove the underscores from parameter name 'roll_ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', remove the underscores from parameter name 'roll_ceve_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', remove the underscores from parameter name 'roll_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', remove the underscores from parameter name 'stripCount_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', remove the underscores from parameter name 'test_date'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="484">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'roll' before using it.</Issue>
            </Message>
            <Message Id="10" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="489">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'test_date' before using it.</Issue>
            </Message>
            <Message Id="11" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="489">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'stripCount' before using it.</Issue>
            </Message>
            <Message Id="12" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'stripCount_is_valid' before using it.</Issue>
            </Message>
            <Message Id="13" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="489">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'outofrange_stripcount' before using it.</Issue>
            </Message>
            <Message Id="14" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'outofrange_is_valid' before using it.</Issue>
            </Message>
            <Message Id="15" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'lot_is_valid' before using it.</Issue>
            </Message>
            <Message Id="16" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'roll_is_valid' before using it.</Issue>
            </Message>
            <Message Id="17" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'homogenity_is_valid' before using it.</Issue>
            </Message>
            <Message Id="18" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'blank_is_valid' before using it.</Issue>
            </Message>
            <Message Id="19" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="489">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'h62_error_count' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'lot_averages' before using it.</Issue>
            </Message>
            <Message Id="20" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="489">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'not_h62_error_count' before using it.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'lot_averages_is_valid' before using it.</Issue>
            </Message>
            <Message Id="4" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'roll_averages' before using it.</Issue>
            </Message>
            <Message Id="5" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'roll_averages_is_valid' before using it.</Issue>
            </Message>
            <Message Id="6" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'lot_ceve' before using it.</Issue>
            </Message>
            <Message Id="7" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'lot_ceve_is_valid' before using it.</Issue>
            </Message>
            <Message Id="8" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'roll_ceve' before using it.</Issue>
            </Message>
            <Message Id="9" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'ResultForm.ResultForm(string, string[], double[], bool[], double[], bool[], double[], bool[], double[], bool[], DateTime[], int[], bool[], int[], bool[], bool[], bool[], bool[], bool[], int[], int[])', validate parameter 'roll_ceve_is_valid' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String[],System.String[],System.String[],System.String[],System.String[],System.String[],System.String[],System.String[],System.String[],System.String[],System.String[],System.Int32[],System.String[],System.String[],System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Reserved" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="264">'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)' creates an exception of type 'IndexOutOfRangeException', an exception type that is reserved by the runtime and should never be raised by managed code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the casing of 'ID' in parameter name 'LotID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Lot" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the casing of 'Lot' in parameter name 'LotID' by changing it to 'lot'.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the casing of 'avg' in parameter name 'homogenity_avg' by changing it to 'Avg'.</Issue>
            </Message>
            <Message Id="cv" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the casing of 'cv' in parameter name 'homogenity_cv' by changing it to 'CV'.</Issue>
            </Message>
            <Message Id="date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the casing of 'date' in parameter name 'homogenity_date' by changing it to 'Date'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the casing of 'h' in parameter name 'not_h62' by changing it to 'H'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the casing of 'h' in parameter name 'not_h62_ok' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="ok" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the casing of 'ok' in parameter name 'not_h62_ok' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="result" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the casing of 'result' in parameter name 'blank_test_result' by changing it to 'Result'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the casing of 'result' in parameter name 'homogenity_result' by changing it to 'Result'.</Issue>
            </Message>
            <Message Id="rollid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the casing of 'rollid' in parameter name 'blank_rollid' by changing it to 'Rollid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the casing of 'rollid' in parameter name 'homogenity_rollid' by changing it to 'Rollid'.</Issue>
            </Message>
            <Message Id="strip" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the casing of 'strip' in parameter name 'wrong_strip' by changing it to 'Strip'.</Issue>
            </Message>
            <Message Id="test" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the casing of 'test' in parameter name 'blank_test_result' by changing it to 'Test'.</Issue>
            </Message>
            <Message Id="type" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the casing of 'type' in parameter name 'measure_type' by changing it to 'Type'.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the spelling of 'avg' in parameter name 'avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the spelling of 'avg' in parameter name 'homogenity_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the spelling of 'h' in parameter name 'h62' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the spelling of 'homogenity' in parameter name 'homogenity_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the spelling of 'homogenity' in parameter name 'homogenity_cv' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the spelling of 'homogenity' in parameter name 'homogenity_date' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the spelling of 'homogenity' in parameter name 'homogenity_result' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the spelling of 'homogenity' in parameter name 'homogenity_rollid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="rollid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the spelling of 'rollid' in parameter name 'blank_rollid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', correct the spelling of 'rollid' in parameter name 'homogenity_rollid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', remove the underscores from parameter name 'blank_rollid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', remove the underscores from parameter name 'blank_test_result'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', remove the underscores from parameter name 'homogenity_avg'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', remove the underscores from parameter name 'homogenity_cv'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', remove the underscores from parameter name 'homogenity_date'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', remove the underscores from parameter name 'homogenity_result'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', remove the underscores from parameter name 'homogenity_rollid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', remove the underscores from parameter name 'measure_type'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', remove the underscores from parameter name 'not_h62'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', remove the underscores from parameter name 'not_h62_ok'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">In member 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', remove the underscores from parameter name 'wrong_strip'.</Issue>
            </Message>
            <Message Id="Kevesebb" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="264">Correct the spelling of the unrecognized token 'Kevesebb' in the literal '"Kevesebb elem van a megmutatandónál"'.</Issue>
            </Message>
            <Message Id="elem" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="264">Correct the spelling of the unrecognized token 'elem' in the literal '"Kevesebb elem van a megmutatandónál"'.</Issue>
            </Message>
            <Message Id="megmutatandónál" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="264">Correct the spelling of the unrecognized token 'megmutatandónál' in the literal '"Kevesebb elem van a megmutatandónál"'.</Issue>
            </Message>
            <Message Id="measure_type" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="28">Parameter 'measure_type' of 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Int32)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="254">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="229">In externally visible method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', validate parameter 'blank_rollid' before using it.</Issue>
            </Message>
            <Message Id="10" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="254">In externally visible method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', validate parameter 'homogenity_date' before using it.</Issue>
            </Message>
            <Message Id="12" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="254">In externally visible method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', validate parameter 'wrong_strip' before using it.</Issue>
            </Message>
            <Message Id="13" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="254">In externally visible method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', validate parameter 'h62' before using it.</Issue>
            </Message>
            <Message Id="14" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="254">In externally visible method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', validate parameter 'not_h62' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="254">In externally visible method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', validate parameter 'homogenity_rollid' before using it.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="214">In externally visible method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', validate parameter 'blank_test_result' before using it.</Issue>
            </Message>
            <Message Id="4" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="236">In externally visible method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', validate parameter 'homogenity_result' before using it.</Issue>
            </Message>
            <Message Id="5" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="229">In externally visible method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', validate parameter 'avg' before using it.</Issue>
            </Message>
            <Message Id="6" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="254">In externally visible method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', validate parameter 'homogenity_avg' before using it.</Issue>
            </Message>
            <Message Id="7" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="229">In externally visible method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', validate parameter 'cv' before using it.</Issue>
            </Message>
            <Message Id="8" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="254">In externally visible method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', validate parameter 'homogenity_cv' before using it.</Issue>
            </Message>
            <Message Id="9" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="229">In externally visible method 'ResultForm.ResultForm(string, string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], string[], int[], string[], string[], bool)', validate parameter 'date' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#accepted_count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.accepted_count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AdjustWidth(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="995">In member 'ResultForm.AdjustWidth(bool)', correct the casing of 'LOT' in parameter name 'is_LOT' by changing it to 'Lot'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="995">In member 'ResultForm.AdjustWidth(bool)', remove the underscores from parameter name 'is_LOT'.</Issue>
            </Message>
            <Message Id="is_LOT" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="995">Parameter 'is_LOT' of 'ResultForm.AdjustWidth(bool)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'ResultForm.avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#blank_ok" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.blank_ok' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#blank_valid_res" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.blank_valid_res' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#boolTyped" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.boolTyped' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnColumn" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.btnColumn' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'ResultForm.btnColumn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btRemeasure" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.btRemeasure' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Remeasure" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Remeasure' in member name 'ResultForm.btRemeasure' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="bt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'bt' in member name 'ResultForm.btRemeasure' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#calculate_item_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2494">'ResultForm.calculate_item_Click(object, EventArgs)' has a cyclomatic complexity of 68. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2494">'ResultForm.calculate_item_Click(object, EventArgs)' has a maintainability index of 20. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2792">In method 'ResultForm.calculate_item_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'new CalculatedColumnValuesForm(this.avg, this.sd, this.cv, this.int_avg, this.summary_ints, this.accepted_count, this.not_accepted_count, this.not_h62d_error_count, this.h62d_error_count, this.tsp, ResultForm.dataGridRoll.Columns[this.column_index].Name)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2500">'sender', a parameter, is cast to type 'DataGridViewCell' multiple times in method 'ResultForm.calculate_item_Click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2496">'sender', a parameter, is cast to type 'DataGridViewColumn' multiple times in method 'ResultForm.calculate_item_Click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="calculate" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2494">Correct the casing of 'calculate' in member name 'ResultForm.calculate_item_Click(object, EventArgs)' by changing it to 'Calculate'.</Issue>
            </Message>
            <Message Id="item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2494">Correct the casing of 'item' in member name 'ResultForm.calculate_item_Click(object, EventArgs)' by changing it to 'Item'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2494">Remove the underscores from member name 'ResultForm.calculate_item_Click(object, EventArgs)'.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2735">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2788">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2788">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2515">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2553">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2590">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2691">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2705">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2705">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2725">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2640">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2748">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2752">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2756">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2758">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2761">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2768">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2771">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2771">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2778">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2778">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.calculate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ClearGridVariables(System.Object,System.Object,System.Object,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.Double&gt;,System.Collections.Generic.List`1&lt;System.Double&gt;,System.Collections.Generic.List`1&lt;System.Boolean&gt;,System.Collections.Generic.List`1&lt;System.Boolean&gt;,System.Collections.Generic.List`1&lt;System.DateTime&gt;,System.Collections.Generic.List`1&lt;System.DateTime&gt;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="selected_computers" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2383">Parameter 'selected_computers' of 'ResultForm.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_end_dates" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2383">Parameter 'selected_end_dates' of 'ResultForm.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_error" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2383">Parameter 'selected_error' of 'ResultForm.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_error_text" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2383">Parameter 'selected_error_text' of 'ResultForm.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_glus" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2383">Parameter 'selected_glus' of 'ResultForm.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_h62" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2383">Parameter 'selected_h62' of 'ResultForm.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_lot_id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2383">Parameter 'selected_lot_id' of 'ResultForm.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_nano_ampers" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2383">Parameter 'selected_nano_ampers' of 'ResultForm.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_not_h62" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2383">Parameter 'selected_not_h62' of 'ResultForm.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_result" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2383">Parameter 'selected_result' of 'ResultForm.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_roll_id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2383">Parameter 'selected_roll_id' of 'ResultForm.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_serial_numbers" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2383">Parameter 'selected_serial_numbers' of 'ResultForm.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_start_dates" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2383">Parameter 'selected_start_dates' of 'ResultForm.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_users" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2383">Parameter 'selected_users' of 'ResultForm.ClearGridVariables(object, object, object, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;string&gt;, List&lt;double&gt;, List&lt;double&gt;, List&lt;bool&gt;, List&lt;bool&gt;, List&lt;DateTime&gt;, List&lt;DateTime&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CloseAllDataTable()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="i" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2303">'i', a variable declared in 'ResultForm.CloseAllDataTable()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#color" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.color' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#column" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ResultForm.column' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#column_index" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.column_index' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#column_number" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.column_number' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateAllDataTable()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2327">In method 'ResultForm.CreateAllDataTable()', call System.IDisposable.Dispose on object 'allTable' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2343">In method 'ResultForm.CreateAllDataTable()', call System.IDisposable.Dispose on object 'allTable' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#currCell" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.currCell' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="curr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'curr' in member name 'ResultForm.currCell' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#cv" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.cv' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridRoll" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.dataGridRoll' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridRoll_CellMouseClickAll(System.Object,System.Windows.Forms.DataGridViewCellMouseEventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="data" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1282">Correct the casing of 'data' in member name 'ResultForm.dataGridRoll_CellMouseClickAll(object, DataGridViewCellMouseEventArgs)' by changing it to 'Data'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1282">Remove the underscores from member name 'ResultForm.dataGridRoll_CellMouseClickAll(object, DataGridViewCellMouseEventArgs)'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1282">In externally visible method 'ResultForm.dataGridRoll_CellMouseClickAll(object, DataGridViewCellMouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridView1_CellMouseDown(System.Object,System.Windows.Forms.DataGridViewCellMouseEventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="data" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1421">Correct the casing of 'data' in member name 'ResultForm.dataGridView1_CellMouseDown(object, DataGridViewCellMouseEventArgs)' by changing it to 'Data'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1421">Remove the underscores from member name 'ResultForm.dataGridView1_CellMouseDown(object, DataGridViewCellMouseEventArgs)'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1421">In externally visible method 'ResultForm.dataGridView1_CellMouseDown(object, DataGridViewCellMouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridView1_CellMouseDownForDgv1(System.Object,System.Windows.Forms.DataGridViewCellMouseEventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="data" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1360">Correct the casing of 'data' in member name 'ResultForm.dataGridView1_CellMouseDownForDgv1(object, DataGridViewCellMouseEventArgs)' by changing it to 'Data'.</Issue>
            </Message>
            <Message Id="Dgv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1360">Correct the spelling of 'Dgv' in member name 'ResultForm.dataGridView1_CellMouseDownForDgv1(object, DataGridViewCellMouseEventArgs)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1360">Remove the underscores from member name 'ResultForm.dataGridView1_CellMouseDownForDgv1(object, DataGridViewCellMouseEventArgs)'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1360">In externally visible method 'ResultForm.dataGridView1_CellMouseDownForDgv1(object, DataGridViewCellMouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridView1_CellMouseDownForDgvHomo(System.Object,System.Windows.Forms.DataGridViewCellMouseEventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="data" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1392">Correct the casing of 'data' in member name 'ResultForm.dataGridView1_CellMouseDownForDgvHomo(object, DataGridViewCellMouseEventArgs)' by changing it to 'Data'.</Issue>
            </Message>
            <Message Id="Dgv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1392">Correct the spelling of 'Dgv' in member name 'ResultForm.dataGridView1_CellMouseDownForDgvHomo(object, DataGridViewCellMouseEventArgs)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1392">Remove the underscores from member name 'ResultForm.dataGridView1_CellMouseDownForDgvHomo(object, DataGridViewCellMouseEventArgs)'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1392">In externally visible method 'ResultForm.dataGridView1_CellMouseDownForDgvHomo(object, DataGridViewCellMouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridView1_ColumnHeaderMouseClickedForAll(System.Object,System.Windows.Forms.DataGridViewCellMouseEventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="data" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2977">Correct the casing of 'data' in member name 'ResultForm.dataGridView1_ColumnHeaderMouseClickedForAll(object, DataGridViewCellMouseEventArgs)' by changing it to 'Data'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2977">Remove the underscores from member name 'ResultForm.dataGridView1_ColumnHeaderMouseClickedForAll(object, DataGridViewCellMouseEventArgs)'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2977">In externally visible method 'ResultForm.dataGridView1_ColumnHeaderMouseClickedForAll(object, DataGridViewCellMouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridView1_ColumnHeaderMouseClickedForRoll(System.Object,System.Windows.Forms.DataGridViewCellMouseEventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="data" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2950">Correct the casing of 'data' in member name 'ResultForm.dataGridView1_ColumnHeaderMouseClickedForRoll(object, DataGridViewCellMouseEventArgs)' by changing it to 'Data'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2950">Remove the underscores from member name 'ResultForm.dataGridView1_ColumnHeaderMouseClickedForRoll(object, DataGridViewCellMouseEventArgs)'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2950">In externally visible method 'ResultForm.dataGridView1_ColumnHeaderMouseClickedForRoll(object, DataGridViewCellMouseEventArgs)', validate parameter 'e' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridViewHomo" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.dataGridViewHomo' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dateType" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.dateType' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#doubleReg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.doubleReg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#doubleTyped" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.doubleTyped' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnumsAndComboBox_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="702">In method 'ResultForm.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="709">In method 'ResultForm.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="715">In method 'ResultForm.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="721">In method 'ResultForm.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="727">In method 'ResultForm.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="733">In method 'ResultForm.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="739">In method 'ResultForm.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="750">In method 'ResultForm.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="756">In method 'ResultForm.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="762">In method 'ResultForm.EnumsAndComboBox_Load(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="787">Method 'ResultForm.EnumsAndComboBox_Load(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Blank Teszt eredményei".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="794">Method 'ResultForm.EnumsAndComboBox_Load(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Csíkvágás eredmények".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="790">Method 'ResultForm.EnumsAndComboBox_Load(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Homogenitás Teszt eredményei".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewButtonColumn.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="772">Method 'ResultForm.EnumsAndComboBox_Load(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'DataGridViewButtonColumn.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Adatok mentése(xls)".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumn.set_HeaderText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="771">Method 'ResultForm.EnumsAndComboBox_Load(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Adatok mentése(xls)".</Issue>
            </Message>
            <Message Id="Adatok" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="771">Correct the spelling of the unrecognized token 'Adatok' in the literal '"Adatok mentése(xls)"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="772">Correct the spelling of the unrecognized token 'Adatok' in the literal '"Adatok mentése(xls)"'.</Issue>
            </Message>
            <Message Id="Csíkvágás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="794">Correct the spelling of the unrecognized token 'Csíkvágás' in the literal '"Csíkvágás eredmények"'.</Issue>
            </Message>
            <Message Id="Homogenitás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="790">Correct the spelling of the unrecognized token 'Homogenitás' in the literal '"Homogenitás Teszt eredményei"'.</Issue>
            </Message>
            <Message Id="Teszt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="787">Correct the spelling of the unrecognized token 'Teszt' in the literal '"Blank Teszt eredményei"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="790">Correct the spelling of the unrecognized token 'Teszt' in the literal '"Homogenitás Teszt eredményei"'.</Issue>
            </Message>
            <Message Id="eredményei" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="787">Correct the spelling of the unrecognized token 'eredményei' in the literal '"Blank Teszt eredményei"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="790">Correct the spelling of the unrecognized token 'eredményei' in the literal '"Homogenitás Teszt eredményei"'.</Issue>
            </Message>
            <Message Id="eredmények" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="794">Correct the spelling of the unrecognized token 'eredmények' in the literal '"Csíkvágás eredmények"'.</Issue>
            </Message>
            <Message Id="mentése" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="771">Correct the spelling of the unrecognized token 'mentése' in the literal '"Adatok mentése(xls)"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="772">Correct the spelling of the unrecognized token 'mentése' in the literal '"Adatok mentése(xls)"'.</Issue>
            </Message>
            <Message Id="xls" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="771">Correct the spelling of the unrecognized token 'xls' in the literal '"Adatok mentése(xls)"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="772">Correct the spelling of the unrecognized token 'xls' in the literal '"Adatok mentése(xls)"'.</Issue>
            </Message>
            <Message Id="column" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="697">'column', a variable declared in 'ResultForm.EnumsAndComboBox_Load(object, EventArgs)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnumsAndComboBox_Load_After_h_stored(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1141">In method 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1148">In method 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1154">In method 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1160">In method 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1166">In method 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1172">In method 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1178">In method 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1184">In method 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1190">In method 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1197">In method 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1204">In method 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1210">In method 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1244">Method 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Blank Teszt eredményei".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1252">Method 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Csíkvágás eredmények".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1248">Method 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Homogenitás Teszt eredményei".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewButtonColumn.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1218">Method 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'DataGridViewButtonColumn.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Adatok mentése(xls)".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumn.set_HeaderText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1217">Method 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Adatok mentése(xls)".</Issue>
            </Message>
            <Message Id="Adatok" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1217">Correct the spelling of the unrecognized token 'Adatok' in the literal '"Adatok mentése(xls)"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1218">Correct the spelling of the unrecognized token 'Adatok' in the literal '"Adatok mentése(xls)"'.</Issue>
            </Message>
            <Message Id="Csíkvágás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1252">Correct the spelling of the unrecognized token 'Csíkvágás' in the literal '"Csíkvágás eredmények"'.</Issue>
            </Message>
            <Message Id="Homogenitás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1248">Correct the spelling of the unrecognized token 'Homogenitás' in the literal '"Homogenitás Teszt eredményei"'.</Issue>
            </Message>
            <Message Id="Teszt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1244">Correct the spelling of the unrecognized token 'Teszt' in the literal '"Blank Teszt eredményei"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1248">Correct the spelling of the unrecognized token 'Teszt' in the literal '"Homogenitás Teszt eredményei"'.</Issue>
            </Message>
            <Message Id="eredményei" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1244">Correct the spelling of the unrecognized token 'eredményei' in the literal '"Blank Teszt eredményei"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1248">Correct the spelling of the unrecognized token 'eredményei' in the literal '"Homogenitás Teszt eredményei"'.</Issue>
            </Message>
            <Message Id="eredmények" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1252">Correct the spelling of the unrecognized token 'eredmények' in the literal '"Csíkvágás eredmények"'.</Issue>
            </Message>
            <Message Id="mentése" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1217">Correct the spelling of the unrecognized token 'mentése' in the literal '"Adatok mentése(xls)"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1218">Correct the spelling of the unrecognized token 'mentése' in the literal '"Adatok mentése(xls)"'.</Issue>
            </Message>
            <Message Id="xls" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1217">Correct the spelling of the unrecognized token 'xls' in the literal '"Adatok mentése(xls)"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1218">Correct the spelling of the unrecognized token 'xls' in the literal '"Adatok mentése(xls)"'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1266">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="column" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1136">'column', a variable declared in 'ResultForm.EnumsAndComboBox_Load_After_h_stored(object, EventArgs)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnumsAndComboBox_Load_For_All(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="535">In method 'ResultForm.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="541">In method 'ResultForm.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="547">In method 'ResultForm.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="553">In method 'ResultForm.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="559">In method 'ResultForm.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="565">In method 'ResultForm.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="571">In method 'ResultForm.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="577">In method 'ResultForm.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="583">In method 'ResultForm.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="589">In method 'ResultForm.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="595">In method 'ResultForm.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="601">In method 'ResultForm.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="607">In method 'ResultForm.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="613">In method 'ResultForm.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="619">In method 'ResultForm.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="633">Method 'ResultForm.EnumsAndComboBox_Load_For_All(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Csíkvágás eredmények".</Issue>
            </Message>
            <Message Id="Csíkvágás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="633">Correct the spelling of the unrecognized token 'Csíkvágás' in the literal '"Csíkvágás eredmények"'.</Issue>
            </Message>
            <Message Id="eredmények" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="633">Correct the spelling of the unrecognized token 'eredmények' in the literal '"Csíkvágás eredmények"'.</Issue>
            </Message>
            <Message Id="column" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="531">'column', a variable declared in 'ResultForm.EnumsAndComboBox_Load_For_All(object, EventArgs)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExportDataToCSV()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="956">Object 'wr' can be disposed more than once in method 'ResultForm.ExportDataToCSV()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 956</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="960">Method 'ResultForm.ExportDataToCSV()' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Nem nyitható meg a fájl:, _, .csv\nAz összesített eredmények térolása sikertelen...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="971">Method 'ResultForm.ExportDataToCSV()' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "_, .csv file created successfull".</Issue>
            </Message>
            <Message Id="CSV" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="894">Correct the casing of 'CSV' in member name 'ResultForm.ExportDataToCSV()' by changing it to 'Csv'.</Issue>
            </Message>
            <Message Id="Az" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="960">Correct the spelling of the unrecognized token 'Az' in the literal '".csv\nAz összesített eredmények térolása sikertelen"'.</Issue>
            </Message>
            <Message Id="Nem" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="960">Correct the spelling of the unrecognized token 'Nem' in the literal '"Nem nyitható meg a fájl:"'.</Issue>
            </Message>
            <Message Id="eredmények" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="960">Correct the spelling of the unrecognized token 'eredmények' in the literal '".csv\nAz összesített eredmények térolása sikertelen"'.</Issue>
            </Message>
            <Message Id="fájl" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="960">Correct the spelling of the unrecognized token 'fájl' in the literal '"Nem nyitható meg a fájl:"'.</Issue>
            </Message>
            <Message Id="nyitható" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="960">Correct the spelling of the unrecognized token 'nyitható' in the literal '"Nem nyitható meg a fájl:"'.</Issue>
            </Message>
            <Message Id="sikertelen" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="960">Correct the spelling of the unrecognized token 'sikertelen' in the literal '".csv\nAz összesített eredmények térolása sikertelen"'.</Issue>
            </Message>
            <Message Id="successfull" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="971">Correct the spelling of the unrecognized token 'successfull' in the literal '".csv file created successfull"'.</Issue>
            </Message>
            <Message Id="térolása" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="960">Correct the spelling of the unrecognized token 'térolása' in the literal '".csv\nAz összesített eredmények térolása sikertelen"'.</Issue>
            </Message>
            <Message Id="összesített" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="960">Correct the spelling of the unrecognized token 'összesített' in the literal '".csv\nAz összesített eredmények térolása sikertelen"'.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="901">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ResultForm.ExportDataToCSV()' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="933">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ResultForm.ExportDataToCSV()' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="894">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.ExportDataToCSV()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="960">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.ExportDataToCSV()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="971">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.ExportDataToCSV()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="960">Change 'ResultForm.ExportDataToCSV()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="971">Change 'ResultForm.ExportDataToCSV()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message Id="i" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="894">'i', a variable declared in 'ResultForm.ExportDataToCSV()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="894">'i', a variable declared in 'ResultForm.ExportDataToCSV()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="894">'i', a variable declared in 'ResultForm.ExportDataToCSV()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="894">'i', a variable declared in 'ResultForm.ExportDataToCSV()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="wr" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="894">'wr', a variable declared in 'ResultForm.ExportDataToCSV()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExportDataToCSV_Homogenity()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1076">Object 'wr' can be disposed more than once in method 'ResultForm.ExportDataToCSV_Homogenity()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1076</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1081">Method 'ResultForm.ExportDataToCSV_Homogenity()' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Nem nyitható meg a fájl:, _, .csv\nAz összesített eredmények térolása sikertelen...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1092">Method 'ResultForm.ExportDataToCSV_Homogenity()' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "_, .csv file created successfull".</Issue>
            </Message>
            <Message Id="CSV" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1014">Correct the casing of 'CSV' in member name 'ResultForm.ExportDataToCSV_Homogenity()' by changing it to 'Csv'.</Issue>
            </Message>
            <Message Id="Homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1014">Correct the spelling of 'Homogenity' in member name 'ResultForm.ExportDataToCSV_Homogenity()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1014">Remove the underscores from member name 'ResultForm.ExportDataToCSV_Homogenity()'.</Issue>
            </Message>
            <Message Id="Az" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1081">Correct the spelling of the unrecognized token 'Az' in the literal '".csv\nAz összesített eredmények térolása sikertelen"'.</Issue>
            </Message>
            <Message Id="Nem" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1081">Correct the spelling of the unrecognized token 'Nem' in the literal '"Nem nyitható meg a fájl:"'.</Issue>
            </Message>
            <Message Id="eredmények" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1081">Correct the spelling of the unrecognized token 'eredmények' in the literal '".csv\nAz összesített eredmények térolása sikertelen"'.</Issue>
            </Message>
            <Message Id="fájl" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1081">Correct the spelling of the unrecognized token 'fájl' in the literal '"Nem nyitható meg a fájl:"'.</Issue>
            </Message>
            <Message Id="nyitható" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1081">Correct the spelling of the unrecognized token 'nyitható' in the literal '"Nem nyitható meg a fájl:"'.</Issue>
            </Message>
            <Message Id="sikertelen" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1081">Correct the spelling of the unrecognized token 'sikertelen' in the literal '".csv\nAz összesített eredmények térolása sikertelen"'.</Issue>
            </Message>
            <Message Id="successfull" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1092">Correct the spelling of the unrecognized token 'successfull' in the literal '".csv file created successfull"'.</Issue>
            </Message>
            <Message Id="térolása" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1081">Correct the spelling of the unrecognized token 'térolása' in the literal '".csv\nAz összesített eredmények térolása sikertelen"'.</Issue>
            </Message>
            <Message Id="összesített" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1081">Correct the spelling of the unrecognized token 'összesített' in the literal '".csv\nAz összesített eredmények térolása sikertelen"'.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1021">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ResultForm.ExportDataToCSV_Homogenity()' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1053">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ResultForm.ExportDataToCSV_Homogenity()' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1014">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.ExportDataToCSV_Homogenity()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1081">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.ExportDataToCSV_Homogenity()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1092">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.ExportDataToCSV_Homogenity()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1081">Change 'ResultForm.ExportDataToCSV_Homogenity()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1092">Change 'ResultForm.ExportDataToCSV_Homogenity()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message Id="i" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1014">'i', a variable declared in 'ResultForm.ExportDataToCSV_Homogenity()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1014">'i', a variable declared in 'ResultForm.ExportDataToCSV_Homogenity()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1014">'i', a variable declared in 'ResultForm.ExportDataToCSV_Homogenity()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1014">'i', a variable declared in 'ResultForm.ExportDataToCSV_Homogenity()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="wr" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1014">'wr', a variable declared in 'ResultForm.ExportDataToCSV_Homogenity()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#false_items" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.false_items' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getSortOrderAll(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2857">The 'this' parameter (or 'Me' in Visual Basic) of 'ResultForm.getSortOrderAll(int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getSortOrderRoll(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2879">The 'this' parameter (or 'Me' in Visual Basic) of 'ResultForm.getSortOrderRoll(int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hide_item_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2930">'sender', a parameter, is cast to type 'DataGridViewCell' multiple times in method 'ResultForm.hide_item_Click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2926">'sender', a parameter, is cast to type 'DataGridViewColumn' multiple times in method 'ResultForm.hide_item_Click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="column_number" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2920">'column_number', a variable declared in 'ResultForm.hide_item_Click(object, EventArgs)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homo_valid_res" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homo_valid_res' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_avg" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'ResultForm.homogenity_avg' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'ResultForm.homogenity_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_avg' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_color" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.homogenity_color' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_color' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_computers" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ResultForm.homogenity_computers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_computers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_computers' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_cv" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'ResultForm.homogenity_cv' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_cv' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_cv' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_date" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'ResultForm.homogenity_date' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_date' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_date' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_deviceReplace" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'ResultForm.homogenity_deviceReplace' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_deviceReplace' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_deviceReplace' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_earlyDribble" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'ResultForm.homogenity_earlyDribble' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_earlyDribble' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_earlyDribble' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_end_dates" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'ResultForm.homogenity_end_dates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_end_dates' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_end_dates' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_error" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ResultForm.homogenity_error' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_error' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_error' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_error_text" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ResultForm.homogenity_error_text' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_error_text' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_error_text' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_glus" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'ResultForm.homogenity_glus' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="glus" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glus' in member name 'ResultForm.homogenity_glus' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_glus' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_glus' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_h62" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ResultForm.homogenity_h62' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_h62' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_h62' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_h62_count" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'ResultForm.homogenity_h62_count' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_h62_count' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_h62_count' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_h62_value" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'ResultForm.homogenity_h62_value' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_h62_value' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_h62_value' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_is_valid" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'ResultForm.homogenity_is_valid' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_is_valid' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_lot_id" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ResultForm.homogenity_lot_id' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_lot_id' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_lot_id' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_not_h62" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ResultForm.homogenity_not_h62' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_not_h62' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_not_h62' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_not_h62_count" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'ResultForm.homogenity_not_h62_count' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_not_h62_count' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_not_h62_count' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_not_h62_value" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'ResultForm.homogenity_not_h62_value' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_not_h62_value' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_not_h62_value' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_ok" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_ok' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_ok' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_out_of_range_strip_count" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'ResultForm.homogenity_out_of_range_strip_count' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_out_of_range_strip_count' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_out_of_range_strip_count' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_roll_id" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ResultForm.homogenity_roll_id' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_roll_id' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_roll_id' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_sn" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ResultForm.homogenity_sn' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_sn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sn' in member name 'ResultForm.homogenity_sn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_sn' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_start_dates" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'ResultForm.homogenity_start_dates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_start_dates' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_start_dates' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_stddev" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'ResultForm.homogenity_stddev' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_stddev' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="stddev" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'stddev' in member name 'ResultForm.homogenity_stddev' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_stddev' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_strip_count" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'ResultForm.homogenity_strip_count' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_strip_count' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_strip_count' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_strip_count_is_valid" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'ResultForm.homogenity_strip_count_is_valid' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_strip_count_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_strip_count_is_valid' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_temp" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'ResultForm.homogenity_temp' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_temp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_temp' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_users" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ResultForm.homogenity_users' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'ResultForm.homogenity_users' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.homogenity_users' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#i" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.i' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'ResultForm.i'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#idReg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.idReg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.Designer.cs" Line="46">Method 'ResultForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Csíkvágás Tesztek Eredményei".</Issue>
            </Message>
            <Message Id="Csíkvágás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.Designer.cs" Line="46">Correct the spelling of the unrecognized token 'Csíkvágás' in the literal '"Csíkvágás Tesztek Eredményei"'.</Issue>
            </Message>
            <Message Id="Eredményei" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.Designer.cs" Line="46">Correct the spelling of the unrecognized token 'Eredményei' in the literal '"Csíkvágás Tesztek Eredményei"'.</Issue>
            </Message>
            <Message Id="Tesztek" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.Designer.cs" Line="46">Correct the spelling of the unrecognized token 'Tesztek' in the literal '"Csíkvágás Tesztek Eredményei"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#int_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.int_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'ResultForm.int_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#intTyped" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.intTyped' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="int" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error">Consider replacing the language-specific data type identifier 'int' in member name 'ResultForm.intTyped' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#invalidate_item_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1489">In method 'ResultForm.invalidate_item_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'new Dialoge(ResultForm.selected_lot_id.ToString(), ResultForm.selected_roll_id.ToString(), this.measuretype, true)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1493">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.invalidate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1493">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.invalidate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1493">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.invalidate_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsFileinUse(System.IO.FileInfo)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Filein" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="862">Correct the spelling of 'Filein' in member name 'ResultForm.IsFileinUse(FileInfo)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="866">In externally visible method 'ResultForm.IsFileinUse(FileInfo)', validate parameter 'file' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_avg_ok" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'ResultForm.lot_avg_ok' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.lot_avg_ok' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_avg_res" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'ResultForm.lot_avg_res' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.lot_avg_res' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_cv_ok" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.lot_cv_ok' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_cv_res" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.lot_cv_res' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.lot_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_ok" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.lot_ok' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_out_ok" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.lot_out_ok' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_out_res" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.lot_out_res' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_stripcount_res" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="stripcount" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'stripcount' in member name 'ResultForm.lot_stripcount_res' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.lot_stripcount_res' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_to_invalidate" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ResultForm.lot_to_invalidate' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_valid_res" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.lot_valid_res' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#measure_to_invalidate" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ResultForm.measure_to_invalidate' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#measure_type" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.measure_type' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ResultForm.measure_type' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#measuretype" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.measuretype' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="measuretype" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'measuretype' in member name 'ResultForm.measuretype' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#not_accepted_count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.not_accepted_count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#object_item" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.object_item' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#remeasure_item" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.remeasure_item' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="remeasure" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'remeasure' in member name 'ResultForm.remeasure_item' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#remeasure_item_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1818">In method 'ResultForm.remeasure_item_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'new Dialoge(ResultForm.selected_lot_id.ToString(), ResultForm.selected_roll_id.ToString(), this.measuretype)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1822">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.remeasure_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1822">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.remeasure_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1822">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.remeasure_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#res" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.res' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#result" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.result' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#result_pk" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ResultForm.result_pk' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.roll_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'ResultForm.roll_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_avg_ok" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'ResultForm.roll_avg_ok' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.roll_avg_ok' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_avg_res" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'ResultForm.roll_avg_res' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.roll_avg_res' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_cv_ok" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.roll_cv_ok' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_cv_res" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.roll_cv_res' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.roll_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_ok" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.roll_ok' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_to_invalidate" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ResultForm.roll_to_invalidate' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_valid_res" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.roll_valid_res' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#row_number" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.row_number' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sd" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.sd' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sd' in member name 'ResultForm.sd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_codes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.selected_codes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'ResultForm.selected_codes' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_computers" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ResultForm.selected_computers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.selected_computers' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_device_replace" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.selected_device_replace' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'ResultForm.selected_device_replace' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_early_dribble" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.selected_early_dribble' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'ResultForm.selected_early_dribble' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_end_dates" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'ResultForm.selected_end_dates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.selected_end_dates' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_error" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ResultForm.selected_error' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.selected_error' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_error_text" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ResultForm.selected_error_text' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.selected_error_text' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_fk_errors_id" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'ResultForm.selected_fk_errors_id' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="fk" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'fk' in member name 'ResultForm.selected_fk_errors_id' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.selected_fk_errors_id' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_glus" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'ResultForm.selected_glus' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="glus" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glus' in member name 'ResultForm.selected_glus' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.selected_glus' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_h62" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'ResultForm.selected_h62' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.selected_h62' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_lot_id" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.selected_lot_id' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_measurytype" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="measurytype" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'measurytype' in member name 'ResultForm.selected_measurytype' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.selected_measurytype' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_nano_ampers" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'ResultForm.selected_nano_ampers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="ampers" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'ampers' in member name 'ResultForm.selected_nano_ampers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="nano" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'nano' in member name 'ResultForm.selected_nano_ampers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.selected_nano_ampers' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_not_h62" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'ResultForm.selected_not_h62' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.selected_not_h62' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_result" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.selected_result' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_result_ids" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'ResultForm.selected_result_ids' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.selected_result_ids' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_roll_id" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.selected_roll_id' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_rolls" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.selected_rolls' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ResultForm.selected_rolls' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_serial_numbers" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ResultForm.selected_serial_numbers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.selected_serial_numbers' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_start_dates" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'ResultForm.selected_start_dates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.selected_start_dates' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_temp" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'ResultForm.selected_temp' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.selected_temp' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_users" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'ResultForm.selected_users' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.selected_users' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetButtonOk()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3303">Method 'ResultForm.SetButtonOk()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "OK".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetInvalidatedClickedRoll(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">'ResultForm.SetInvalidatedClickedRoll(string, string, string)' has a cyclomatic complexity of 37. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1800">Object 'conn' can be disposed more than once in method 'ResultForm.SetInvalidatedClickedRoll(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1800</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1597">Object 'dr' can be disposed more than once in method 'ResultForm.SetInvalidatedClickedRoll(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1597</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1664">Object 'dr' can be disposed more than once in method 'ResultForm.SetInvalidatedClickedRoll(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1664</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1595">Method 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Nincs megfelelő eredmény".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1662">Method 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Nincs megfelelő eredmény".</Issue>
            </Message>
            <Message Id="id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">In member 'ResultForm.SetInvalidatedClickedRoll(string, string, string)', correct the casing of 'id' in parameter name 'lot_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">In member 'ResultForm.SetInvalidatedClickedRoll(string, string, string)', correct the casing of 'id' in parameter name 'roll_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="measuretype" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">In method 'ResultForm.SetInvalidatedClickedRoll(string, string, string)', correct the spelling of 'measuretype' in parameter name 'measuretype' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">In member 'ResultForm.SetInvalidatedClickedRoll(string, string, string)', remove the underscores from parameter name 'lot_id'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">In member 'ResultForm.SetInvalidatedClickedRoll(string, string, string)', remove the underscores from parameter name 'roll_id'.</Issue>
            </Message>
            <Message Id="Nincs" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1595">Correct the spelling of the unrecognized token 'Nincs' in the literal '"Nincs megfelelő eredmény"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1662">Correct the spelling of the unrecognized token 'Nincs' in the literal '"Nincs megfelelő eredmény"'.</Issue>
            </Message>
            <Message Id="eredmény" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1595">Correct the spelling of the unrecognized token 'eredmény' in the literal '"Nincs megfelelő eredmény"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1662">Correct the spelling of the unrecognized token 'eredmény' in the literal '"Nincs megfelelő eredmény"'.</Issue>
            </Message>
            <Message Id="megfelelő" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1595">Correct the spelling of the unrecognized token 'megfelelő' in the literal '"Nincs megfelelő eredmény"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1662">Correct the spelling of the unrecognized token 'megfelelő' in the literal '"Nincs megfelelő eredmény"'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1612">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'Convert.ToInt32(pk)'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1679">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'actpk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1537">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1703">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1722">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1742">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1559">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'measuretype'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1577">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'measuretype'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1626">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'pk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1644">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'lot_id', 'roll_id', 'pk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1771">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' could contain the following variables 'this.remeasured_lotid', 'this.remeasured_rollid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1586">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1653">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1612">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1679">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1537">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1703">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1722">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1742">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1771">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1559">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1577">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1626">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1644">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1595">Change 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1662">Change 'ResultForm.SetInvalidatedClickedRoll(string, string, string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">In externally visible method 'ResultForm.SetInvalidatedClickedRoll(string, string, string)', validate parameter 'measuretype' before using it.</Issue>
            </Message>
            <Message Id="lot_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">'lot_id', a parameter declared in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="measuretype" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">'measuretype', a parameter declared in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="res" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">'res', a variable declared in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">'res', a variable declared in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">'res', a variable declared in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">'res', a variable declared in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">'res', a variable declared in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">'res', a variable declared in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">'res', a variable declared in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">'res', a variable declared in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">'res', a variable declared in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="roll_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1517">'roll_id', a parameter declared in 'ResultForm.SetInvalidatedClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetRemeasuredClickedRoll(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">'ResultForm.SetRemeasuredClickedRoll(string, string, string)' has a cyclomatic complexity of 37. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3286">Object 'conn' can be disposed more than once in method 'ResultForm.SetRemeasuredClickedRoll(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3286</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3085">Object 'dr' can be disposed more than once in method 'ResultForm.SetRemeasuredClickedRoll(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3085</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3150">Object 'dr' can be disposed more than once in method 'ResultForm.SetRemeasuredClickedRoll(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 3150</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3083">Method 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Nincs megfelelő eredmény".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3148">Method 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Nincs megfelelő eredmény".</Issue>
            </Message>
            <Message Id="id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">In member 'ResultForm.SetRemeasuredClickedRoll(string, string, string)', correct the casing of 'id' in parameter name 'lot_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">In member 'ResultForm.SetRemeasuredClickedRoll(string, string, string)', correct the casing of 'id' in parameter name 'roll_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Remeasured" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">Correct the spelling of 'Remeasured' in member name 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="measuretype" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">In method 'ResultForm.SetRemeasuredClickedRoll(string, string, string)', correct the spelling of 'measuretype' in parameter name 'measuretype' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">In member 'ResultForm.SetRemeasuredClickedRoll(string, string, string)', remove the underscores from parameter name 'lot_id'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">In member 'ResultForm.SetRemeasuredClickedRoll(string, string, string)', remove the underscores from parameter name 'roll_id'.</Issue>
            </Message>
            <Message Id="Nincs" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3083">Correct the spelling of the unrecognized token 'Nincs' in the literal '"Nincs megfelelő eredmény"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3148">Correct the spelling of the unrecognized token 'Nincs' in the literal '"Nincs megfelelő eredmény"'.</Issue>
            </Message>
            <Message Id="eredmény" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3083">Correct the spelling of the unrecognized token 'eredmény' in the literal '"Nincs megfelelő eredmény"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3148">Correct the spelling of the unrecognized token 'eredmény' in the literal '"Nincs megfelelő eredmény"'.</Issue>
            </Message>
            <Message Id="megfelelő" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3083">Correct the spelling of the unrecognized token 'megfelelő' in the literal '"Nincs megfelelő eredmény"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3148">Correct the spelling of the unrecognized token 'megfelelő' in the literal '"Nincs megfelelő eredmény"'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3100">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'Convert.ToInt32(pk)'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3025">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'ResultForm.selected_lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3189">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'ResultForm.selected_lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3208">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'ResultForm.selected_lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3228">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'ResultForm.selected_lot_id', 'roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3047">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'ResultForm.selected_lot_id', 'roll_id', 'measuretype'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3065">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'ResultForm.selected_lot_id', 'roll_id', 'measuretype'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3112">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'ResultForm.selected_lot_id', 'roll_id', 'pk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3130">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'ResultForm.selected_lot_id', 'roll_id', 'pk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3165">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'actpk'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3257">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' could contain the following variables 'this.remeasured_lotid', 'this.remeasured_rollid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="lot_id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">Parameter 'lot_id' of 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3074">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3139">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3100">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3165">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3025">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3189">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3208">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3228">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3257">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3047">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3065">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3112">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3130">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3083">Change 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3148">Change 'ResultForm.SetRemeasuredClickedRoll(string, string, string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">In externally visible method 'ResultForm.SetRemeasuredClickedRoll(string, string, string)', validate parameter 'measuretype' before using it.</Issue>
            </Message>
            <Message Id="lot_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">'lot_id', a parameter declared in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="measuretype" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">'measuretype', a parameter declared in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="res" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">'res', a variable declared in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">'res', a variable declared in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">'res', a variable declared in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">'res', a variable declared in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">'res', a variable declared in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">'res', a variable declared in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">'res', a variable declared in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">'res', a variable declared in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">'res', a variable declared in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="roll_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="3005">'roll_id', a parameter declared in 'ResultForm.SetRemeasuredClickedRoll(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowContextMenu(System.Windows.Forms.DataGridViewCell)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2418">In method 'ResultForm.ShowContextMenu(DataGridViewCell)', call System.IDisposable.Dispose on object 'cm' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MenuItem.#ctor(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2424">Method 'ResultForm.ShowContextMenu(DataGridViewCell)' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Adatok kiemelése színnel, ,  oszlop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2420">Method 'ResultForm.ShowContextMenu(DataGridViewCell)' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Oszlop elrejtése:,  oszlop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2422">Method 'ResultForm.ShowContextMenu(DataGridViewCell)' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Értékekből avg,stddev,cv vagy összeg számolás:,  oszlop".</Issue>
            </Message>
            <Message Id="Adatok" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2424">Correct the spelling of the unrecognized token 'Adatok' in the literal '"Adatok kiemelése színnel, "'.</Issue>
            </Message>
            <Message Id="Oszlop" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2420">Correct the spelling of the unrecognized token 'Oszlop' in the literal '"Oszlop elrejtése:"'.</Issue>
            </Message>
            <Message Id="avg" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2422">Correct the spelling of the unrecognized token 'avg' in the literal '"Értékekből avg,stddev,cv vagy összeg számolás:"'.</Issue>
            </Message>
            <Message Id="elrejtése" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2420">Correct the spelling of the unrecognized token 'elrejtése' in the literal '"Oszlop elrejtése:"'.</Issue>
            </Message>
            <Message Id="kiemelése" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2424">Correct the spelling of the unrecognized token 'kiemelése' in the literal '"Adatok kiemelése színnel, "'.</Issue>
            </Message>
            <Message Id="oszlop" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2420">Correct the spelling of the unrecognized token 'oszlop' in the literal '" oszlop"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2422">Correct the spelling of the unrecognized token 'oszlop' in the literal '" oszlop"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2424">Correct the spelling of the unrecognized token 'oszlop' in the literal '" oszlop"'.</Issue>
            </Message>
            <Message Id="stddev" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2422">Correct the spelling of the unrecognized token 'stddev' in the literal '"Értékekből avg,stddev,cv vagy összeg számolás:"'.</Issue>
            </Message>
            <Message Id="számolás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2422">Correct the spelling of the unrecognized token 'számolás' in the literal '"Értékekből avg,stddev,cv vagy összeg számolás:"'.</Issue>
            </Message>
            <Message Id="színnel" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2424">Correct the spelling of the unrecognized token 'színnel' in the literal '"Adatok kiemelése színnel, "'.</Issue>
            </Message>
            <Message Id="vagy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2422">Correct the spelling of the unrecognized token 'vagy' in the literal '"Értékekből avg,stddev,cv vagy összeg számolás:"'.</Issue>
            </Message>
            <Message Id="Értékekből" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2422">Correct the spelling of the unrecognized token 'Értékekből' in the literal '"Értékekből avg,stddev,cv vagy összeg számolás:"'.</Issue>
            </Message>
            <Message Id="összeg" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2422">Correct the spelling of the unrecognized token 'összeg' in the literal '"Értékekből avg,stddev,cv vagy összeg számolás:"'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2420">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.ShowContextMenu(DataGridViewCell)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2422">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.ShowContextMenu(DataGridViewCell)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2424">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.ShowContextMenu(DataGridViewCell)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowContextMenu(System.Windows.Forms.DataGridViewCell,System.Object,System.Object,System.Object,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1456">In method 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)', call System.IDisposable.Dispose on object 'cm' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MenuItem.#ctor(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1460">Method 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Adatok mutatása(LOT ID:,  ,Roll ID:, )".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1458">Method 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Invalidálás(LOT ID:,  ,Roll ID:, )".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1459">Method 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)' passes a literal string as parameter 'text' of a call to 'MenuItem.MenuItem(string)'. Retrieve the following string(s) from a resource table instead: "Újramérés(LOT ID:,  ,Roll ID:, )".</Issue>
            </Message>
            <Message Id="id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1452">In member 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)', correct the casing of 'id' in parameter name 'selected_lot_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1452">In member 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)', correct the casing of 'id' in parameter name 'selected_roll_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="lot" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1452">In member 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)', correct the casing of 'lot' in parameter name 'selected_lot_id' by changing it to 'Lot'.</Issue>
            </Message>
            <Message Id="result" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1452">In member 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)', correct the casing of 'result' in parameter name 'selected_result' by changing it to 'Result'.</Issue>
            </Message>
            <Message Id="roll" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1452">In member 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)', correct the casing of 'roll' in parameter name 'selected_roll_id' by changing it to 'Roll'.</Issue>
            </Message>
            <Message Id="type" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1452">In member 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)', correct the casing of 'type' in parameter name 'measure_type' by changing it to 'Type'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1452">In member 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)', remove the underscores from parameter name 'measure_type'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1452">In member 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)', remove the underscores from parameter name 'selected_lot_id'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1452">In member 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)', remove the underscores from parameter name 'selected_result'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1452">In member 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)', remove the underscores from parameter name 'selected_roll_id'.</Issue>
            </Message>
            <Message Id="Adatok" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1460">Correct the spelling of the unrecognized token 'Adatok' in the literal '"Adatok mutatása(LOT ID:"'.</Issue>
            </Message>
            <Message Id="Invalidálás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1458">Correct the spelling of the unrecognized token 'Invalidálás' in the literal '"Invalidálás(LOT ID:"'.</Issue>
            </Message>
            <Message Id="mutatása" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1460">Correct the spelling of the unrecognized token 'mutatása' in the literal '"Adatok mutatása(LOT ID:"'.</Issue>
            </Message>
            <Message Id="Újramérés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1459">Correct the spelling of the unrecognized token 'Újramérés' in the literal '"Újramérés(LOT ID:"'.</Issue>
            </Message>
            <Message Id="measure_type" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1452">Parameter 'measure_type' of 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_result" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1452">Parameter 'selected_result' of 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1458">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1459">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1460">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="measure_type" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1452">'measure_type', a parameter declared in 'ResultForm.ShowContextMenu(DataGridViewCell, object, object, object, object)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#showdata_item" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.showdata_item' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="showdata" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'showdata' in member name 'ResultForm.showdata_item' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#showdata_item_Click(System.Object,System.EventArgs)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1857">'ResultForm.showdata_item_Click(object, EventArgs)' has a cyclomatic complexity of 54. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1857">'ResultForm.showdata_item_Click(object, EventArgs)' has a maintainability index of 19. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1977">In method 'ResultForm.showdata_item_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'new BlankChart(ResultForm.selected_serial_numbers.ToArray(), ResultForm.selected_nano_ampers.ToArray())' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2285">In method 'ResultForm.showdata_item_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'new NoValidResults(ResultForm.selected_lot_id.ToString(), ResultForm.selected_roll_id.ToString())' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2043">Object 'conn' can be disposed more than once in method 'ResultForm.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2043</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2271">Object 'connect' can be disposed more than once in method 'ResultForm.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2271</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1902">Object 'dr' can be disposed more than once in method 'ResultForm.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1902</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1964">Object 'dr' can be disposed more than once in method 'ResultForm.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1964</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2022">Object 'dr' can be disposed more than once in method 'ResultForm.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2022</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2079">Object 'dr' can be disposed more than once in method 'ResultForm.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2079</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2122">Object 'dr' can be disposed more than once in method 'ResultForm.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2122</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2191">Object 'dr' can be disposed more than once in method 'ResultForm.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2191</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2251">Object 'dr' can be disposed more than once in method 'ResultForm.showdata_item_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2251</Issue>
            </Message>
            <Message Id="item" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1857">Correct the casing of 'item' in member name 'ResultForm.showdata_item_Click(object, EventArgs)' by changing it to 'Item'.</Issue>
            </Message>
            <Message Id="showdata" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1857">Correct the casing of 'showdata' in member name 'ResultForm.showdata_item_Click(object, EventArgs)' by changing it to 'Showdata'.</Issue>
            </Message>
            <Message Id="showdata" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1857">Correct the spelling of 'showdata' in member name 'ResultForm.showdata_item_Click(object, EventArgs)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1857">Remove the underscores from member name 'ResultForm.showdata_item_Click(object, EventArgs)'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2060">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.showdata_item_Click(object, EventArgs)' could contain the following variables 'ResultForm.selected_lot_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1865">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.showdata_item_Click(object, EventArgs)' could contain the following variables 'ResultForm.selected_lot_id', 'ResultForm.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1883">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.showdata_item_Click(object, EventArgs)' could contain the following variables 'ResultForm.selected_lot_id', 'ResultForm.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1979">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.showdata_item_Click(object, EventArgs)' could contain the following variables 'ResultForm.selected_lot_id', 'ResultForm.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2000">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.showdata_item_Click(object, EventArgs)' could contain the following variables 'ResultForm.selected_lot_id', 'ResultForm.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2097">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.showdata_item_Click(object, EventArgs)' could contain the following variables 'ResultForm.selected_lot_id', 'ResultForm.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2148">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.showdata_item_Click(object, EventArgs)' could contain the following variables 'ResultForm.selected_lot_id', 'ResultForm.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2166">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.showdata_item_Click(object, EventArgs)' could contain the following variables 'ResultForm.selected_lot_id', 'ResultForm.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2207">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.showdata_item_Click(object, EventArgs)' could contain the following variables 'ResultForm.selected_lot_id', 'ResultForm.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2229">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.showdata_item_Click(object, EventArgs)' could contain the following variables 'ResultForm.selected_lot_id', 'ResultForm.selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1924">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.showdata_item_Click(object, EventArgs)' could contain the following variables 'act_result_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1942">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'ResultForm.showdata_item_Click(object, EventArgs)' could contain the following variables 'act_result_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2110">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2181">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2182">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2183">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2184">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2012">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2013">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2111">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2241">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2242">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1955">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1956">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2014">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2108">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2109">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2112">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2178">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2243">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1894">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1957">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2113">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2114">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2115">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2116">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1954">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2010">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2011">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2068">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2069">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2177">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2179">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2180">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2239">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2240">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1924">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1942">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2060">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2078">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1865">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1883">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="1979">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2000">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2097">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2148">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2166">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2207">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ResultForm.cs" Line="2229">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ResultForm.showdata_item_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stddev" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.stddev' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="stddev" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'stddev' in member name 'ResultForm.stddev' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stringTyped" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.stringTyped' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stripcount_res" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="stripcount" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'stripcount' in member name 'ResultForm.stripcount_res' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ResultForm.stripcount_res' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sum" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.sum' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#summary_ints" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.summary_ints' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="ints" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'ints' in member name 'ResultForm.summary_ints' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sumOfSquaresOfDifferences" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.sumOfSquaresOfDifferences' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tha_strip_count_in_a_roll" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ResultForm.tha_strip_count_in_a_roll' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#true_items" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.true_items' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tsp" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.tsp' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="tsp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'tsp' in member name 'ResultForm.tsp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#txbCell" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.txbCell' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="txb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'txb' in member name 'ResultForm.txbCell' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#types" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.types' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;Type&gt;' in 'ResultForm.types' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#values" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.values' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;object&gt;' in 'ResultForm.values' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#wr" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.wr' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="wr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'wr' in member name 'ResultForm.wr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#wrong_strip_count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ResultForm.wrong_strip_count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'ResultForm.wrong_strip_count' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RollResults" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,System.String[],System.Double[],System.Boolean[],System.Double[],System.Boolean[],System.DateTime[],System.Int32[],System.Int32[],System.Boolean[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="403">Object 'conn' can be disposed more than once in method 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 403</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="389">Object 'dr' can be disposed more than once in method 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 389</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="397">Modify 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="averages" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the casing of 'averages' in parameter name 'selected_roll_averages' by changing it to 'Averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the casing of 'averages' in parameter name 'selected_roll_averages_is_valid' by changing it to 'Averages'.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the casing of 'ceve' in parameter name 'selected_roll_ceve' by changing it to 'Ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the casing of 'ceve' in parameter name 'selected_roll_ceve_is_valid' by changing it to 'Ceve'.</Issue>
            </Message>
            <Message Id="date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the casing of 'date' in parameter name 'test_date' by changing it to 'Date'.</Issue>
            </Message>
            <Message Id="is" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the casing of 'is' in parameter name 'selected_roll_averages_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the casing of 'is' in parameter name 'selected_roll_ceve_is_valid' by changing it to 'Is'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the casing of 'is' in parameter name 'selected_roll_is_valid' by changing it to 'Is'.</Issue>
            </Message>
            <Message Id="roll" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the casing of 'roll' in parameter name 'selected_roll' by changing it to 'Roll'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the casing of 'roll' in parameter name 'selected_roll_averages' by changing it to 'Roll'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the casing of 'roll' in parameter name 'selected_roll_averages_is_valid' by changing it to 'Roll'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the casing of 'roll' in parameter name 'selected_roll_ceve' by changing it to 'Roll'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the casing of 'roll' in parameter name 'selected_roll_ceve_is_valid' by changing it to 'Roll'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the casing of 'roll' in parameter name 'selected_roll_is_valid' by changing it to 'Roll'.</Issue>
            </Message>
            <Message Id="stripcount" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the casing of 'stripcount' in parameter name 'outofrange_stripcount' by changing it to 'Stripcount'.</Issue>
            </Message>
            <Message Id="valid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the casing of 'valid' in parameter name 'selected_roll_averages_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the casing of 'valid' in parameter name 'selected_roll_ceve_is_valid' by changing it to 'Valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the casing of 'valid' in parameter name 'selected_roll_is_valid' by changing it to 'Valid'.</Issue>
            </Message>
            <Message Id="ceve" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In method 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the spelling of 'ceve' in parameter name 'selected_roll_ceve' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In method 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the spelling of 'ceve' in parameter name 'selected_roll_ceve_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="outofrange" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In method 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the spelling of 'outofrange' in parameter name 'outofrange_stripcount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="stripcount" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In method 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', correct the spelling of 'stripcount' in parameter name 'outofrange_stripcount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', remove the underscores from parameter name 'outofrange_stripcount'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', remove the underscores from parameter name 'selected_roll'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', remove the underscores from parameter name 'selected_roll_averages'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', remove the underscores from parameter name 'selected_roll_averages_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', remove the underscores from parameter name 'selected_roll_ceve'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', remove the underscores from parameter name 'selected_roll_ceve_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', remove the underscores from parameter name 'selected_roll_is_valid'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="19">In member 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', remove the underscores from parameter name 'test_date'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="314">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' could contain the following variables 'lot'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="339">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' could contain the following variables 'lotTable', 'this.lotid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="323">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' could contain the following variables 'this.pk_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="325">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="350">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="351">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="354">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="359">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="352">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="353">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="356">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="357">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="358">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="360">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="361">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="364">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="364">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="372">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="372">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="314">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="320">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="323">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="339">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="294">In externally visible method 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', validate parameter 'selected_roll' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', validate parameter 'selected_roll_averages' before using it.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', validate parameter 'selected_roll_averages_is_valid' before using it.</Issue>
            </Message>
            <Message Id="4" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', validate parameter 'selected_roll_ceve' before using it.</Issue>
            </Message>
            <Message Id="5" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', validate parameter 'selected_roll_ceve_is_valid' before using it.</Issue>
            </Message>
            <Message Id="6" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="296">In externally visible method 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', validate parameter 'test_date' before using it.</Issue>
            </Message>
            <Message Id="7" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="296">In externally visible method 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', validate parameter 'stripCount' before using it.</Issue>
            </Message>
            <Message Id="8" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="296">In externally visible method 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', validate parameter 'outofrange_stripcount' before using it.</Issue>
            </Message>
            <Message Id="9" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'RollResults.RollResults(string, string[], double[], bool[], double[], bool[], DateTime[], int[], int[], bool[])', validate parameter 'selected_roll_is_valid' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#act_lot_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.act_lot_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'RollResults.act_lot_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#act_lot_date" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.act_lot_date' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#act_lot_stripcount_ok" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.act_lot_stripcount_ok' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#act_roll_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.act_roll_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'RollResults.act_roll_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Averages_ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'RollResults.Averages_ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'RollResults.Averages_ID'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btExit" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.btExit' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="bt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'bt' in member name 'RollResults.btExit' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="924">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.button1_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Boolean)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="924">Because the behavior of 'Convert.ToString(bool)' could vary based on the current user's locale settings, replace this call in 'RollResults.button1_Click(object, EventArgs)' with a call to 'Convert.ToString(bool, IFormatProvider)'. If the result of 'Convert.ToString(bool, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="924">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.button1_Click(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonSave_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="836">Method 'RollResults.buttonSave_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Lot értékek sikeresen módosítva az adatbázisban".</Issue>
            </Message>
            <Message Id="adatbázisban" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="836">Correct the spelling of the unrecognized token 'adatbázisban' in the literal '"Lot értékek sikeresen módosítva az adatbázisban"'.</Issue>
            </Message>
            <Message Id="az" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="836">Correct the spelling of the unrecognized token 'az' in the literal '"Lot értékek sikeresen módosítva az adatbázisban"'.</Issue>
            </Message>
            <Message Id="módosítva" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="836">Correct the spelling of the unrecognized token 'módosítva' in the literal '"Lot értékek sikeresen módosítva az adatbázisban"'.</Issue>
            </Message>
            <Message Id="sikeresen" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="836">Correct the spelling of the unrecognized token 'sikeresen' in the literal '"Lot értékek sikeresen módosítva az adatbázisban"'.</Issue>
            </Message>
            <Message Id="értékek" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="836">Correct the spelling of the unrecognized token 'értékek' in the literal '"Lot értékek sikeresen módosítva az adatbázisban"'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="836">Change 'RollResults.buttonSave_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Calc_Lot_values(System.Object,System.Collections.Generic.List`1&lt;System.Object&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1829">'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' has a cyclomatic complexity of 76. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1829">'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' has a maintainability index of 16. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2113">Object 'connection' can be disposed more than once in method 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2113</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1862">Object 'dr' can be disposed more than once in method 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1862</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1829">Change 'List&lt;object&gt;' in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1829">In member 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)', correct the casing of 'id' in parameter name 'selected_selected_lot_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="lot" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1829">In member 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)', correct the casing of 'lot' in parameter name 'selected_selected_lot_id' by changing it to 'Lot'.</Issue>
            </Message>
            <Message Id="rolls" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1829">In member 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)', correct the casing of 'rolls' in parameter name 'selected_rolls' by changing it to 'Rolls'.</Issue>
            </Message>
            <Message Id="selected" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1829">In member 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)', correct the casing of 'selected' in parameter name 'selected_selected_lot_id' by changing it to 'Selected'.</Issue>
            </Message>
            <Message Id="values" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1829">Correct the casing of 'values' in member name 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' by changing it to 'Values'.</Issue>
            </Message>
            <Message Id="Calc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1829">Correct the spelling of 'Calc' in member name 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1829">Remove the underscores from member name 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1829">In member 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)', remove the underscores from parameter name 'selected_rolls'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1829">In member 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)', remove the underscores from parameter name 'selected_selected_lot_id'.</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2099">Method 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' passes 'No value for max pk_id in homogenity result..' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1931">Method 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' passes 'error_count is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1944">Method 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' passes 'error_count is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1889">Method 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' passes 'out_count is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1844">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' could contain the following variables 'base.Current', 'selected_selected_lot_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1869">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' could contain the following variables 'base.Current', 'selected_selected_lot_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2082">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' could contain the following variables 'selected_selected_lot_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1879">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' could contain the following variables 'selected_selected_lot_id', 'base.Current'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1907">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' could contain the following variables 'selected_selected_lot_id', 'base.Current'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1911">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' could contain the following variables 'selected_selected_lot_id', 'base.Current'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1922">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' could contain the following variables 'selected_selected_lot_id', 'base.Current'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1935">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' could contain the following variables 'selected_selected_lot_id', 'base.Current'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2087">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1854">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1855">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1874">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1891">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1915">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1915">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1916">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1933">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1946">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1966">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1972">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1978">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1984">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1990">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1996">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2002">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2008">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2014">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2020">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2026">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2032">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2038">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1862">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2082">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1844">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1869">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1879">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1901">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1904">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1922">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1935">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2091">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1839">In externally visible method 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)', validate parameter 'selected_rolls' before using it.</Issue>
            </Message>
            <Message Id="selected_rolls" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1829">'selected_rolls', a parameter declared in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_selected_lot_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1829">'selected_selected_lot_id', a parameter declared in 'RollResults.Calc_Lot_values(object, List&lt;object&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#calc_stddev" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.calc_stddev' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#calced_roll_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.calced_roll_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'RollResults.calced_roll_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="calced" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'calced' in member name 'RollResults.calced_roll_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clr" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.clr' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#components" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.components' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnumsAndComboBox_Load_For_All(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="428">'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' has a cyclomatic complexity of 31. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="432">In method 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="437">In method 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="442">In method 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="447">In method 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="453">In method 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="458">In method 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="464">In method 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="470">In method 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="476">In method 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="482">In method 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="488">In method 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)', object 'column' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="500">Method 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Roll eredmények".</Issue>
            </Message>
            <Message Id="eredmények" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="500">Correct the spelling of the unrecognized token 'eredmények' in the literal '"Roll eredmények"'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="535">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="535">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="727">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="545">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="553">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="553">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="553">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="565">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="565">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="565">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="507">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="513">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="716">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="736">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.EnumsAndComboBox_Load_For_All(object, EventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#fk_homo_res_id" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.fk_homo_res_id' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetIncludedValuesFromDatabase()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="783">Object 'conn' can be disposed more than once in method 'RollResults.GetIncludedValuesFromDatabase()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 783</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="770">Object 'dr' can be disposed more than once in method 'RollResults.GetIncludedValuesFromDatabase()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 770</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="779">'RollResults.GetIncludedValuesFromDatabase()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="758">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.GetIncludedValuesFromDatabase()' could contain the following variables 'this.lotid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="766">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.GetIncludedValuesFromDatabase()' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="766">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.GetIncludedValuesFromDatabase()' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="758">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.GetIncludedValuesFromDatabase()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="779">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.GetIncludedValuesFromDatabase()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRollResultToSelected()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="235">'c', a variable, is cast to type 'DataGridView' multiple times in method 'RollResults.GetRollResultToSelected()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="237">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.GetRollResultToSelected()' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="247">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.GetRollResultToSelected()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="241">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.GetRollResultToSelected()' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="245">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.GetRollResultToSelected()' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSelectedselected_rollID()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1801">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.GetSelectedselected_rollID()' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#glus" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.glus' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'RollResults.glus' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="glus" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glus' in member name 'RollResults.glus' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#H62_error_count_valid" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.H62_error_count_valid' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Homogenity_Is_Valid" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Homogenity' in member name 'RollResults.Homogenity_Is_Valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'RollResults.Homogenity_Is_Valid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#i" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.i' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'RollResults.i'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IncludedValues" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.IncludedValues' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.Designer.cs" Line="34">Method 'RollResults.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "RollResults".</Issue>
            </Message>
            <Message Id="RollResults" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.Designer.cs" Line="34">Correct the spelling of the unrecognized token 'RollResults' in the literal '"RollResults"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_avg_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.lot_avg_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'RollResults.lot_avg_ok' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_avg_valid_original" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.lot_avg_valid_original' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_glus" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.lot_glus' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'RollResults.lot_glus' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="glus" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glus' in member name 'RollResults.lot_glus' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_is_valid" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.lot_is_valid' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_stddev_original" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.lot_stddev_original' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_strip_count_is_valid" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.lot_strip_count_is_valid' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_strip_count_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.lot_strip_count_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lotisok" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.lotisok' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lotResults" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.lotResults' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#max_pk_homores" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.max_pk_homores' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="homores" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homores' in member name 'RollResults.max_pk_homores' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="pk" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'pk' in member name 'RollResults.max_pk_homores' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Not_H62_error_count_valid" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.Not_H62_error_count_valid' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Not_h62_is_valid" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'h' in member name 'RollResults.Not_h62_is_valid' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="is" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'is' in member name 'RollResults.Not_h62_is_valid' by changing it to 'Is'.</Issue>
            </Message>
            <Message Id="valid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'valid' in member name 'RollResults.Not_h62_is_valid' by changing it to 'Valid'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'RollResults.Not_h62_is_valid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Out_of_range_valid" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="of" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'of' in member name 'RollResults.Out_of_range_valid' by changing it to 'Of'.</Issue>
            </Message>
            <Message Id="range" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'range' in member name 'RollResults.Out_of_range_valid' by changing it to 'Range'.</Issue>
            </Message>
            <Message Id="valid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'valid' in member name 'RollResults.Out_of_range_valid' by changing it to 'Valid'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'RollResults.Out_of_range_valid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OutAndStripCountAndError_ok" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ok" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ok' in member name 'RollResults.OutAndStripCountAndError_ok' by changing it to 'Ok'. 'Ok' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'RollResults.OutAndStripCountAndError_ok'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#real_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.real_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'RollResults.real_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_avg_ok" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.roll_avg_ok' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'RollResults.roll_avg_ok' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_avgs" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.roll_avgs' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_cvs" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.roll_cvs' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_date" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.roll_date' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_outstripcount" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.roll_outstripcount' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#roll_stripcount" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.roll_stripcount' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#rolls_ok" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.rolls_ok' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveLOTResultDependsSelected(Npgsql.NpgsqlConnection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="134">'c', a variable, is cast to type 'DataGridView' multiple times in method 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="LOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="124">Correct the casing of 'LOT' in member name 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' by changing it to 'Lot'.</Issue>
            </Message>
            <Message Id="in" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="124">In member 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)', correct the casing of 'in' in parameter name 'conn_in' by changing it to 'In'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="124">In member 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)', remove the underscores from parameter name 'conn_in'.</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="194">Method 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' passes 'exception while calculating modified lot's stddev' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="172">Method 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' passes 'fk_lot_result_id is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="183">Method 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' passes 'fk_lot_result_id is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message TypeName="Provide correct arguments to formatting methods" Category="Microsoft.Usage" CheckId="CA2241" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="186">Method 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' calls 'string.Format(string, object, object)' and does not provide a format item for argument "2". The provided format string is: '"SELECT STDDEV(blank_test_result.glu) FROM homogenity_test LEFT JOIN blank_test_r..."'</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="199">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' could contain the following variables 'this.act_lot_avg', 'this.act_lot_cv', 'this.fk_lot_result_id', 'this.act_lot_avg_ok', 'this.act_lot_cv_ok', 'this.act_lot_not_h62_count', 'this.act_lot_h62_count', 'this.act_lot_id', 'this.act_lot_stripcount', 'this.act_lot_is_valid', 'null', 'this.act_lot_outofrange_stripcount', 'this.act_lot_stddev'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="165">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' could contain the following variables 'this.lotid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="175">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' could contain the following variables 'this.lotid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="186">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' could contain the following variables 'this.lotid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="137">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="140">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="197">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="151">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="157">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="158">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="159">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="167">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="136">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="141">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="146">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="152">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="160">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="165">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="175">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="207">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="186">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="199">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'RollResults.SaveLOTResultDependsSelected(NpgsqlConnection)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sd_lot" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.sd_lot' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sd' in member name 'RollResults.sd_lot' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_codes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_codes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'RollResults.selected_codes' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_computers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_computers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'RollResults.selected_computers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_device_replace" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_device_replace' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'RollResults.selected_device_replace' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_early_dribble" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_early_dribble' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'RollResults.selected_early_dribble' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_end_dates" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_end_dates' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'RollResults.selected_end_dates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_error" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_error' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'RollResults.selected_error' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_error_text" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_error_text' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'RollResults.selected_error_text' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_fk_errors_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_fk_errors_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'RollResults.selected_fk_errors_id' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="fk" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'fk' in member name 'RollResults.selected_fk_errors_id' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_glus" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_glus' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'RollResults.selected_glus' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="glus" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glus' in member name 'RollResults.selected_glus' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_h62" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_h62' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'RollResults.selected_h62' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_lot_id" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.selected_lot_id' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_nano_ampers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_nano_ampers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'RollResults.selected_nano_ampers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="ampers" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'ampers' in member name 'RollResults.selected_nano_ampers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="nano" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'nano' in member name 'RollResults.selected_nano_ampers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_not_h62" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_not_h62' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'RollResults.selected_not_h62' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_result" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.selected_result' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_result_ids" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_result_ids' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'RollResults.selected_result_ids' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_roll_out_of_range_strip_count" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RollResults.selected_roll_out_of_range_strip_count' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_rolls" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_rolls' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'RollResults.selected_rolls' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_rolls_from_table" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_rolls_from_table' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_selected_roll" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_selected_roll' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;object&gt;' in 'RollResults.selected_selected_roll' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_serial_numbers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_serial_numbers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'RollResults.selected_serial_numbers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_start_dates" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_start_dates' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'RollResults.selected_start_dates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_temp" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_temp' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'RollResults.selected_temp' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_users" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.selected_users' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'RollResults.selected_users' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetButtonCalc()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="802">Method 'RollResults.SetButtonCalc()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Mentés".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="793">Method 'RollResults.SetButtonCalc()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Újraszámolás".</Issue>
            </Message>
            <Message Id="Calc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="789">Correct the spelling of 'Calc' in member name 'RollResults.SetButtonCalc()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Mentés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="802">Correct the spelling of the unrecognized token 'Mentés' in the literal '"Mentés"'.</Issue>
            </Message>
            <Message Id="Újraszámolás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="793">Correct the spelling of the unrecognized token 'Újraszámolás' in the literal '"Újraszámolás"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetButtonExit()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="819">Method 'RollResults.SetButtonExit()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Program bezárása".</Issue>
            </Message>
            <Message Id="bezárása" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="819">Correct the spelling of the unrecognized token 'bezárása' in the literal '"Program bezárása"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetCalculatedValuesForLot(System.String,System.Double,System.Boolean,System.Double,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="951">'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' has a cyclomatic complexity of 142. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="951">'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' has a maintainability index of 0. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1669">In method 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)', call System.IDisposable.Dispose on object 'new DataGridViewTextBoxCell()' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="980">'dgv', a variable, is cast to type 'DataGridView' multiple times in method 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewTextBoxCell" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1669">'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' creates a new instance of 'DataGridViewTextBoxCell' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="h62_error_count" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="951">Parameter 'h62_error_count' of 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="lot_avg" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="951">Parameter 'lot_avg' of 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="lot_avg_ok" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="951">Parameter 'lot_avg_ok' of 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="lot_cv" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="951">Parameter 'lot_cv' of 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="lot_cv_ok" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="951">Parameter 'lot_cv_ok' of 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="lot_out_of_range_strip_count" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="951">Parameter 'lot_out_of_range_strip_count' of 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="lot_strip_count" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="951">Parameter 'lot_strip_count' of 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="lot_strip_count_ok" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="951">Parameter 'lot_strip_count_ok' of 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="not_h62_error_count" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="951">Parameter 'not_h62_error_count' of 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="989">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="989">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1006">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1705">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1705">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1021">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1021">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1048">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1048">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1053">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1053">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1070">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1070">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1076">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1076">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1093">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1093">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1099">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1099">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1117">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1117">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1122">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1122">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1138">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1138">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1143">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1143">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1160">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1160">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1165">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1165">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1182">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1182">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1187">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1187">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1204">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1204">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1209">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1209">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1226">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1226">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1231">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1231">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1248">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1248">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1253">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1253">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1269">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1269">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1274">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1274">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1291">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1291">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1296">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1296">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1313">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1313">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1318">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1318">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1335">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1335">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1340">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1340">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1357">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1357">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1362">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1362">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1379">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1379">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1384">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1384">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1400">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1400">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1405">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1405">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1422">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1422">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1427">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1427">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1445">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1445">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1450">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1450">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1467">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1467">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1472">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1472">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1489">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1489">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1494">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1494">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1511">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1511">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1516">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1516">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1532">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1532">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1537">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1537">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1554">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1554">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1559">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1559">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1576">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1576">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1581">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1581">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1598">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1598">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1603">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1603">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1620">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1620">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1625">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1625">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1642">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1642">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1647">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1647">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="982">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="998">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1036">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1670">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="lot_avg_ok" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="951">'lot_avg_ok', a parameter declared in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="lot_strip_count_ok" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="951">'lot_strip_count_ok', a parameter declared in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="selected_lot_id" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="951">'selected_lot_id', a parameter declared in 'RollResults.SetCalculatedValuesForLot(string, double, bool, double, bool, int, bool, int, int, int, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetLOTResultToSelected()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="109">'c', a variable, is cast to type 'DataGridView' multiple times in method 'RollResults.SetLOTResultToSelected()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="LOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="99">Correct the casing of 'LOT' in member name 'RollResults.SetLOTResultToSelected()' by changing it to 'Lot'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="111">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.SetLOTResultToSelected()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetLotValuesToNull()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="1766">'dgv', a variable, is cast to type 'DataGridView' multiple times in method 'RollResults.SetLotValuesToNull()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowLotResult(System.Object,System.Object,System.Int32,System.Object,System.Object,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">'RollResults.ShowLotResult(object, object, int, object, object, object)' has a cyclomatic complexity of 138. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">'RollResults.ShowLotResult(object, object, int, object, object, object)' has a maintainability index of 1. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2783">Object 'lot_connection' can be disposed more than once in method 'RollResults.ShowLotResult(object, object, int, object, object, object)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2783</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2777">Modify 'RollResults.ShowLotResult(object, object, int, object, object, object)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Collections.Generic.List`1&lt;System.Double&gt;" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">'RollResults.ShowLotResult(object, object, int, object, object, object)' creates a new instance of 'List&lt;double&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.Collections.Generic.List`1&lt;System.String&gt;" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2147">'RollResults.ShowLotResult(object, object, int, object, object, object)' creates a new instance of 'List&lt;string&gt;' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="StringCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2281">'RollResults.ShowLotResult(object, object, int, object, object, object)' calls 'string.Format(string, object)' but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Issue>
             <Issue Name="StringCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2282">'RollResults.ShowLotResult(object, object, int, object, object, object)' calls 'string.Format(string, object)' but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.Text.StringBuilder" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2148">'RollResults.ShowLotResult(object, object, int, object, object, object)' creates a new instance of 'StringBuilder' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">In member 'RollResults.ShowLotResult(object, object, int, object, object, object)', correct the casing of 'avg' in parameter name 'lot_avg' by changing it to 'Avg'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">In member 'RollResults.ShowLotResult(object, object, int, object, object, object)', correct the casing of 'avg' in parameter name 'selected_roll_avg' by changing it to 'Avg'.</Issue>
            </Message>
            <Message Id="cv" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">In member 'RollResults.ShowLotResult(object, object, int, object, object, object)', correct the casing of 'cv' in parameter name 'selected_roll_cv' by changing it to 'CV'.</Issue>
            </Message>
            <Message Id="roll" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">In member 'RollResults.ShowLotResult(object, object, int, object, object, object)', correct the casing of 'roll' in parameter name 'selected_roll_avg' by changing it to 'Roll'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">In member 'RollResults.ShowLotResult(object, object, int, object, object, object)', correct the casing of 'roll' in parameter name 'selected_roll_cv' by changing it to 'Roll'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">In member 'RollResults.ShowLotResult(object, object, int, object, object, object)', correct the casing of 'roll' in parameter name 'selected_roll_stddev' by changing it to 'Roll'.</Issue>
            </Message>
            <Message Id="stddev" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">In member 'RollResults.ShowLotResult(object, object, int, object, object, object)', correct the casing of 'stddev' in parameter name 'lot_stddev' by changing it to 'Stddev'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">In member 'RollResults.ShowLotResult(object, object, int, object, object, object)', correct the casing of 'stddev' in parameter name 'selected_roll_stddev' by changing it to 'Stddev'.</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">In method 'RollResults.ShowLotResult(object, object, int, object, object, object)', correct the spelling of 'avg' in parameter name 'lot_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">In method 'RollResults.ShowLotResult(object, object, int, object, object, object)', correct the spelling of 'avg' in parameter name 'selected_roll_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">In method 'RollResults.ShowLotResult(object, object, int, object, object, object)', correct the spelling of 'homogenity' in parameter name 'homogenityPKey' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="stddev" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">In method 'RollResults.ShowLotResult(object, object, int, object, object, object)', correct the spelling of 'stddev' in parameter name 'lot_stddev' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">In method 'RollResults.ShowLotResult(object, object, int, object, object, object)', correct the spelling of 'stddev' in parameter name 'selected_roll_stddev' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">In member 'RollResults.ShowLotResult(object, object, int, object, object, object)', remove the underscores from parameter name 'lot_avg'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">In member 'RollResults.ShowLotResult(object, object, int, object, object, object)', remove the underscores from parameter name 'lot_stddev'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">In member 'RollResults.ShowLotResult(object, object, int, object, object, object)', remove the underscores from parameter name 'selected_roll_avg'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">In member 'RollResults.ShowLotResult(object, object, int, object, object, object)', remove the underscores from parameter name 'selected_roll_cv'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">In member 'RollResults.ShowLotResult(object, object, int, object, object, object)', remove the underscores from parameter name 'selected_roll_stddev'.</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2181">Method 'RollResults.ShowLotResult(object, object, int, object, object, object)' passes 'Avg is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2258">Method 'RollResults.ShowLotResult(object, object, int, object, object, object)' passes 'error_count is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2271">Method 'RollResults.ShowLotResult(object, object, int, object, object, object)' passes 'error_count is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2309">Method 'RollResults.ShowLotResult(object, object, int, object, object, object)' passes 'out_count is null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2169">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.ShowLotResult(object, object, int, object, object, object)' could contain the following variables 'Convert.ToString(this.selected_selected_lot_id)'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2189">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.ShowLotResult(object, object, int, object, object, object)' could contain the following variables 'this.selected_selected_lot_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2235">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.ShowLotResult(object, object, int, object, object, object)' could contain the following variables 'this.selected_selected_lot_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2239">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.ShowLotResult(object, object, int, object, object, object)' could contain the following variables 'this.selected_selected_lot_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2249">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.ShowLotResult(object, object, int, object, object, object)' could contain the following variables 'this.selected_selected_lot_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2262">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.ShowLotResult(object, object, int, object, object, object)' could contain the following variables 'this.selected_selected_lot_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2284">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.ShowLotResult(object, object, int, object, object, object)' could contain the following variables 'this.selected_selected_lot_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2288">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.ShowLotResult(object, object, int, object, object, object)' could contain the following variables 'this.selected_selected_lot_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2297">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.ShowLotResult(object, object, int, object, object, object)' could contain the following variables 'this.selected_selected_lot_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="homogenityPKey" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">Parameter 'homogenityPKey' of 'RollResults.ShowLotResult(object, object, int, object, object, object)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="lot_avg" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">Parameter 'lot_avg' of 'RollResults.ShowLotResult(object, object, int, object, object, object)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="lot_stddev" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">Parameter 'lot_stddev' of 'RollResults.ShowLotResult(object, object, int, object, object, object)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_roll_avg" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">Parameter 'selected_roll_avg' of 'RollResults.ShowLotResult(object, object, int, object, object, object)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_roll_cv" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">Parameter 'selected_roll_cv' of 'RollResults.ShowLotResult(object, object, int, object, object, object)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="selected_roll_stddev" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">Parameter 'selected_roll_stddev' of 'RollResults.ShowLotResult(object, object, int, object, object, object)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2208">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2208">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2213">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2213">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2176">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2243">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2243">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2292">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2292">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2311">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2333">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2333">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2351">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2351">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2370">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2370">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2386">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2386">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2402">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2402">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2418">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2418">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2434">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2434">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2450">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2450">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2466">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2466">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2482">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2482">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2498">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2498">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2514">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2514">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2530">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2530">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2546">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2546">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2562">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2562">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2578">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2578">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2594">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2594">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2609">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2609">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2624">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2624">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2639">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2639">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2654">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2654">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2669">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2669">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2684">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2684">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2699">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2699">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2714">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2714">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2729">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2729">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2745">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2745">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2761">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2761">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2169">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2169">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2180">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2189">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2200">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2232">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2233">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2249">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2262">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2281">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2282">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2297">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.ShowLotResult(object, object, int, object, object, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="lot_valid_strip_count" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">'lot_valid_strip_count', a variable declared in 'RollResults.ShowLotResult(object, object, int, object, object, object)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="lot_valid_strip_count2" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="2146">'lot_valid_strip_count2', a variable declared in 'RollResults.ShowLotResult(object, object, int, object, object, object)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#skipped_selected_roll" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.skipped_selected_roll' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;object&gt;' in 'RollResults.skipped_selected_roll' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stddev" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RollResults.stddev' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="stddev" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'stddev' in member name 'RollResults.stddev' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateUnSelectedRolls()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="UnSelected" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="842">The compound word 'UnSelected' in member name 'RollResults.UpdateUnSelectedRolls()' exists as a discrete term. If your usage is intended to be single word, case it as 'Unselected' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="886">Object 'conn' can be disposed more than once in method 'RollResults.UpdateUnSelectedRolls()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 886</Issue>
            </Message>
            <Message Id="Un" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="842">Correct the casing of 'Un' in member name 'RollResults.UpdateUnSelectedRolls()' by changing it to 'UN'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="858">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'RollResults.UpdateUnSelectedRolls()' could contain the following variables 'selected', 'this.lotid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="863">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'RollResults.UpdateUnSelectedRolls()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="RollResults.cs" Line="858">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'RollResults.UpdateUnSelectedRolls()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ShowAllData" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Object,System.Object,System.String,System.String,System.String,System.Double,System.Double,System.DateTime,System.DateTime)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="amper" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="88">In member 'ShowAllData.ShowAllData(object, object, string, string, string, double, double, DateTime, DateTime)', correct the casing of 'amper' in parameter name 'nano_amper' by changing it to 'Amper'.</Issue>
            </Message>
            <Message Id="amper" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="88">In method 'ShowAllData.ShowAllData(object, object, string, string, string, double, double, DateTime, DateTime)', correct the spelling of 'amper' in parameter name 'nano_amper' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="glu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="88">In method 'ShowAllData.ShowAllData(object, object, string, string, string, double, double, DateTime, DateTime)', correct the spelling of 'glu' in parameter name 'glu' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="nano" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="88">In method 'ShowAllData.ShowAllData(object, object, string, string, string, double, double, DateTime, DateTime)', correct the spelling of 'nano' in parameter name 'nano_amper' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="88">In method 'ShowAllData.ShowAllData(object, object, string, string, string, double, double, DateTime, DateTime)', correct the spelling of 'sn' in parameter name 'sn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="88">In member 'ShowAllData.ShowAllData(object, object, string, string, string, double, double, DateTime, DateTime)', remove the underscores from parameter name 'nano_amper'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Double,System.Boolean,System.Boolean,System.DateTime)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="44">In member 'ShowAllData.ShowAllData(string, string, string, string, string, string, string, double, bool, bool, DateTime)', correct the casing of 'date' in parameter name 'meas_date' by changing it to 'Date'.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="44">In member 'ShowAllData.ShowAllData(string, string, string, string, string, string, string, double, bool, bool, DateTime)', correct the casing of 'h' in parameter name 'not_h62' by changing it to 'H'.</Issue>
            </Message>
            <Message Id="text" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="44">In member 'ShowAllData.ShowAllData(string, string, string, string, string, string, string, double, bool, bool, DateTime)', correct the casing of 'text' in parameter name 'error_text' by changing it to 'Text'.</Issue>
            </Message>
            <Message Id="glu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="44">In method 'ShowAllData.ShowAllData(string, string, string, string, string, string, string, double, bool, bool, DateTime)', correct the spelling of 'glu' in parameter name 'glu' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="44">In method 'ShowAllData.ShowAllData(string, string, string, string, string, string, string, double, bool, bool, DateTime)', correct the spelling of 'h' in parameter name 'h62' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="meas" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="44">In method 'ShowAllData.ShowAllData(string, string, string, string, string, string, string, double, bool, bool, DateTime)', correct the spelling of 'meas' in parameter name 'meas_date' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="44">In method 'ShowAllData.ShowAllData(string, string, string, string, string, string, string, double, bool, bool, DateTime)', correct the spelling of 'sn' in parameter name 'sn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="44">In member 'ShowAllData.ShowAllData(string, string, string, string, string, string, string, double, bool, bool, DateTime)', remove the underscores from parameter name 'error_text'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="44">In member 'ShowAllData.ShowAllData(string, string, string, string, string, string, string, double, bool, bool, DateTime)', remove the underscores from parameter name 'meas_date'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="44">In member 'ShowAllData.ShowAllData(string, string, string, string, string, string, string, double, bool, bool, DateTime)', remove the underscores from parameter name 'not_h62'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#act_comp" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ShowAllData.act_comp' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#act_end" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ShowAllData.act_end' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#act_error" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ShowAllData.act_error' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#act_error_text" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ShowAllData.act_error_text' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#act_glu" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="glu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glu' in member name 'ShowAllData.act_glu' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ShowAllData.act_glu' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#act_h62" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ShowAllData.act_h62' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#act_lot" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ShowAllData.act_lot' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#act_nano_amper" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="amper" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'amper' in member name 'ShowAllData.act_nano_amper' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="nano" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'nano' in member name 'ShowAllData.act_nano_amper' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ShowAllData.act_nano_amper' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#act_not_h62" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ShowAllData.act_not_h62' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#act_roll" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ShowAllData.act_roll' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#act_sn" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sn' in member name 'ShowAllData.act_sn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ShowAllData.act_sn' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#act_start" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ShowAllData.act_start' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#act_user" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ShowAllData.act_user' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Computer" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="154">The 'this' parameter (or 'Me' in Visual Basic) of 'ShowAllData.Computer' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EndTime" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="275">The 'this' parameter (or 'Me' in Visual Basic) of 'ShowAllData.EndTime' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Error" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="168">The 'this' parameter (or 'Me' in Visual Basic) of 'ShowAllData.Error' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Error()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
               <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="168">Replace the call to 'string.operator ==(string, string)' in 'ShowAllData.Error.get()' with a call to 'String.IsNullOrEmpty'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ErrorText" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="186">The 'this' parameter (or 'Me' in Visual Basic) of 'ShowAllData.ErrorText' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_ErrorText()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
               <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="186">Replace the call to 'string.Equals(string)' in 'ShowAllData.ErrorText.get()' with a call to 'String.IsNullOrEmpty'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Glu" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Glu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="242">Correct the spelling of 'Glu' in member name 'ShowAllData.Glu' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="242">The 'this' parameter (or 'Me' in Visual Basic) of 'ShowAllData.Glu' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#H62" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_H62(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToBoolean(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="235">Because the behavior of 'Convert.ToBoolean(string)' could vary based on the current user's locale settings, replace this call in 'ShowAllData.H62.set(string)' with a call to 'Convert.ToBoolean(string, IFormatProvider)'. If the result of 'Convert.ToBoolean(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#h62_result" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowAllData.h62_result' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LOT" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="110">Correct the casing of 'LOT' in member name 'ShowAllData.LOT' by changing it to 'Lot'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="110">The 'this' parameter (or 'Me' in Visual Basic) of 'ShowAllData.LOT' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NanoAmper" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Amper" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="253">Correct the spelling of 'Amper' in member name 'ShowAllData.NanoAmper' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Nano" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="253">Correct the spelling of 'Nano' in member name 'ShowAllData.NanoAmper' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="253">The 'this' parameter (or 'Me' in Visual Basic) of 'ShowAllData.NanoAmper' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Not_H62" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="204">Remove the underscores from member name 'ShowAllData.Not_H62'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_Not_H62(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Convert.ToBoolean(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="214">Because the behavior of 'Convert.ToBoolean(string)' could vary based on the current user's locale settings, replace this call in 'ShowAllData.Not_H62.set(string)' with a call to 'Convert.ToBoolean(string, IFormatProvider)'. If the result of 'Convert.ToBoolean(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#not_h62_result" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ShowAllData.not_h62_result' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ROLL" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ROLL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="121">Correct the casing of 'ROLL' in member name 'ShowAllData.ROLL' by changing it to 'Roll'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="121">The 'this' parameter (or 'Me' in Visual Basic) of 'ShowAllData.ROLL' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SN" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="132">The 'this' parameter (or 'Me' in Visual Basic) of 'ShowAllData.SN' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartTime" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="264">The 'this' parameter (or 'Me' in Visual Basic) of 'ShowAllData.StartTime' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#User" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="ShowAllData.cs" Line="143">The 'this' parameter (or 'Me' in Visual Basic) of 'ShowAllData.User' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TubeCountInRollForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="31">Method 'TubeCountInRollForm.TubeCountInRollForm()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "MEO mérési körülmények adatai".</Issue>
            </Message>
            <Message Id="adatai" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="31">Correct the spelling of the unrecognized token 'adatai' in the literal '"MEO mérési körülmények adatai"'.</Issue>
            </Message>
            <Message Id="körülmények" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="31">Correct the spelling of the unrecognized token 'körülmények' in the literal '"MEO mérési körülmények adatai"'.</Issue>
            </Message>
            <Message Id="mérési" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="31">Correct the spelling of the unrecognized token 'mérési' in the literal '"MEO mérési körülmények adatai"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_IsFormatOk" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TubeCountInRollForm._IsFormatOk' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Method 'TubeCountInRollForm.button1_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Megfelelő Lot azonosító?!".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Method 'TubeCountInRollForm.button1_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "Az általános LOT azonosító 6db számjegy majd egy \'A\' betű, az Ön által megadot...".</Issue>
            </Message>
            <Message Id="Az" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'Az' in the literal '"Az általános LOT azonosító 6db számjegy majd egy \'A\' betű, az Ön által megadot..."'.</Issue>
            </Message>
            <Message Id="Biztosan" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'Biztosan' in the literal '" nem ilyen formátumú. \r\n Biztosan folytatja a mérést?!"'.</Issue>
            </Message>
            <Message Id="Megfelelő" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'Megfelelő' in the literal '"Megfelelő Lot azonosító?!"'.</Issue>
            </Message>
            <Message Id="az" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'az' in the literal '"Az általános LOT azonosító 6db számjegy majd egy \'A\' betű, az Ön által megadot..."'.</Issue>
            </Message>
            <Message Id="azonosító" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'azonosító' in the literal '"Az általános LOT azonosító 6db számjegy majd egy \'A\' betű, az Ön által megadot..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'azonosító' in the literal '"Megfelelő Lot azonosító?!"'.</Issue>
            </Message>
            <Message Id="betű" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'betű' in the literal '"Az általános LOT azonosító 6db számjegy majd egy \'A\' betű, az Ön által megadot..."'.</Issue>
            </Message>
            <Message Id="egy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'egy' in the literal '"Az általános LOT azonosító 6db számjegy majd egy \'A\' betű, az Ön által megadot..."'.</Issue>
            </Message>
            <Message Id="folytatja" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'folytatja' in the literal '" nem ilyen formátumú. \r\n Biztosan folytatja a mérést?!"'.</Issue>
            </Message>
            <Message Id="formátumú" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'formátumú' in the literal '" nem ilyen formátumú. \r\n Biztosan folytatja a mérést?!"'.</Issue>
            </Message>
            <Message Id="ilyen" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'ilyen' in the literal '" nem ilyen formátumú. \r\n Biztosan folytatja a mérést?!"'.</Issue>
            </Message>
            <Message Id="majd" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'majd' in the literal '"Az általános LOT azonosító 6db számjegy majd egy \'A\' betű, az Ön által megadot..."'.</Issue>
            </Message>
            <Message Id="megadott" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'megadott' in the literal '"Az általános LOT azonosító 6db számjegy majd egy \'A\' betű, az Ön által megadot..."'.</Issue>
            </Message>
            <Message Id="mérést" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'mérést' in the literal '" nem ilyen formátumú. \r\n Biztosan folytatja a mérést?!"'.</Issue>
            </Message>
            <Message Id="nem" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'nem' in the literal '" nem ilyen formátumú. \r\n Biztosan folytatja a mérést?!"'.</Issue>
            </Message>
            <Message Id="számjegy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'számjegy' in the literal '"Az általános LOT azonosító 6db számjegy majd egy \'A\' betű, az Ön által megadot..."'.</Issue>
            </Message>
            <Message Id="Ön" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'Ön' in the literal '"Az általános LOT azonosító 6db számjegy majd egy \'A\' betű, az Ön által megadot..."'.</Issue>
            </Message>
            <Message Id="által" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'által' in the literal '"Az általános LOT azonosító 6db számjegy majd egy \'A\' betű, az Ön által megadot..."'.</Issue>
            </Message>
            <Message Id="általános" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Correct the spelling of the unrecognized token 'általános' in the literal '"Az általános LOT azonosító 6db számjegy majd egy \'A\' betű, az Ön által megadot..."'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="101">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'TubeCountInRollForm.button1_Click(object, EventArgs)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="104">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'TubeCountInRollForm.button1_Click(object, EventArgs)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'TubeCountInRollForm.button1_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="85">Change 'TubeCountInRollForm.button1_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="99">Replace the call to 'string.Equals(string)' in 'TubeCountInRollForm.button1_Click(object, EventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="res" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="77">'res', a variable declared in 'TubeCountInRollForm.button1_Click(object, EventArgs)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckValues()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="188">Method 'TubeCountInRollForm.CheckValues()' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Minden értéket meg kell adni!".</Issue>
            </Message>
            <Message Id="System.Double.TryParse(System.String,System.Double@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="140">'TubeCountInRollForm.CheckValues()' calls 'double.TryParse(string, out double)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="141">'TubeCountInRollForm.CheckValues()' calls 'double.TryParse(string, out double)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
            <Message Id="adni" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="188">Correct the spelling of the unrecognized token 'adni' in the literal '"Minden értéket meg kell adni!"'.</Issue>
            </Message>
            <Message Id="kell" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="188">Correct the spelling of the unrecognized token 'kell' in the literal '"Minden értéket meg kell adni!"'.</Issue>
            </Message>
            <Message Id="értéket" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="188">Correct the spelling of the unrecognized token 'értéket' in the literal '"Minden értéket meg kell adni!"'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="172">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'TubeCountInRollForm.CheckValues()' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="173">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'TubeCountInRollForm.CheckValues()' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="158">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'TubeCountInRollForm.CheckValues()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="162">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'TubeCountInRollForm.CheckValues()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="181">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'TubeCountInRollForm.CheckValues()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="181">Change 'TubeCountInRollForm.CheckValues()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="188">Change 'TubeCountInRollForm.CheckValues()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="126">Replace the call to 'string.operator ==(string, string)' in 'TubeCountInRollForm.CheckValues()' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="126">Replace the call to 'string.operator ==(string, string)' in 'TubeCountInRollForm.CheckValues()' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="170">Replace the call to 'string.operator ==(string, string)' in 'TubeCountInRollForm.CheckValues()' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="humidity" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="122">'humidity', a variable declared in 'TubeCountInRollForm.CheckValues()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="temperature" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="122">'temperature', a variable declared in 'TubeCountInRollForm.CheckValues()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#errorText" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TubeCountInRollForm.errorText' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillTempAndHumidityAsIPThermo()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="63">Modify 'TubeCountInRollForm.FillTempAndHumidityAsIPThermo()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Double)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="70">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'TubeCountInRollForm.FillTempAndHumidityAsIPThermo()' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="71">Because the behavior of 'Convert.ToString(double)' could vary based on the current user's locale settings, replace this call in 'TubeCountInRollForm.FillTempAndHumidityAsIPThermo()' with a call to 'Convert.ToString(double, IFormatProvider)'. If the result of 'Convert.ToString(double, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="50">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'TubeCountInRollForm.FillTempAndHumidityAsIPThermo()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="60">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'TubeCountInRollForm.FillTempAndHumidityAsIPThermo()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#humidity" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TubeCountInRollForm.humidity' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="58">Method 'TubeCountInRollForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A Rollban található tubusok száma:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="88">Method 'TubeCountInRollForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A minimális tubus mennyiség: 19 tubus".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="118">Method 'TubeCountInRollForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Hőmérséklet:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="99">Method 'TubeCountInRollForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "LOT azonosító:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="243">Method 'TubeCountInRollForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "LOT törlése".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="273">Method 'TubeCountInRollForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "LotCountForm".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="172">Method 'TubeCountInRollForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Program bezárása".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="128">Method 'TubeCountInRollForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Páratartalom:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="162">Method 'TubeCountInRollForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "RH%".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="76">Method 'TubeCountInRollForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Tovább".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="152">Method 'TubeCountInRollForm.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "°C".</Issue>
            </Message>
            <Message Id="Hőmérséklet" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="118">Correct the spelling of the unrecognized token 'Hőmérséklet' in the literal '"Hőmérséklet:"'.</Issue>
            </Message>
            <Message Id="LotCountForm" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="273">Correct the spelling of the unrecognized token 'LotCountForm' in the literal '"LotCountForm"'.</Issue>
            </Message>
            <Message Id="Páratartalom" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="128">Correct the spelling of the unrecognized token 'Páratartalom' in the literal '"Páratartalom:"'.</Issue>
            </Message>
            <Message Id="Rollban" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="58">Correct the spelling of the unrecognized token 'Rollban' in the literal '"A Rollban található tubusok száma:"'.</Issue>
            </Message>
            <Message Id="Tovább" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="76">Correct the spelling of the unrecognized token 'Tovább' in the literal '"Tovább"'.</Issue>
            </Message>
            <Message Id="azonosító" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="99">Correct the spelling of the unrecognized token 'azonosító' in the literal '"LOT azonosító:"'.</Issue>
            </Message>
            <Message Id="bezárása" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="172">Correct the spelling of the unrecognized token 'bezárása' in the literal '"Program bezárása"'.</Issue>
            </Message>
            <Message Id="mennyiség" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="88">Correct the spelling of the unrecognized token 'mennyiség' in the literal '"A minimális tubus mennyiség: 19 tubus"'.</Issue>
            </Message>
            <Message Id="minimális" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="88">Correct the spelling of the unrecognized token 'minimális' in the literal '"A minimális tubus mennyiség: 19 tubus"'.</Issue>
            </Message>
            <Message Id="száma" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="58">Correct the spelling of the unrecognized token 'száma' in the literal '"A Rollban található tubusok száma:"'.</Issue>
            </Message>
            <Message Id="található" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="58">Correct the spelling of the unrecognized token 'található' in the literal '"A Rollban található tubusok száma:"'.</Issue>
            </Message>
            <Message Id="tubus" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="88">Correct the spelling of the unrecognized token 'tubus' in the literal '"A minimális tubus mennyiség: 19 tubus"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="88">Correct the spelling of the unrecognized token 'tubus' in the literal '"A minimális tubus mennyiség: 19 tubus"'.</Issue>
            </Message>
            <Message Id="tubusok" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="58">Correct the spelling of the unrecognized token 'tubusok' in the literal '"A Rollban található tubusok száma:"'.</Issue>
            </Message>
            <Message Id="törlése" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.Designer.cs" Line="243">Correct the spelling of the unrecognized token 'törlése' in the literal '"LOT törlése"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LOT_ID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'TubeCountInRollForm.LOT_ID' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#temperature" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'TubeCountInRollForm.temperature' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textBox1_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="236">'item', a variable, is cast to type 'TextBox' multiple times in method 'TubeCountInRollForm.textBox1_KeyDown(object, KeyEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="238">'item', a variable, is cast to type 'TextBox' multiple times in method 'TubeCountInRollForm.textBox1_KeyDown(object, KeyEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="239">'item', a variable, is cast to type 'TextBox' multiple times in method 'TubeCountInRollForm.textBox1_KeyDown(object, KeyEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textBox1_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="277">Method 'TubeCountInRollForm.textBox1_KeyPress(object, KeyPressEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A legkevesebb tubusszám minimum 13 tubus!".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="269">Method 'TubeCountInRollForm.textBox1_KeyPress(object, KeyPressEventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Csak számokat írhat be!".</Issue>
            </Message>
            <Message Id="Csak" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="269">Correct the spelling of the unrecognized token 'Csak' in the literal '"Csak számokat írhat be!"'.</Issue>
            </Message>
            <Message Id="legkevesebb" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="277">Correct the spelling of the unrecognized token 'legkevesebb' in the literal '"A legkevesebb tubusszám minimum 13 tubus!"'.</Issue>
            </Message>
            <Message Id="számokat" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="269">Correct the spelling of the unrecognized token 'számokat' in the literal '"Csak számokat írhat be!"'.</Issue>
            </Message>
            <Message Id="tubus" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="277">Correct the spelling of the unrecognized token 'tubus' in the literal '"A legkevesebb tubusszám minimum 13 tubus!"'.</Issue>
            </Message>
            <Message Id="tubusszám" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="277">Correct the spelling of the unrecognized token 'tubusszám' in the literal '"A legkevesebb tubusszám minimum 13 tubus!"'.</Issue>
            </Message>
            <Message Id="írhat" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="269">Correct the spelling of the unrecognized token 'írhat' in the literal '"Csak számokat írhat be!"'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="275">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'TubeCountInRollForm.textBox1_KeyPress(object, KeyPressEventArgs)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textBox1_TextChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="205">Method 'TubeCountInRollForm.textBox1_TextChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "A legkevesebb tubusszám minimum 13 tubus!".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="217">Method 'TubeCountInRollForm.textBox1_TextChanged(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Csak számokat írhat be!".</Issue>
            </Message>
            <Message Id="Csak" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="217">Correct the spelling of the unrecognized token 'Csak' in the literal '"Csak számokat írhat be!"'.</Issue>
            </Message>
            <Message Id="legkevesebb" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="205">Correct the spelling of the unrecognized token 'legkevesebb' in the literal '"A legkevesebb tubusszám minimum 13 tubus!"'.</Issue>
            </Message>
            <Message Id="számokat" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="217">Correct the spelling of the unrecognized token 'számokat' in the literal '"Csak számokat írhat be!"'.</Issue>
            </Message>
            <Message Id="tubus" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="205">Correct the spelling of the unrecognized token 'tubus' in the literal '"A legkevesebb tubusszám minimum 13 tubus!"'.</Issue>
            </Message>
            <Message Id="tubusszám" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="205">Correct the spelling of the unrecognized token 'tubusszám' in the literal '"A legkevesebb tubusszám minimum 13 tubus!"'.</Issue>
            </Message>
            <Message Id="írhat" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="217">Correct the spelling of the unrecognized token 'írhat' in the literal '"Csak számokat írhat be!"'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="203">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'TubeCountInRollForm.textBox1_TextChanged(object, EventArgs)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="200">Replace the call to 'string.operator !=(string, string)' in 'TubeCountInRollForm.textBox1_TextChanged(object, EventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TubeCountInRollForm_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="252">Method 'TubeCountInRollForm.TubeCountInRollForm_KeyDown(object, KeyEventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Kilépés".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="252">Method 'TubeCountInRollForm.TubeCountInRollForm_KeyDown(object, KeyEventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Biztosan kilép a programból?".</Issue>
            </Message>
            <Message Id="Biztosan" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="252">Correct the spelling of the unrecognized token 'Biztosan' in the literal '"Biztosan kilép a programból?"'.</Issue>
            </Message>
            <Message Id="Kilépés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="252">Correct the spelling of the unrecognized token 'Kilépés' in the literal '"Kilépés"'.</Issue>
            </Message>
            <Message Id="kilép" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="252">Correct the spelling of the unrecognized token 'kilép' in the literal '"Biztosan kilép a programból?"'.</Issue>
            </Message>
            <Message Id="programból" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="252">Correct the spelling of the unrecognized token 'programból' in the literal '"Biztosan kilép a programból?"'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms" File="TubeCountInRollForm.cs" Line="252">Change 'TubeCountInRollForm.TubeCountInRollForm_KeyDown(object, KeyEventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WinFormBlankTest.UI.Forms.Classes_for_Show_DataGrid">
       <Types>
        <Type Name="PrintResult" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="44">Be sure to set the DataTable Locale property wherever 'PrintResult.PrintResult()' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="lotid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="22">In method 'PrintResult.PrintResult(string)', correct the spelling of 'lotid' in parameter name 'lotid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="43">Be sure to set the DataTable Locale property wherever 'PrintResult.PrintResult(string)' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#accuracyDataGrid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PrintResult.accuracyDataGrid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#accuracyValuesDataGrid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PrintResult.accuracyValuesDataGrid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#blankDataGrid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PrintResult.blankDataGrid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExportToExcel(System.Data.DataTable,System.Data.DataTable,System.Data.DataTable,System.Data.DataTable,System.Data.DataTable,System.Data.DataTable,System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="UIMethod" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="717">'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' is coupled with 33 different (non-IComponent) types from 11 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="824">Method 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Az exportálás megtörtént\r\nElérési út: , \\ExportedFiles\\Export_".</Issue>
            </Message>
            <Message Id="Az" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="824">Correct the spelling of the unrecognized token 'Az' in the literal '"Az exportálás megtörtént\r\nElérési út: "'.</Issue>
            </Message>
            <Message Id="Elérési" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="824">Correct the spelling of the unrecognized token 'Elérési' in the literal '"Az exportálás megtörtént\r\nElérési út: "'.</Issue>
            </Message>
            <Message Id="ExportedFiles" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="824">Correct the spelling of the unrecognized token 'ExportedFiles' in the literal '"\\ExportedFiles\\Export_"'.</Issue>
            </Message>
            <Message Id="exportálás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="824">Correct the spelling of the unrecognized token 'exportálás' in the literal '"Az exportálás megtörtént\r\nElérési út: "'.</Issue>
            </Message>
            <Message Id="megtörtént" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="824">Correct the spelling of the unrecognized token 'megtörtént' in the literal '"Az exportálás megtörtént\r\nElérési út: "'.</Issue>
            </Message>
            <Message Id="út" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="824">Correct the spelling of the unrecognized token 'út' in the literal '"Az exportálás megtörtént\r\nElérési út: "'.</Issue>
            </Message>
            <Message Id="tableAccuracy" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="717">Parameter 'tableAccuracy' of 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="tableAccuracyValues" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="717">Parameter 'tableAccuracyValues' of 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="tableBlank" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="717">Parameter 'tableBlank' of 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="tableEnvironment" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="717">Parameter 'tableEnvironment' of 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="tableHomogenity" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="717">Parameter 'tableHomogenity' of 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="tableLot" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="717">Parameter 'tableLot' of 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="tableRoll" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="717">Parameter 'tableRoll' of 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="729">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="733">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="735">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="737">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="739">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="746">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="753">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="755">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="757">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="761">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="763">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="765">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="767">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="769">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="777">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="779">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="785">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="787">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="792">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="794">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="796">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="798">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="800">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="802">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="804">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="744">Because the behavior of 'Convert.ToString(string)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'Convert.ToString(string, IFormatProvider)'. If the result of 'Convert.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="719">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="745">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="808">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="824">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="824">Change 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message Id="tableAccuracyValues" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="717">'tableAccuracyValues', a parameter declared in 'PrintResult.ExportToExcel(DataTable, DataTable, DataTable, DataTable, DataTable, DataTable, DataTable)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenityDataGrid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PrintResult.homogenityDataGrid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'PrintResult.homogenityDataGrid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#humidityDataGrid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PrintResult.humidityDataGrid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitAccuracyDatagridView()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="555">In method 'PrintResult.InitAccuracyDatagridView()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="557">In method 'PrintResult.InitAccuracyDatagridView()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumnCollection" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="556">'PrintResult.InitAccuracyDatagridView()' creates a new instance of 'DataGridViewColumnCollection' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitAccuracyValuesDatagridView()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="618">In method 'PrintResult.InitAccuracyValuesDatagridView()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="620">In method 'PrintResult.InitAccuracyValuesDatagridView()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumnCollection" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="619">'PrintResult.InitAccuracyValuesDatagridView()' creates a new instance of 'DataGridViewColumnCollection' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="WinFormBlankTest.Controller.DataManipulation.StoreCSVFileFinalResults" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="636">'PrintResult.InitAccuracyValuesDatagridView()' creates a new instance of 'StoreCSVFileFinalResults' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitEnvironmentDataGridView()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="687">In method 'PrintResult.InitEnvironmentDataGridView()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="689">In method 'PrintResult.InitEnvironmentDataGridView()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumnCollection" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="688">'PrintResult.InitEnvironmentDataGridView()' creates a new instance of 'DataGridViewColumnCollection' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitHomogenityDatagridView()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="352">In method 'PrintResult.InitHomogenityDatagridView()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="354">In method 'PrintResult.InitHomogenityDatagridView()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumnCollection" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="353">'PrintResult.InitHomogenityDatagridView()' creates a new instance of 'DataGridViewColumnCollection' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeBlankDataGrid()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="95">In method 'PrintResult.InitializeBlankDataGrid()', call System.IDisposable.Dispose on object 'dAdapter' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="101">In method 'PrintResult.InitializeBlankDataGrid()', call System.IDisposable.Dispose on object 'dAdapter' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="107">In method 'PrintResult.InitializeBlankDataGrid()', call System.IDisposable.Dispose on object 'dAdapter' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="113">In method 'PrintResult.InitializeBlankDataGrid()', call System.IDisposable.Dispose on object 'dAdapter' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="142">In method 'PrintResult.InitializeBlankDataGrid()', call System.IDisposable.Dispose on object 'dAdapter' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="162">In method 'PrintResult.InitializeBlankDataGrid()', call System.IDisposable.Dispose on object 'dAdapter' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="181">In method 'PrintResult.InitializeBlankDataGrid()', call System.IDisposable.Dispose on object 'dAdapter' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="241">In method 'PrintResult.InitializeBlankDataGrid()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="243">In method 'PrintResult.InitializeBlankDataGrid()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="195">Object 'conn' can be disposed more than once in method 'PrintResult.InitializeBlankDataGrid()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 195</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumnCollection" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="242">'PrintResult.InitializeBlankDataGrid()' creates a new instance of 'DataGridViewColumnCollection' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="160">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'PrintResult.InitializeBlankDataGrid()' could contain the following variables 'accValuesPkId'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="179">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'PrintResult.InitializeBlankDataGrid()' could contain the following variables 'accuracy_pkid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="93">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'PrintResult.InitializeBlankDataGrid()' could contain the following variables 'this.lot'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="99">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'PrintResult.InitializeBlankDataGrid()' could contain the following variables 'this.lot'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="105">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'PrintResult.InitializeBlankDataGrid()' could contain the following variables 'this.lot'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="111">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'PrintResult.InitializeBlankDataGrid()' could contain the following variables 'this.lot'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="117">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'PrintResult.InitializeBlankDataGrid()' could contain the following variables 'this.lot'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="147">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'PrintResult.InitializeBlankDataGrid()' could contain the following variables 'this.lot'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="167">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'PrintResult.InitializeBlankDataGrid()' could contain the following variables 'this.lot'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="140">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'PrintResult.InitializeBlankDataGrid()' could contain the following variables 'this.lotTable', 'this.lot'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="128">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'PrintResult.InitializeBlankDataGrid()' could contain the following variables 'this.lot_pkid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="130">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.InitializeBlankDataGrid()' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="124">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.InitializeBlankDataGrid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="158">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.InitializeBlankDataGrid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="177">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.InitializeBlankDataGrid()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="93">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.InitializeBlankDataGrid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="99">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.InitializeBlankDataGrid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="105">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.InitializeBlankDataGrid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="111">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.InitializeBlankDataGrid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="117">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.InitializeBlankDataGrid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="128">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.InitializeBlankDataGrid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="147">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.InitializeBlankDataGrid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="160">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.InitializeBlankDataGrid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="167">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.InitializeBlankDataGrid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="179">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.InitializeBlankDataGrid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="140">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'PrintResult.InitializeBlankDataGrid()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.Designer.cs" Line="39">Method 'PrintResult.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "PrintResult".</Issue>
            </Message>
            <Message Id="PrintResult" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.Designer.cs" Line="39">Correct the spelling of the unrecognized token 'PrintResult' in the literal '"PrintResult"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitLotDatagridView()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="426">In method 'PrintResult.InitLotDatagridView()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="428">In method 'PrintResult.InitLotDatagridView()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumnCollection" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="427">'PrintResult.InitLotDatagridView()' creates a new instance of 'DataGridViewColumnCollection' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitRollDataGridView()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="491">In method 'PrintResult.InitRollDataGridView()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="493">In method 'PrintResult.InitRollDataGridView()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumnCollection" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="492">'PrintResult.InitRollDataGridView()' creates a new instance of 'DataGridViewColumnCollection' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PrintResult.lot' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lotDataGrid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PrintResult.lotDataGrid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lotTableName" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'PrintResult.lotTableName' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MAX_PW_LENGHT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LENGHT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LENGHT' in member name 'PrintResult.MAX_PW_LENGHT' by changing it to 'Lenght'.</Issue>
            </Message>
            <Message Id="MAX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MAX' in member name 'PrintResult.MAX_PW_LENGHT' by changing it to 'Max'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'PrintResult.MAX_PW_LENGHT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrintResult_Shown(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="WinFormBlankTest.Controller.DataManipulation.ExportToCSV" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="73">'PrintResult.PrintResult_Shown(object, EventArgs)' creates a new instance of 'ExportToCSV' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReleaseComObject(System.Object)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="839">Modify 'PrintResult.ReleaseComObject(object)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Classes for Show DataGrid" File="PrintResult.cs" Line="836">The 'this' parameter (or 'Me' in Visual Basic) of 'PrintResult.ReleaseComObject(object)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#rollDataGrid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PrintResult.rollDataGrid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_fk_errors_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PrintResult.selected_fk_errors_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'PrintResult.selected_fk_errors_id' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="fk" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'fk' in member name 'PrintResult.selected_fk_errors_id' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_glus" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PrintResult.selected_glus' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'PrintResult.selected_glus' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="glus" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glus' in member name 'PrintResult.selected_glus' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_nano_ampers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PrintResult.selected_nano_ampers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'PrintResult.selected_nano_ampers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="ampers" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'ampers' in member name 'PrintResult.selected_nano_ampers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="nano" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'nano' in member name 'PrintResult.selected_nano_ampers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_result_ids" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PrintResult.selected_result_ids' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'PrintResult.selected_result_ids' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_serial_numbers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PrintResult.selected_serial_numbers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'PrintResult.selected_serial_numbers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tableAcc" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Acc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Acc' in member name 'PrintResult.tableAcc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'PrintResult.tableAcc' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tableAcc2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Acc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Acc' in member name 'PrintResult.tableAcc2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'PrintResult.tableAcc2' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tableBlank" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'PrintResult.tableBlank' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tableEnvironment" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'PrintResult.tableEnvironment' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tableHomogenity" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Homogenity' in member name 'PrintResult.tableHomogenity' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'PrintResult.tableHomogenity' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tableLot" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'PrintResult.tableLot' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tableRoll" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'PrintResult.tableRoll' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WinFormBlankTest.UI.Forms.Other_Forms">
       <Types>
        <Type Name="AccuracyFinishedResultView" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="386">Be sure to set the DataTable Locale property wherever 'AccuracyFinishedResultView.AccuracyFinishedResultView()' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="79">Object 'connection' can be disposed more than once in method 'AccuracyFinishedResultView.AccuracyFinishedResultView(string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 79</Issue>
            </Message>
            <Message Id="lotid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="18">In member 'AccuracyFinishedResultView.AccuracyFinishedResultView(string, string)', correct the casing of 'lotid' in parameter name 'master_lotid' by changing it to 'Lotid'.</Issue>
            </Message>
            <Message Id="lotid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="18">In method 'AccuracyFinishedResultView.AccuracyFinishedResultView(string, string)', correct the spelling of 'lotid' in parameter name 'lotid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="18">In method 'AccuracyFinishedResultView.AccuracyFinishedResultView(string, string)', correct the spelling of 'lotid' in parameter name 'master_lotid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="18">In member 'AccuracyFinishedResultView.AccuracyFinishedResultView(string, string)', remove the underscores from parameter name 'master_lotid'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="42">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AccuracyFinishedResultView.AccuracyFinishedResultView(string, string)' could contain the following variables 'lotid', 'master_lotid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="57">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AccuracyFinishedResultView.AccuracyFinishedResultView(string, string)' could contain the following variables 'lotid', 'master_lotid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="386">Be sure to set the DataTable Locale property wherever 'AccuracyFinishedResultView.AccuracyFinishedResultView(string, string)' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="53">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'AccuracyFinishedResultView.AccuracyFinishedResultView(string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="68">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'AccuracyFinishedResultView.AccuracyFinishedResultView(string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="42">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AccuracyFinishedResultView.AccuracyFinishedResultView(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="57">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AccuracyFinishedResultView.AccuracyFinishedResultView(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#accuracy_lot_result_pkid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AccuracyFinishedResultView.accuracy_lot_result_pkid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="pkid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'pkid' in member name 'AccuracyFinishedResultView.accuracy_lot_result_pkid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#accuracy_result_pkid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AccuracyFinishedResultView.accuracy_result_pkid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="pkid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'pkid' in member name 'AccuracyFinishedResultView.accuracy_result_pkid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#allDataGridView" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AccuracyFinishedResultView.allDataGridView' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bindingSource1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AccuracyFinishedResultView.bindingSource1' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bindingSourceAll" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AccuracyFinishedResultView.bindingSourceAll' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bindingSourceAllData" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AccuracyFinishedResultView.bindingSourceAllData' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#chart1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AccuracyFinishedResultView.chart1' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#chartAll" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AccuracyFinishedResultView.chartAll' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateChart()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="335">In method 'AccuracyFinishedResultView.CreateChart()', object 'area' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'area' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateChartForAllData()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="214">In method 'AccuracyFinishedResultView.CreateChartForAllData()', object 'area' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'area' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="222">In method 'AccuracyFinishedResultView.CreateChartForAllData()', call System.IDisposable.Dispose on object 'series2' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="227">In method 'AccuracyFinishedResultView.CreateChartForAllData()', call System.IDisposable.Dispose on object 'series2' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="221">In method 'AccuracyFinishedResultView.CreateChartForAllData()', call System.IDisposable.Dispose on object 'seriesAll' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="223">In method 'AccuracyFinishedResultView.CreateChartForAllData()', call System.IDisposable.Dispose on object 'seriesAll' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="StringCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="209">'AccuracyFinishedResultView.CreateChartForAllData()' calls 'string.Format(string, object, object)' but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="209">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AccuracyFinishedResultView.CreateChartForAllData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="211">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AccuracyFinishedResultView.CreateChartForAllData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridView1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AccuracyFinishedResultView.dataGridView1' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataGridViewAll" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AccuracyFinishedResultView.dataGridViewAll' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="series1" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.Designer.cs" Line="16">'AccuracyFinishedResultView' contains field 'AccuracyFinishedResultView.series1' that is of IDisposable type: 'Series'. Change the Dispose method on 'AccuracyFinishedResultView' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Export()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="271">The 'this' parameter (or 'Me' in Visual Basic) of 'AccuracyFinishedResultView.Export()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetData(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="398">In method 'AccuracyFinishedResultView.GetData(string)', object 'command' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'command' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="399">In method 'AccuracyFinishedResultView.GetData(string)', call System.IDisposable.Dispose on object 'adapter' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="398">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'AccuracyFinishedResultView.GetData(string)' could contain the following variables 'sqlCommand'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeAllDataGridView(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="121">In method 'AccuracyFinishedResultView.InitializeAllDataGridView(int)', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="123">In method 'AccuracyFinishedResultView.InitializeAllDataGridView(int)', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumnCollection" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="122">'AccuracyFinishedResultView.InitializeAllDataGridView(int)' creates a new instance of 'DataGridViewColumnCollection' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="103">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AccuracyFinishedResultView.InitializeAllDataGridView(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="accuracy_lot_result_pkid" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="103">'accuracy_lot_result_pkid', a parameter declared in 'AccuracyFinishedResultView.InitializeAllDataGridView(int)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.Designer.cs" Line="75">Method 'AccuracyFinishedResultView.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "AccuracyFinishedResultView".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.Designer.cs" Line="55">Method 'AccuracyFinishedResultView.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "tabPage1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.Designer.cs" Line="65">Method 'AccuracyFinishedResultView.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "tabPage2".</Issue>
            </Message>
            <Message Id="AccuracyFinishedResultView" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.Designer.cs" Line="75">Correct the spelling of the unrecognized token 'AccuracyFinishedResultView' in the literal '"AccuracyFinishedResultView"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeDataGridView(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="295">In method 'AccuracyFinishedResultView.InitializeDataGridView(int)', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="297">In method 'AccuracyFinishedResultView.InitializeDataGridView(int)', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumnCollection" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="296">'AccuracyFinishedResultView.InitializeDataGridView(int)' creates a new instance of 'DataGridViewColumnCollection' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="pkid" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="278">Parameter 'pkid' of 'AccuracyFinishedResultView.InitializeDataGridView(int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="278">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AccuracyFinishedResultView.InitializeDataGridView(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeDataGridViewAllResult()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="174">In method 'AccuracyFinishedResultView.InitializeDataGridViewAllResult()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="176">In method 'AccuracyFinishedResultView.InitializeDataGridViewAllResult()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumnCollection" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="175">'AccuracyFinishedResultView.InitializeDataGridViewAllResult()' creates a new instance of 'DataGridViewColumnCollection' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="AccuracyFinishedResultView.cs" Line="156">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AccuracyFinishedResultView.InitializeDataGridViewAllResult()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AccuracyFinishedResultView.lot' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#master_lot" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AccuracyFinishedResultView.master_lot' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#series1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AccuracyFinishedResultView.series1' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#table" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AccuracyFinishedResultView.table' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BlankFinishedResultsView" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="42">Be sure to set the DataTable Locale property wherever 'BlankFinishedResultsView.BlankFinishedResultsView()' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="92">Method 'BlankFinishedResultsView.BlankFinishedResultsView(string, string)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Blank Test Result of the ,  roll from the ,  lot".</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="42">Be sure to set the DataTable Locale property wherever 'BlankFinishedResultsView.BlankFinishedResultsView(string, string)' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="88">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.BlankFinishedResultsView(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="92">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.BlankFinishedResultsView(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bindingSource1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankFinishedResultsView.bindingSource1' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bindingSourceAll" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankFinishedResultsView.bindingSourceAll' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#blankResultQuery" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankFinishedResultsView.blankResultQuery' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#chartAll" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'BlankFinishedResultsView.chartAll' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CollectAllData(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="395">In method 'BlankFinishedResultsView.CollectAllData(string, string)', call System.IDisposable.Dispose on object 'adapter' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="451">In method 'BlankFinishedResultsView.CollectAllData(string, string)', call System.IDisposable.Dispose on object 'adapter' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="455">In method 'BlankFinishedResultsView.CollectAllData(string, string)', call System.IDisposable.Dispose on object 'envTable' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="552">In method 'BlankFinishedResultsView.CollectAllData(string, string)', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="554">In method 'BlankFinishedResultsView.CollectAllData(string, string)', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="637">Object 'conn' can be disposed more than once in method 'BlankFinishedResultsView.CollectAllData(string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 637</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="365">Object 'dr' can be disposed more than once in method 'BlankFinishedResultsView.CollectAllData(string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 365</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="431">Object 'dr' can be disposed more than once in method 'BlankFinishedResultsView.CollectAllData(string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 431</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="483">Object 'dr' can be disposed more than once in method 'BlankFinishedResultsView.CollectAllData(string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 483</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumn.set_HeaderText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="568">Method 'BlankFinishedResultsView.CollectAllData(string, string)' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Első mérés".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="573">Method 'BlankFinishedResultsView.CollectAllData(string, string)' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Felhasználó".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="575">Method 'BlankFinishedResultsView.CollectAllData(string, string)' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Használt kóddugó".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="571">Method 'BlankFinishedResultsView.CollectAllData(string, string)' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Hőmérsélet".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="579">Method 'BlankFinishedResultsView.CollectAllData(string, string)' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Lot azonosító".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="570">Method 'BlankFinishedResultsView.CollectAllData(string, string)' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Mérés kezdete".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="569">Method 'BlankFinishedResultsView.CollectAllData(string, string)' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Mérés vége".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="576">Method 'BlankFinishedResultsView.CollectAllData(string, string)' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Nano Amper".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="577">Method 'BlankFinishedResultsView.CollectAllData(string, string)' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Roll azonosító".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="572">Method 'BlankFinishedResultsView.CollectAllData(string, string)' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Számítógép".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="578">Method 'BlankFinishedResultsView.CollectAllData(string, string)' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Tubus azonosító".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumnCollection" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="553">'BlankFinishedResultsView.CollectAllData(string, string)' creates a new instance of 'DataGridViewColumnCollection' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="320">In member 'BlankFinishedResultsView.CollectAllData(string, string)', correct the casing of 'id' in parameter name 'selected_lot_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="320">In member 'BlankFinishedResultsView.CollectAllData(string, string)', correct the casing of 'id' in parameter name 'selected_roll_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="lot" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="320">In member 'BlankFinishedResultsView.CollectAllData(string, string)', correct the casing of 'lot' in parameter name 'selected_lot_id' by changing it to 'Lot'.</Issue>
            </Message>
            <Message Id="roll" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="320">In member 'BlankFinishedResultsView.CollectAllData(string, string)', correct the casing of 'roll' in parameter name 'selected_roll_id' by changing it to 'Roll'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="320">In member 'BlankFinishedResultsView.CollectAllData(string, string)', remove the underscores from parameter name 'selected_lot_id'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="320">In member 'BlankFinishedResultsView.CollectAllData(string, string)', remove the underscores from parameter name 'selected_roll_id'.</Issue>
            </Message>
            <Message Id="Amper" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="576">Correct the spelling of the unrecognized token 'Amper' in the literal '"Nano Amper"'.</Issue>
            </Message>
            <Message Id="Első" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="568">Correct the spelling of the unrecognized token 'Első' in the literal '"Első mérés"'.</Issue>
            </Message>
            <Message Id="Felhasználó" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="573">Correct the spelling of the unrecognized token 'Felhasználó' in the literal '"Felhasználó"'.</Issue>
            </Message>
            <Message Id="Használt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="575">Correct the spelling of the unrecognized token 'Használt' in the literal '"Használt kóddugó"'.</Issue>
            </Message>
            <Message Id="Hőmérsélet" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="571">Correct the spelling of the unrecognized token 'Hőmérsélet' in the literal '"Hőmérsélet"'.</Issue>
            </Message>
            <Message Id="Mérés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="570">Correct the spelling of the unrecognized token 'Mérés' in the literal '"Mérés kezdete"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="569">Correct the spelling of the unrecognized token 'Mérés' in the literal '"Mérés vége"'.</Issue>
            </Message>
            <Message Id="Nano" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="576">Correct the spelling of the unrecognized token 'Nano' in the literal '"Nano Amper"'.</Issue>
            </Message>
            <Message Id="Számítógép" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="572">Correct the spelling of the unrecognized token 'Számítógép' in the literal '"Számítógép"'.</Issue>
            </Message>
            <Message Id="Tubus" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="578">Correct the spelling of the unrecognized token 'Tubus' in the literal '"Tubus azonosító"'.</Issue>
            </Message>
            <Message Id="azonosító" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="579">Correct the spelling of the unrecognized token 'azonosító' in the literal '"Lot azonosító"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="577">Correct the spelling of the unrecognized token 'azonosító' in the literal '"Roll azonosító"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="578">Correct the spelling of the unrecognized token 'azonosító' in the literal '"Tubus azonosító"'.</Issue>
            </Message>
            <Message Id="kezdete" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="570">Correct the spelling of the unrecognized token 'kezdete' in the literal '"Mérés kezdete"'.</Issue>
            </Message>
            <Message Id="kóddugó" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="575">Correct the spelling of the unrecognized token 'kóddugó' in the literal '"Használt kóddugó"'.</Issue>
            </Message>
            <Message Id="mérés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="568">Correct the spelling of the unrecognized token 'mérés' in the literal '"Első mérés"'.</Issue>
            </Message>
            <Message Id="vége" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="569">Correct the spelling of the unrecognized token 'vége' in the literal '"Mérés vége"'.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="389">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'BlankFinishedResultsView.CollectAllData(string, string)' could contain the following variables 'act_result_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="328">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'BlankFinishedResultsView.CollectAllData(string, string)' could contain the following variables 'selected_lot_id', 'selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="346">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'BlankFinishedResultsView.CollectAllData(string, string)' could contain the following variables 'selected_lot_id', 'selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="445">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'BlankFinishedResultsView.CollectAllData(string, string)' could contain the following variables 'selected_lot_id', 'selected_roll_id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="455">Be sure to set the DataTable Locale property wherever 'BlankFinishedResultsView.CollectAllData(string, string)' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="473">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.CollectAllData(string, string)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="474">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.CollectAllData(string, string)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="422">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.CollectAllData(string, string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="423">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.CollectAllData(string, string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="475">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.CollectAllData(string, string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="357">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.CollectAllData(string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="424">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.CollectAllData(string, string)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="421">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.CollectAllData(string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="471">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.CollectAllData(string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="472">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.CollectAllData(string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="389">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.CollectAllData(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="328">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.CollectAllData(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="346">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.CollectAllData(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="445">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.CollectAllData(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateAllDataChart()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="659">In method 'BlankFinishedResultsView.CreateAllDataChart()', object 'area' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'area' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="705">In method 'BlankFinishedResultsView.CreateAllDataChart()', object 'line1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'line1' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="687">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.CreateAllDataChart()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateAlternationChart()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="163">In method 'BlankFinishedResultsView.CreateAlternationChart()', object 'area' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'area' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="164">In method 'BlankFinishedResultsView.CreateAlternationChart()', object 'series' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'series' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="172">In method 'BlankFinishedResultsView.CreateAlternationChart()', call System.IDisposable.Dispose on object 'dgv' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="171">In method 'BlankFinishedResultsView.CreateAlternationChart()', call System.IDisposable.Dispose on object 'new BindingSource()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="170">In method 'BlankFinishedResultsView.CreateAlternationChart()', call System.IDisposable.Dispose on object 'new Label()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.BindingSource" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="171">'BlankFinishedResultsView.CreateAlternationChart()' creates a new instance of 'BindingSource' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="170">'BlankFinishedResultsView.CreateAlternationChart()' creates a new instance of 'Label' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.DateTime)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="179">Because the behavior of 'Convert.ToString(DateTime)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.CreateAlternationChart()' with a call to 'Convert.ToString(DateTime, IFormatProvider)'. If the result of 'Convert.ToString(DateTime, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="192">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.CreateAlternationChart()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="158">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.CreateAlternationChart()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="table" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="158">'table', a variable declared in 'BlankFinishedResultsView.CreateAlternationChart()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateChart()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="717">In method 'BlankFinishedResultsView.CreateChart()', object 'area' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'area' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="766">In method 'BlankFinishedResultsView.CreateChart()', object 'line1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'line1' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="series1" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.Designer.cs" Line="16">'BlankFinishedResultsView' contains field 'BlankFinishedResultsView.series1' that is of IDisposable type: 'Series'. Change the Dispose method on 'BlankFinishedResultsView' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Export()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="WinFormBlankTest.Controller.DataManipulation.ExportToCSV" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="149">'BlankFinishedResultsView.Export()' creates a new instance of 'ExportToCSV' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="149">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.Export()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetData(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="798">In method 'BlankFinishedResultsView.GetData(string)', object 'command' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'command' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="799">In method 'BlankFinishedResultsView.GetData(string)', call System.IDisposable.Dispose on object 'adapter' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="798">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'BlankFinishedResultsView.GetData(string)' could contain the following variables 'sqlCommand'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.Designer.cs" Line="66">Method 'BlankFinishedResultsView.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Blank Teszt Eredménye".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.Designer.cs" Line="90">Method 'BlankFinishedResultsView.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "BlankFinishedResultsView".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.Designer.cs" Line="76">Method 'BlankFinishedResultsView.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Minden mérés mutatása".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.Designer.cs" Line="45">Method 'BlankFinishedResultsView.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "button1".</Issue>
            </Message>
            <Message Id="BlankFinishedResultsView" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.Designer.cs" Line="90">Correct the spelling of the unrecognized token 'BlankFinishedResultsView' in the literal '"BlankFinishedResultsView"'.</Issue>
            </Message>
            <Message Id="Eredménye" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.Designer.cs" Line="66">Correct the spelling of the unrecognized token 'Eredménye' in the literal '"Blank Teszt Eredménye"'.</Issue>
            </Message>
            <Message Id="Teszt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.Designer.cs" Line="66">Correct the spelling of the unrecognized token 'Teszt' in the literal '"Blank Teszt Eredménye"'.</Issue>
            </Message>
            <Message Id="mutatása" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.Designer.cs" Line="76">Correct the spelling of the unrecognized token 'mutatása' in the literal '"Minden mérés mutatása"'.</Issue>
            </Message>
            <Message Id="mérés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.Designer.cs" Line="76">Correct the spelling of the unrecognized token 'mérés' in the literal '"Minden mérés mutatása"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeDataGridView()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="219">In method 'BlankFinishedResultsView.InitializeDataGridView()', call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="227">In method 'BlankFinishedResultsView.InitializeDataGridView()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="229">In method 'BlankFinishedResultsView.InitializeDataGridView()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumn.set_HeaderText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="296">Method 'BlankFinishedResultsView.InitializeDataGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Blank Teszt Értékelés".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="269">Method 'BlankFinishedResultsView.InitializeDataGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Lemért tubusszám".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="271">Method 'BlankFinishedResultsView.InitializeDataGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Lot azonosító".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="268">Method 'BlankFinishedResultsView.InitializeDataGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Roll Azonosító".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="270">Method 'BlankFinishedResultsView.InitializeDataGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Teszt időpontja".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="267">Method 'BlankFinishedResultsView.InitializeDataGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Átlag".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="220">Method 'BlankFinishedResultsView.InitializeDataGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Értékelés".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumnCollection" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="228">'BlankFinishedResultsView.InitializeDataGridView()' creates a new instance of 'DataGridViewColumnCollection' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="Azonosító" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="268">Correct the spelling of the unrecognized token 'Azonosító' in the literal '"Roll Azonosító"'.</Issue>
            </Message>
            <Message Id="Lemért" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="269">Correct the spelling of the unrecognized token 'Lemért' in the literal '"Lemért tubusszám"'.</Issue>
            </Message>
            <Message Id="Teszt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="296">Correct the spelling of the unrecognized token 'Teszt' in the literal '"Blank Teszt Értékelés"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="270">Correct the spelling of the unrecognized token 'Teszt' in the literal '"Teszt időpontja"'.</Issue>
            </Message>
            <Message Id="azonosító" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="271">Correct the spelling of the unrecognized token 'azonosító' in the literal '"Lot azonosító"'.</Issue>
            </Message>
            <Message Id="időpontja" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="270">Correct the spelling of the unrecognized token 'időpontja' in the literal '"Teszt időpontja"'.</Issue>
            </Message>
            <Message Id="tubusszám" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="269">Correct the spelling of the unrecognized token 'tubusszám' in the literal '"Lemért tubusszám"'.</Issue>
            </Message>
            <Message Id="Átlag" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="267">Correct the spelling of the unrecognized token 'Átlag' in the literal '"Átlag"'.</Issue>
            </Message>
            <Message Id="Értékelés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="296">Correct the spelling of the unrecognized token 'Értékelés' in the literal '"Blank Teszt Értékelés"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="220">Correct the spelling of the unrecognized token 'Értékelés' in the literal '"Értékelés"'.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="287">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.InitializeDataGridView()' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="306">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'BlankFinishedResultsView.InitializeDataGridView()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#resultString" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BlankFinishedResultsView.resultString' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#resultTable" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankFinishedResultsView.resultTable' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#row" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'BlankFinishedResultsView.row' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_codes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankFinishedResultsView.selected_codes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'BlankFinishedResultsView.selected_codes' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_computers" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'BlankFinishedResultsView.selected_computers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BlankFinishedResultsView.selected_computers' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_device_replace" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankFinishedResultsView.selected_device_replace' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'BlankFinishedResultsView.selected_device_replace' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_early_dribble" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankFinishedResultsView.selected_early_dribble' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'BlankFinishedResultsView.selected_early_dribble' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_end_dates" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'BlankFinishedResultsView.selected_end_dates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BlankFinishedResultsView.selected_end_dates' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_error" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'BlankFinishedResultsView.selected_error' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BlankFinishedResultsView.selected_error' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_error_text" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'BlankFinishedResultsView.selected_error_text' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BlankFinishedResultsView.selected_error_text' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_fk_errors_id" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'BlankFinishedResultsView.selected_fk_errors_id' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="fk" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'fk' in member name 'BlankFinishedResultsView.selected_fk_errors_id' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BlankFinishedResultsView.selected_fk_errors_id' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_glus" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'BlankFinishedResultsView.selected_glus' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="glus" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glus' in member name 'BlankFinishedResultsView.selected_glus' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BlankFinishedResultsView.selected_glus' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_h62" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'BlankFinishedResultsView.selected_h62' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BlankFinishedResultsView.selected_h62' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_nano_ampers" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'BlankFinishedResultsView.selected_nano_ampers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="ampers" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'ampers' in member name 'BlankFinishedResultsView.selected_nano_ampers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="nano" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'nano' in member name 'BlankFinishedResultsView.selected_nano_ampers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BlankFinishedResultsView.selected_nano_ampers' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_not_h62" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'BlankFinishedResultsView.selected_not_h62' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BlankFinishedResultsView.selected_not_h62' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_result_ids" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'BlankFinishedResultsView.selected_result_ids' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BlankFinishedResultsView.selected_result_ids' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_rolls" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankFinishedResultsView.selected_rolls' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'BlankFinishedResultsView.selected_rolls' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_serial_numbers" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'BlankFinishedResultsView.selected_serial_numbers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BlankFinishedResultsView.selected_serial_numbers' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_start_dates" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'BlankFinishedResultsView.selected_start_dates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BlankFinishedResultsView.selected_start_dates' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_temp" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'BlankFinishedResultsView.selected_temp' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BlankFinishedResultsView.selected_temp' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_users" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'BlankFinishedResultsView.selected_users' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'BlankFinishedResultsView.selected_users' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetCloseButton()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="107">In method 'BlankFinishedResultsView.SetCloseButton()', object 'btClose' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'btClose' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="112">Method 'BlankFinishedResultsView.SetCloseButton()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Bezár".</Issue>
            </Message>
            <Message Id="Bezár" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="BlankFinishedResultsView.cs" Line="112">Correct the spelling of the unrecognized token 'Bezár' in the literal '"Bezár"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#table" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankFinishedResultsView.table' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tableAll" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankFinishedResultsView.tableAll' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tableEnv" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankFinishedResultsView.tableEnv' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Env" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Env' in member name 'BlankFinishedResultsView.tableEnv' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tableErrors" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BlankFinishedResultsView.tableErrors' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HomogenityResultsView" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="UIType" Certainty="75" Level="Warning">'HomogenityResultsView' is coupled with 82 different (non-IComponent) types from 19 different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above 95 indicates poor maintainability, a class coupling between 95 and 80 indicates moderate maintainability, and a class coupling below 80 indicates good maintainability.</Issue>
          </Message>
          <Message Id="Homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Homogenity' in type name 'HomogenityResultsView'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="94">Be sure to set the DataTable Locale property wherever 'HomogenityResultsView.HomogenityResultsView()' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="120">Method 'HomogenityResultsView.HomogenityResultsView(string, string)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Homogenity Teszt Eredménye a ,  azonosítójú roll a ,  lot-ból".</Issue>
            </Message>
            <Message Id="Eredménye" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="120">Correct the spelling of the unrecognized token 'Eredménye' in the literal '"Homogenity Teszt Eredménye a "'.</Issue>
            </Message>
            <Message Id="Homogenity" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="120">Correct the spelling of the unrecognized token 'Homogenity' in the literal '"Homogenity Teszt Eredménye a "'.</Issue>
            </Message>
            <Message Id="Teszt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="120">Correct the spelling of the unrecognized token 'Teszt' in the literal '"Homogenity Teszt Eredménye a "'.</Issue>
            </Message>
            <Message Id="azonosítójú" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="120">Correct the spelling of the unrecognized token 'azonosítójú' in the literal '" azonosítójú roll a "'.</Issue>
            </Message>
            <Message Id="lot-ból" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="120">Correct the spelling of the unrecognized token 'lot-ból' in the literal '" lot-ból"'.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="94">Be sure to set the DataTable Locale property wherever 'HomogenityResultsView.HomogenityResultsView(string, string)' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="115">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.HomogenityResultsView(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="120">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.HomogenityResultsView(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AllBlankResultQuery" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.AllBlankResultQuery' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bindingSource1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.bindingSource1' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bindingSourceAll" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.bindingSourceAll' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btExit" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.btExit' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="bt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'bt' in member name 'HomogenityResultsView.btExit' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#chart1_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="522">'HomogenityResultsView.chart1_MouseDown(object, MouseEventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#chart1_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="544">'HomogenityResultsView.chart1_MouseMove(object, MouseEventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#chart1_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="585">'HomogenityResultsView.chart1_MouseUp(object, MouseEventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#chartAll" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'HomogenityResultsView.chartAll' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CollectAllData(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="211">In method 'HomogenityResultsView.CollectAllData(string, string)', call System.IDisposable.Dispose on object 'adapter' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="278">Object 'connect' can be disposed more than once in method 'HomogenityResultsView.CollectAllData(string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 278</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="193">Object 'dr' can be disposed more than once in method 'HomogenityResultsView.CollectAllData(string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 193</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="258">Object 'dr' can be disposed more than once in method 'HomogenityResultsView.CollectAllData(string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 258</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="174">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResultsView.CollectAllData(string, string)' could contain the following variables 'lotid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="207">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResultsView.CollectAllData(string, string)' could contain the following variables 'lotid', 'rollid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="236">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResultsView.CollectAllData(string, string)' could contain the following variables 'lotid', 'rollid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="248">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CollectAllData(string, string)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="249">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CollectAllData(string, string)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="250">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CollectAllData(string, string)' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="182">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CollectAllData(string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="183">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CollectAllData(string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="246">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CollectAllData(string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="247">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CollectAllData(string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="174">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CollectAllData(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="192">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CollectAllData(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="207">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CollectAllData(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="236">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CollectAllData(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="lotid" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="163">'lotid', a parameter declared in 'HomogenityResultsView.CollectAllData(string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="rollid" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="163">'rollid', a parameter declared in 'HomogenityResultsView.CollectAllData(string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateAllDataChart()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1043">'HomogenityResultsView.CreateAllDataChart()' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1046">In method 'HomogenityResultsView.CreateAllDataChart()', object 'area' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'area' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1050">In method 'HomogenityResultsView.CreateAllDataChart()', call System.IDisposable.Dispose on object 'allHomogenityDataTable' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1050">Be sure to set the DataTable Locale property wherever 'HomogenityResultsView.CreateAllDataChart()' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.DateTime)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1073">Because the behavior of 'Convert.ToString(DateTime)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CreateAllDataChart()' with a call to 'Convert.ToString(DateTime, IFormatProvider)'. If the result of 'Convert.ToString(DateTime, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1045">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CreateAllDataChart()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1084">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CreateAllDataChart()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateAllDatatGridView()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="309">In method 'HomogenityResultsView.CreateAllDatatGridView()', call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="318">In method 'HomogenityResultsView.CreateAllDatatGridView()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="320">In method 'HomogenityResultsView.CreateAllDatatGridView()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumn.set_HeaderText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="368">Method 'HomogenityResultsView.CreateAllDatatGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Glükóz érték".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="371">Method 'HomogenityResultsView.CreateAllDatatGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "H62-es hiba történt".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="363">Method 'HomogenityResultsView.CreateAllDatatGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Használt kóddugó".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="375">Method 'HomogenityResultsView.CreateAllDatatGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Hibaleírás".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="403">Method 'HomogenityResultsView.CreateAllDatatGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Homogenity Teszt Értékelés".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="372">Method 'HomogenityResultsView.CreateAllDatatGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Korai cseppentés történt".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="373">Method 'HomogenityResultsView.CreateAllDatatGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Készülékcsere történt".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="367">Method 'HomogenityResultsView.CreateAllDatatGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Lot azonosító".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="370">Method 'HomogenityResultsView.CreateAllDatatGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Nem H62-es hiba történt".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="364">Method 'HomogenityResultsView.CreateAllDatatGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Roll Azonosító".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="365">Method 'HomogenityResultsView.CreateAllDatatGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Tubus azonosító".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="310">Method 'HomogenityResultsView.CreateAllDatatGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Értékelés".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumnCollection" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="319">'HomogenityResultsView.CreateAllDatatGridView()' creates a new instance of 'DataGridViewColumnCollection' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="Azonosító" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="364">Correct the spelling of the unrecognized token 'Azonosító' in the literal '"Roll Azonosító"'.</Issue>
            </Message>
            <Message Id="Glükóz" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="368">Correct the spelling of the unrecognized token 'Glükóz' in the literal '"Glükóz érték"'.</Issue>
            </Message>
            <Message Id="Használt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="363">Correct the spelling of the unrecognized token 'Használt' in the literal '"Használt kóddugó"'.</Issue>
            </Message>
            <Message Id="Hibaleírás" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="375">Correct the spelling of the unrecognized token 'Hibaleírás' in the literal '"Hibaleírás"'.</Issue>
            </Message>
            <Message Id="Homogenity" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="403">Correct the spelling of the unrecognized token 'Homogenity' in the literal '"Homogenity Teszt Értékelés"'.</Issue>
            </Message>
            <Message Id="Korai" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="372">Correct the spelling of the unrecognized token 'Korai' in the literal '"Korai cseppentés történt"'.</Issue>
            </Message>
            <Message Id="Készülékcsere" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="373">Correct the spelling of the unrecognized token 'Készülékcsere' in the literal '"Készülékcsere történt"'.</Issue>
            </Message>
            <Message Id="Nem" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="370">Correct the spelling of the unrecognized token 'Nem' in the literal '"Nem H62-es hiba történt"'.</Issue>
            </Message>
            <Message Id="Teszt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="403">Correct the spelling of the unrecognized token 'Teszt' in the literal '"Homogenity Teszt Értékelés"'.</Issue>
            </Message>
            <Message Id="Tubus" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="365">Correct the spelling of the unrecognized token 'Tubus' in the literal '"Tubus azonosító"'.</Issue>
            </Message>
            <Message Id="azonosító" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="367">Correct the spelling of the unrecognized token 'azonosító' in the literal '"Lot azonosító"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="365">Correct the spelling of the unrecognized token 'azonosító' in the literal '"Tubus azonosító"'.</Issue>
            </Message>
            <Message Id="cseppentés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="372">Correct the spelling of the unrecognized token 'cseppentés' in the literal '"Korai cseppentés történt"'.</Issue>
            </Message>
            <Message Id="hiba" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="371">Correct the spelling of the unrecognized token 'hiba' in the literal '"H62-es hiba történt"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="370">Correct the spelling of the unrecognized token 'hiba' in the literal '"Nem H62-es hiba történt"'.</Issue>
            </Message>
            <Message Id="kóddugó" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="363">Correct the spelling of the unrecognized token 'kóddugó' in the literal '"Használt kóddugó"'.</Issue>
            </Message>
            <Message Id="történt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="371">Correct the spelling of the unrecognized token 'történt' in the literal '"H62-es hiba történt"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="372">Correct the spelling of the unrecognized token 'történt' in the literal '"Korai cseppentés történt"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="373">Correct the spelling of the unrecognized token 'történt' in the literal '"Készülékcsere történt"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="370">Correct the spelling of the unrecognized token 'történt' in the literal '"Nem H62-es hiba történt"'.</Issue>
            </Message>
            <Message Id="Értékelés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="403">Correct the spelling of the unrecognized token 'Értékelés' in the literal '"Homogenity Teszt Értékelés"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="310">Correct the spelling of the unrecognized token 'Értékelés' in the literal '"Értékelés"'.</Issue>
            </Message>
            <Message Id="érték" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="368">Correct the spelling of the unrecognized token 'érték' in the literal '"Glükóz érték"'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="389">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CreateAllDatatGridView()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="389">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CreateAllDatatGridView()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateAlternationChart()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="870">In method 'HomogenityResultsView.CreateAlternationChart()', object 'area' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'area' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="871">In method 'HomogenityResultsView.CreateAlternationChart()', object 'series' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'series' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="880">In method 'HomogenityResultsView.CreateAlternationChart()', call System.IDisposable.Dispose on object 'dgv' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="879">In method 'HomogenityResultsView.CreateAlternationChart()', call System.IDisposable.Dispose on object 'new BindingSource()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="878">In method 'HomogenityResultsView.CreateAlternationChart()', call System.IDisposable.Dispose on object 'new Label()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.BindingSource" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="879">'HomogenityResultsView.CreateAlternationChart()' creates a new instance of 'BindingSource' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Label" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="878">'HomogenityResultsView.CreateAlternationChart()' creates a new instance of 'Label' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.DateTime)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="887">Because the behavior of 'Convert.ToString(DateTime)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CreateAlternationChart()' with a call to 'Convert.ToString(DateTime, IFormatProvider)'. If the result of 'Convert.ToString(DateTime, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="899">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CreateAlternationChart()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="865">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.CreateAlternationChart()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="table" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="Local" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="865">'table', a variable declared in 'HomogenityResultsView.CreateAlternationChart()', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateChart()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1259">In method 'HomogenityResultsView.CreateChart()', object 'area' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'area' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1309">In method 'HomogenityResultsView.CreateChart()', object 'line1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'line1' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateColumnChart()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1107">'HomogenityResultsView.CreateColumnChart()' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1108">In method 'HomogenityResultsView.CreateColumnChart()', object 'area' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'area' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1221">In method 'HomogenityResultsView.CreateColumnChart()', object 'line1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'line1' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1228">In method 'HomogenityResultsView.CreateColumnChart()', object 'line2' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'line2' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1195">In method 'HomogenityResultsView.CreateColumnChart()', object 'lowerLimitLine' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lowerLimitLine' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1190">In method 'HomogenityResultsView.CreateColumnChart()', object 'upperLimitLine' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'upperLimitLine' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1246">In method 'HomogenityResultsView.CreateColumnChart()', call System.IDisposable.Dispose on object 'new Pen(Color.Red)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1121">In method 'HomogenityResultsView.CreateColumnChart()', call System.IDisposable.Dispose on object 'seriesOne' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateTestChart()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="645">In method 'HomogenityResultsView.CreateTestChart()', object 's' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 's' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="series1" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.Designer.cs" Line="16">'HomogenityResultsView' contains field 'HomogenityResultsView.series1' that is of IDisposable type: 'Series'. Change the Dispose method on 'HomogenityResultsView' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawALineToChartArea(System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs,System.Windows.Forms.DataVisualization.Charting.ChartArea,System.Drawing.Graphics,System.Double,System.Double)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="777">In method 'HomogenityResultsView.DrawALineToChartArea(ChartPaintEventArgs, ChartArea, Graphics, double, double)', call System.IDisposable.Dispose on object 'new Pen(Color.Red, 3F)' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Export()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="WinFormBlankTest.Controller.DataManipulation.ExportToCSV" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="860">'HomogenityResultsView.Export()' creates a new instance of 'ExportToCSV' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="860">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.Export()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetData(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1341">In method 'HomogenityResultsView.GetData(string)', object 'command' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'command' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1342">In method 'HomogenityResultsView.GetData(string)', call System.IDisposable.Dispose on object 'adapter' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1341">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityResultsView.GetData(string)' could contain the following variables 'sqlCommand'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_avg" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_avg' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'HomogenityResultsView.homogenity_avg' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="avg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'avg' in member name 'HomogenityResultsView.homogenity_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_avg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_computers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_computers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResultsView.homogenity_computers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_computers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_cv" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_cv' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'HomogenityResultsView.homogenity_cv' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_cv' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_date" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_date' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'HomogenityResultsView.homogenity_date' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_date' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_deviceReplace" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_deviceReplace' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'HomogenityResultsView.homogenity_deviceReplace' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_deviceReplace' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_earlyDribble" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_earlyDribble' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'HomogenityResultsView.homogenity_earlyDribble' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_earlyDribble' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_end_dates" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_end_dates' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'HomogenityResultsView.homogenity_end_dates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_end_dates' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_error" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_error' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResultsView.homogenity_error' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_error' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_error_text" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_error_text' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResultsView.homogenity_error_text' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_error_text' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_glus" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_glus' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'HomogenityResultsView.homogenity_glus' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="glus" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glus' in member name 'HomogenityResultsView.homogenity_glus' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_glus' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_h62" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_h62' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResultsView.homogenity_h62' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_h62' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_h62_count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_h62_count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'HomogenityResultsView.homogenity_h62_count' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_h62_count' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_h62_value" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_h62_value' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'HomogenityResultsView.homogenity_h62_value' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_h62_value' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_is_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_is_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'HomogenityResultsView.homogenity_is_valid' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_lot_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_lot_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResultsView.homogenity_lot_id' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_lot_id' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_not_h62" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_not_h62' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResultsView.homogenity_not_h62' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_not_h62' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_not_h62_count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_not_h62_count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'HomogenityResultsView.homogenity_not_h62_count' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_not_h62_count' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_not_h62_value" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_not_h62_value' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'HomogenityResultsView.homogenity_not_h62_value' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_not_h62_value' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_out_of_range_strip_count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_out_of_range_strip_count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'HomogenityResultsView.homogenity_out_of_range_strip_count' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_out_of_range_strip_count' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_roll_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_roll_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResultsView.homogenity_roll_id' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_roll_id' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_sn" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_sn' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResultsView.homogenity_sn' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_sn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sn' in member name 'HomogenityResultsView.homogenity_sn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_start_dates" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_start_dates' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'HomogenityResultsView.homogenity_start_dates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_start_dates' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_stddev" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_stddev' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'HomogenityResultsView.homogenity_stddev' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_stddev' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="stddev" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'stddev' in member name 'HomogenityResultsView.homogenity_stddev' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_strip_count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_strip_count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'HomogenityResultsView.homogenity_strip_count' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_strip_count' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_strip_count_is_valid" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_strip_count_is_valid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'HomogenityResultsView.homogenity_strip_count_is_valid' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_strip_count_is_valid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_temp" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_temp' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'HomogenityResultsView.homogenity_temp' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_temp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenity_users" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenity_users' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResultsView.homogenity_users' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenity_users' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenityResultQuery" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenityResultQuery' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenityResultQuery' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#homogenityTable" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.homogenityTable' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.homogenityTable' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.Designer.cs" Line="75">Method 'HomogenityResultsView.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "HomogenityFinishedResultsView".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.Designer.cs" Line="55">Method 'HomogenityResultsView.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "tabPage1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.Designer.cs" Line="65">Method 'HomogenityResultsView.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "tabPage2".</Issue>
            </Message>
            <Message Id="HomogenityFinishedResultsView" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.Designer.cs" Line="75">Correct the spelling of the unrecognized token 'HomogenityFinishedResultsView' in the literal '"HomogenityFinishedResultsView"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeDataGridView()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="926">In method 'HomogenityResultsView.InitializeDataGridView()', call System.IDisposable.Dispose on object 'column' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="936">In method 'HomogenityResultsView.InitializeDataGridView()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="938">In method 'HomogenityResultsView.InitializeDataGridView()', call System.IDisposable.Dispose on object 'new FontFamily("Arial Black")' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumn.set_HeaderText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="986">Method 'HomogenityResultsView.InitializeDataGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "CV(%)".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1012">Method 'HomogenityResultsView.InitializeDataGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Homogenity Teszt Értékelés".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="988">Method 'HomogenityResultsView.InitializeDataGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Kieső csíkok száma".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="980">Method 'HomogenityResultsView.InitializeDataGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Lemért csíkok száma".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="982">Method 'HomogenityResultsView.InitializeDataGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Lemért tubusszám".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="984">Method 'HomogenityResultsView.InitializeDataGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Lot azonosító".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="987">Method 'HomogenityResultsView.InitializeDataGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Nem H62-es hibk száma".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="981">Method 'HomogenityResultsView.InitializeDataGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Roll Azonosító".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="983">Method 'HomogenityResultsView.InitializeDataGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Teszt időpontja".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="985">Method 'HomogenityResultsView.InitializeDataGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Átlag".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="927">Method 'HomogenityResultsView.InitializeDataGridView()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Értékelés".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1031">Method 'HomogenityResultsView.InitializeDataGridView()' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Exception: ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumnCollection" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="937">'HomogenityResultsView.InitializeDataGridView()' creates a new instance of 'DataGridViewColumnCollection' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="Azonosító" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="981">Correct the spelling of the unrecognized token 'Azonosító' in the literal '"Roll Azonosító"'.</Issue>
            </Message>
            <Message Id="Homogenity" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1012">Correct the spelling of the unrecognized token 'Homogenity' in the literal '"Homogenity Teszt Értékelés"'.</Issue>
            </Message>
            <Message Id="Kieső" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="988">Correct the spelling of the unrecognized token 'Kieső' in the literal '"Kieső csíkok száma"'.</Issue>
            </Message>
            <Message Id="Lemért" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="980">Correct the spelling of the unrecognized token 'Lemért' in the literal '"Lemért csíkok száma"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="982">Correct the spelling of the unrecognized token 'Lemért' in the literal '"Lemért tubusszám"'.</Issue>
            </Message>
            <Message Id="Nem" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="987">Correct the spelling of the unrecognized token 'Nem' in the literal '"Nem H62-es hibk száma"'.</Issue>
            </Message>
            <Message Id="Teszt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1012">Correct the spelling of the unrecognized token 'Teszt' in the literal '"Homogenity Teszt Értékelés"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="983">Correct the spelling of the unrecognized token 'Teszt' in the literal '"Teszt időpontja"'.</Issue>
            </Message>
            <Message Id="azonosító" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="984">Correct the spelling of the unrecognized token 'azonosító' in the literal '"Lot azonosító"'.</Issue>
            </Message>
            <Message Id="csíkok" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="988">Correct the spelling of the unrecognized token 'csíkok' in the literal '"Kieső csíkok száma"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="980">Correct the spelling of the unrecognized token 'csíkok' in the literal '"Lemért csíkok száma"'.</Issue>
            </Message>
            <Message Id="hibk" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="987">Correct the spelling of the unrecognized token 'hibk' in the literal '"Nem H62-es hibk száma"'.</Issue>
            </Message>
            <Message Id="időpontja" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="983">Correct the spelling of the unrecognized token 'időpontja' in the literal '"Teszt időpontja"'.</Issue>
            </Message>
            <Message Id="száma" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="988">Correct the spelling of the unrecognized token 'száma' in the literal '"Kieső csíkok száma"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="980">Correct the spelling of the unrecognized token 'száma' in the literal '"Lemért csíkok száma"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="987">Correct the spelling of the unrecognized token 'száma' in the literal '"Nem H62-es hibk száma"'.</Issue>
            </Message>
            <Message Id="tubusszám" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="982">Correct the spelling of the unrecognized token 'tubusszám' in the literal '"Lemért tubusszám"'.</Issue>
            </Message>
            <Message Id="Átlag" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="985">Correct the spelling of the unrecognized token 'Átlag' in the literal '"Átlag"'.</Issue>
            </Message>
            <Message Id="Értékelés" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1012">Correct the spelling of the unrecognized token 'Értékelés' in the literal '"Homogenity Teszt Értékelés"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="927">Correct the spelling of the unrecognized token 'Értékelés' in the literal '"Értékelés"'.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="989">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.InitializeDataGridView()' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1002">Because the behavior of 'Convert.ToBoolean(object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.InitializeDataGridView()' with a call to 'Convert.ToBoolean(object, IFormatProvider)'. If the result of 'Convert.ToBoolean(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1031">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.InitializeDataGridView()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="1031">Change 'HomogenityResultsView.InitializeDataGridView()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#no_homogenity" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.no_homogenity' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'homogenity' in member name 'HomogenityResultsView.no_homogenity' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcessSelect(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="807">'HomogenityResultsView.ProcessSelect(MouseEventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="TestForNaNCorrectly" Category="Microsoft.Usage" CheckId="CA2242" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="807">Because direct comparisons to 'Single.NaN' or 'Double.NaN' will always return true for inequality and false for all other comparisons, replace the comparison in 'HomogenityResultsView.ProcessSelect(MouseEventArgs)' with a call to 'Single.IsNaN' or 'Double.IsNaN'.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="807">Because direct comparisons to 'Single.NaN' or 'Double.NaN' will always return true for inequality and false for all other comparisons, replace the comparison in 'HomogenityResultsView.ProcessSelect(MouseEventArgs)' with a call to 'Single.IsNaN' or 'Double.IsNaN'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#resultString" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'HomogenityResultsView.resultString' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#resultTable" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.resultTable' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#row" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'HomogenityResultsView.row' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_codes" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.selected_codes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'HomogenityResultsView.selected_codes' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_computers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.selected_computers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResultsView.selected_computers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_device_replace" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.selected_device_replace' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'HomogenityResultsView.selected_device_replace' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_early_dribble" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.selected_early_dribble' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'HomogenityResultsView.selected_early_dribble' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_end_dates" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.selected_end_dates' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'HomogenityResultsView.selected_end_dates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_error" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.selected_error' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResultsView.selected_error' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_error_text" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.selected_error_text' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResultsView.selected_error_text' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_fk_errors_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.selected_fk_errors_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'HomogenityResultsView.selected_fk_errors_id' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="fk" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'fk' in member name 'HomogenityResultsView.selected_fk_errors_id' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_glus" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.selected_glus' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'HomogenityResultsView.selected_glus' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="glus" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'glus' in member name 'HomogenityResultsView.selected_glus' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_h62" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.selected_h62' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'HomogenityResultsView.selected_h62' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_nano_ampers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.selected_nano_ampers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'HomogenityResultsView.selected_nano_ampers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="ampers" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'ampers' in member name 'HomogenityResultsView.selected_nano_ampers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="nano" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'nano' in member name 'HomogenityResultsView.selected_nano_ampers' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_not_h62" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.selected_not_h62' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;bool&gt;' in 'HomogenityResultsView.selected_not_h62' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_result_ids" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.selected_result_ids' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;int&gt;' in 'HomogenityResultsView.selected_result_ids' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_rolls" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.selected_rolls' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResultsView.selected_rolls' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_serial_numbers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.selected_serial_numbers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResultsView.selected_serial_numbers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_start_dates" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.selected_start_dates' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;DateTime&gt;' in 'HomogenityResultsView.selected_start_dates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_temp" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.selected_temp' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;double&gt;' in 'HomogenityResultsView.selected_temp' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#selected_users" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.selected_users' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'HomogenityResultsView.selected_users' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetExitButton()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="144">Method 'HomogenityResultsView.SetExitButton()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Program bezárása".</Issue>
            </Message>
            <Message Id="bezárása" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="144">Correct the spelling of the unrecognized token 'bezárása' in the literal '"Program bezárása"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetTitle(System.Double,System.Double)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="802">The 'this' parameter (or 'Me' in Visual Basic) of 'HomogenityResultsView.SetTitle(double, double)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="position" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="802">Parameter 'position' of 'HomogenityResultsView.SetTitle(double, double)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="size" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="802">Parameter 'size' of 'HomogenityResultsView.SetTitle(double, double)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stripNumber" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.stripNumber' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#table" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.table' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tableAll" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.tableAll' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tableEnv" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.tableEnv' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Env" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Env' in member name 'HomogenityResultsView.tableEnv' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tableErrors" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.tableErrors' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#testChart" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityResultsView.testChart' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#testChart_GetToolTipText(System.Object,System.Windows.Forms.DataVisualization.Charting.ToolTipEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="717">'HomogenityResultsView.testChart_GetToolTipText(object, ToolTipEventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataVisualization.Charting.ToolTipEventArgs.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="729">Method 'HomogenityResultsView.testChart_GetToolTipText(object, ToolTipEventArgs)' passes a literal string as parameter 'value' of a call to 'ToolTipEventArgs.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Diagramm Cím".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="724">Method 'HomogenityResultsView.testChart_GetToolTipText(object, ToolTipEventArgs)' passes a literal string as parameter 'value' of a call to 'ToolTipEventArgs.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Érték: ".</Issue>
            </Message>
            <Message Id="Cím" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="729">Correct the spelling of the unrecognized token 'Cím' in the literal '"Diagramm Cím"'.</Issue>
            </Message>
            <Message Id="Diagramm" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="729">Correct the spelling of the unrecognized token 'Diagramm' in the literal '"Diagramm Cím"'.</Issue>
            </Message>
            <Message Id="Érték" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="724">Correct the spelling of the unrecognized token 'Érték' in the literal '"Érték: "'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Other Forms" File="HomogenityResultsView.cs" Line="724">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityResultsView.testChart_GetToolTipText(object, ToolTipEventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WinFormBlankTest.UI.Forms.Result_Forms_With_DataGrid">
       <Types>
        <Type Name="AllHomogenityData" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Homogenity' in type name 'AllHomogenityData'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ConnectToData()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="AllHomogenityData.cs" Line="38">In method 'AllHomogenityData.ConnectToData()', object 'dview' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dview' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="AllHomogenityData.cs" Line="33">Be sure to set the DataSet Locale property wherever 'AllHomogenityData.ConnectToData()' creates an instance of that type.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="AllHomogenityData.cs" Line="29">Replace the call to 'string.operator ==(string, string)' in 'AllHomogenityData.ConnectToData()' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="AllHomogenityData.Designer.cs" Line="33">Method 'AllHomogenityData.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "AllHomogenityData".</Issue>
            </Message>
            <Message Id="AllHomogenityData" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="AllHomogenityData.Designer.cs" Line="33">Correct the spelling of the unrecognized token 'AllHomogenityData' in the literal '"AllHomogenityData"'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CentralVialSelection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#accuracy_vials_form" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CentralVialSelection.accuracy_vials_form' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddRowToDGV(System.Object[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DGV" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.cs" Line="101">Correct the casing of 'DGV' in member name 'CentralVialSelection.AddRowToDGV(object[])' by changing it to 'Dgv'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.cs" Line="101">The 'this' parameter (or 'Me' in Visual Basic) of 'CentralVialSelection.AddRowToDGV(object[])' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#bestSN" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CentralVialSelection.bestSN' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'CentralVialSelection.bestSN' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dgvCentral01" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CentralVialSelection.dgvCentral01' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dgv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dgv' in member name 'CentralVialSelection.dgvCentral01' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillAccuracyVialsForm()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.cs" Line="247">Method 'CentralVialSelection.FillAccuracyVialsForm()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.cs" Line="247">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'CentralVialSelection.FillAccuracyVialsForm()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.cs" Line="248">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'CentralVialSelection.FillAccuracyVialsForm()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.cs" Line="242">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'CentralVialSelection.FillAccuracyVialsForm()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.cs" Line="242">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'CentralVialSelection.FillAccuracyVialsForm()' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.Designer.cs" Line="103">Method 'CentralVialSelection.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "CentralVialSelection".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.Designer.cs" Line="90">Method 'CentralVialSelection.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Tovább".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.DataGridViewColumn.set_HeaderText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.Designer.cs" Line="79">Method 'CentralVialSelection.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Difference from acceptable range average".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.Designer.cs" Line="60">Method 'CentralVialSelection.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "LOT ID".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.Designer.cs" Line="66">Method 'CentralVialSelection.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Roll ID".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.Designer.cs" Line="72">Method 'CentralVialSelection.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'DataGridViewColumn.HeaderText.set(string)'. Retrieve the following string(s) from a resource table instead: "Tube ID".</Issue>
            </Message>
            <Message Id="CentralVialSelection" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.Designer.cs" Line="103">Correct the spelling of the unrecognized token 'CentralVialSelection' in the literal '"CentralVialSelection"'.</Issue>
            </Message>
            <Message Id="Tovább" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.Designer.cs" Line="90">Correct the spelling of the unrecognized token 'Tovább' in the literal '"Tovább"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'CentralVialSelection.Instance' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_id" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'CentralVialSelection.lot_id' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RollId" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CentralVialSelection.RollId' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'CentralVialSelection.RollId' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveCentralsToDB()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.cs" Line="168">Object 'conn_in' can be disposed more than once in method 'CentralVialSelection.SaveCentralsToDB()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 168</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.cs" Line="147">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'CentralVialSelection.SaveCentralsToDB()' could contain the following variables 'Program.LOT_ID', 'row.Cells["roll"].Value', 'row.Cells["tube"].Value', 'row.Cells["differences"].Value', 'Convert.ToDouble((6.35 + Convert.ToDouble(row.Cells["differences"].Value)))'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.cs" Line="147">Because the behavior of 'Convert.ToDouble(object)' could vary based on the current user's locale settings, replace this call in 'CentralVialSelection.SaveCentralsToDB()' with a call to 'Convert.ToDouble(object, IFormatProvider)'. If the result of 'Convert.ToDouble(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.cs" Line="147">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'CentralVialSelection.SaveCentralsToDB()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetButtonFinished()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.cs" Line="117">Method 'CentralVialSelection.SetButtonFinished()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Tovább".</Issue>
            </Message>
            <Message Id="Tovább" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="CentralVialSelection.cs" Line="117">Correct the spelling of the unrecognized token 'Tovább' in the literal '"Tovább"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sn" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CentralVialSelection.sn' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sn' in member name 'CentralVialSelection.sn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SNId" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CentralVialSelection.SNId' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'CentralVialSelection.SNId' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#statDgvCentral" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dgv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Dgv' in member name 'CentralVialSelection.statDgvCentral' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'CentralVialSelection.statDgvCentral' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThaCount" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CentralVialSelection.ThaCount' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Tha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tha' in member name 'CentralVialSelection.ThaCount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#usedBlankSN" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CentralVialSelection.usedBlankSN' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'CentralVialSelection.usedBlankSN' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#usedSN" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CentralVialSelection.usedSN' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'CentralVialSelection.usedSN' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HomogenityTestResult" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Homogenity" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Homogenity' in type name 'HomogenityTestResult'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="lotid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="HomogenityTestResult.cs" Line="27">In method 'HomogenityTestResult.HomogenityTestResult(string, string)', correct the spelling of 'lotid' in parameter name 'lotid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="rollid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="HomogenityTestResult.cs" Line="27">In method 'HomogenityTestResult.HomogenityTestResult(string, string)', correct the spelling of 'rollid' in parameter name 'rollid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConnectToData()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="HomogenityTestResult.cs" Line="51">The query string passed to 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' in 'HomogenityTestResult.ConnectToData()' could contain the following variables 'this.lot', 'this.roll'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="HomogenityTestResult.cs" Line="49">Be sure to set the DataSet Locale property wherever 'HomogenityTestResult.ConnectToData()' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="HomogenityTestResult.cs" Line="51">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HomogenityTestResult.ConnectToData()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="HomogenityTestResult.cs" Line="45">Replace the call to 'string.operator ==(string, string)' in 'HomogenityTestResult.ConnectToData()' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataviews" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'HomogenityTestResult.dataviews' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dview" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HomogenityTestResult.dview' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dview" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dview' in member name 'HomogenityTestResult.dview' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="HomogenityTestResult.Designer.cs" Line="33">Method 'HomogenityTestResult.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "HomogenityTestResult".</Issue>
            </Message>
            <Message Id="HomogenityTestResult" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Forms\Result Forms With DataGrid" File="HomogenityTestResult.Designer.cs" Line="33">Correct the spelling of the unrecognized token 'HomogenityTestResult' in the literal '"HomogenityTestResult"'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WinFormBlankTest.UI.Panels">
       <Types>
        <Type Name="CounterPanel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="30">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CounterPanel.CounterPanel(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="34">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CounterPanel.CounterPanel(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddOneMeasure()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="219">The 'this' parameter (or 'Me' in Visual Basic) of 'CounterPanel.AddOneMeasure()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AkyProgressBar1_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="51">'CounterPanel.AkyProgressBar1_Load(object, EventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="177">'c', a variable, is cast to type 'TextBox' multiple times in method 'CounterPanel.button1_Click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="179">'c', a variable, is cast to type 'TextBox' multiple times in method 'CounterPanel.button1_Click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="180">'c', a variable, is cast to type 'TextBox' multiple times in method 'CounterPanel.button1_Click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DecraseRemainingStripCount()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="202">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'CounterPanel.DecraseRemainingStripCount()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Int32)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="202">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'CounterPanel.DecraseRemainingStripCount()' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IncreaseMeasuredStripCount()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="227">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'CounterPanel.IncreaseMeasuredStripCount()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="227">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CounterPanel.IncreaseMeasuredStripCount()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.Designer.cs" Line="92">Method 'CounterPanel.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Clear All".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.Designer.cs" Line="140">Method 'CounterPanel.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Hátralévő csíkok száma:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.Designer.cs" Line="84">Method 'CounterPanel.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Lemérendő csíkszám:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.Designer.cs" Line="64">Method 'CounterPanel.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Lemért csíkok:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.Designer.cs" Line="74">Method 'CounterPanel.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Lot_ID:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.Designer.cs" Line="54">Method 'CounterPanel.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Mérendő tubus száma:".</Issue>
            </Message>
            <Message Id="Hátralévő" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.Designer.cs" Line="140">Correct the spelling of the unrecognized token 'Hátralévő' in the literal '"Hátralévő csíkok száma:"'.</Issue>
            </Message>
            <Message Id="Lemérendő" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.Designer.cs" Line="84">Correct the spelling of the unrecognized token 'Lemérendő' in the literal '"Lemérendő csíkszám:"'.</Issue>
            </Message>
            <Message Id="Lemért" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.Designer.cs" Line="64">Correct the spelling of the unrecognized token 'Lemért' in the literal '"Lemért csíkok:"'.</Issue>
            </Message>
            <Message Id="LotID" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.Designer.cs" Line="74">Correct the spelling of the unrecognized token 'LotID' in the literal '"Lot_ID:"'.</Issue>
            </Message>
            <Message Id="Mérendő" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.Designer.cs" Line="54">Correct the spelling of the unrecognized token 'Mérendő' in the literal '"Mérendő tubus száma:"'.</Issue>
            </Message>
            <Message Id="csíkok" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.Designer.cs" Line="140">Correct the spelling of the unrecognized token 'csíkok' in the literal '"Hátralévő csíkok száma:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.Designer.cs" Line="64">Correct the spelling of the unrecognized token 'csíkok' in the literal '"Lemért csíkok:"'.</Issue>
            </Message>
            <Message Id="csíkszám" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.Designer.cs" Line="84">Correct the spelling of the unrecognized token 'csíkszám' in the literal '"Lemérendő csíkszám:"'.</Issue>
            </Message>
            <Message Id="száma" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.Designer.cs" Line="140">Correct the spelling of the unrecognized token 'száma' in the literal '"Hátralévő csíkok száma:"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.Designer.cs" Line="54">Correct the spelling of the unrecognized token 'száma' in the literal '"Mérendő tubus száma:"'.</Issue>
            </Message>
            <Message Id="tubus" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.Designer.cs" Line="54">Correct the spelling of the unrecognized token 'tubus' in the literal '"Mérendő tubus száma:"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'CounterPanel.Instance' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#invalidate_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="169">'CounterPanel.invalidate_Click(object, EventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lot_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CounterPanel.lot_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#measured_till" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'CounterPanel.measured_till' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pb" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="pb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'pb' in member name 'CounterPanel.pb' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'CounterPanel.pb' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetMeasuredCountToNull()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="160">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CounterPanel.SetMeasuredCountToNull()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetNeedToMeasure()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="93">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CounterPanel.SetNeedToMeasure()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="98">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CounterPanel.SetNeedToMeasure()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetRemaining()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Provide correct arguments to formatting methods" Category="Microsoft.Usage" CheckId="CA2241" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="DependsOnFix">
             <Issue Name="MissingArgument" Certainty="75" Level="Warning" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="84">Method 'CounterPanel.SetRemaining()' calls 'string.Format(string, params object[])' and does not provide an argument for format item "{0}". The provided format string is: '"{0}"'</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="84">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'CounterPanel.SetRemaining()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetRemainingToBegin()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="64">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CounterPanel.SetRemainingToBegin()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="69">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CounterPanel.SetRemainingToBegin()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetTubeCountLabel()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="f:\work\csikv_MEO\WinFormBlankTest\UI\Panels" File="CounterPanel.cs" Line="143">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CounterPanel.SetTubeCountLabel()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tbLemert" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CounterPanel.tbLemert' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Lemert" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lemert' in member name 'CounterPanel.tbLemert' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tube_count" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-10-14 08:22:45Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CounterPanel.tube_count' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidCallingProblematicMethods" Category="Microsoft.Reliability" CheckId="CA2001">
   <Name>Avoid calling problematic methods</Name>
   <Description>Avoid making unnecessary and potentially dangerous method calls.</Description>
   <Resolution Name="System.GC.Collect">Remove the call to GC.Collect from {0}. It is usually unnecessary to force garbage collection, and doing so can severely degrade performance.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385973.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="reliabilityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506">
   <Name>Avoid excessive class coupling</Name>
   <Description>Types and methods with a high degree of class coupling can be difficult to maintain.</Description>
   <Resolution Name="Method">{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Resolution Name="UIMethod">{0} is coupled with {1} different (non-IComponent) types from {2} different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Resolution Name="UIType">{0} is coupled with {1} different (non-IComponent) types from {2} different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb397994.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>Avoid excessive complexity</Name>
   <Description>Method implementations that are exceedingly complex increase the challenge of understanding and maintaining code.</Description>
   <Resolution Name="Default">{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182212.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809">
   <Name>Avoid excessive locals</Name>
   <Description>Method implementations should not contain more than 64 local variables. In order for the run-time to enregister local variables most efficiently, there should be 64 or fewer of them. Enregistering based on flow analysis will not occur for locals in excess of 64, which may result in slower performance.</Description>
   <Resolution Name="Compiler">{0} has {1} local variables, {2} of which were generated by the compiler. Refactor {0} so that it uses fewer than 64 local variables.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182263.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
   <Name>Avoid uninstantiated internal classes</Name>
   <Description>An internal class was detected that is apparently never instantiated. This rule does not attempt to detect late-bound creation and will generate false positives if instances of a type are only created in this way (for example, by means of Activator.CreateInstance or by passing the type as an argument to a TypeConverter constructor).</Description>
   <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182265.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505">
   <Name>Avoid unmaintainable code</Name>
   <Description>Types and methods with a high degree of class coupling, cyclomatic complexity and/or program length can be difficult to maintain.</Description>
   <Resolution Name="Method">{0} has a maintainability index of {1}. Rewrite or refactor the method to increase its maintainability index (MI). An MI below {2} indicates poor maintainability, an MI between {2} and {3} indicates moderate maintainability, and an MI above {3} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386043.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
   <Name>Collection properties should be read only</Name>
   <Description>Properties that return collections should be read-only so that users cannot entirely replace the backing store. Users can still modify the contents of the collection by calling relevant methods on the collection. Note that the XmlSerializer class has special support for deserializing read-only collections. See the XmlSerializer overview for more information.</Description>
   <Resolution Name="Default">Change {0} to be read-only by removing the property setter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182327.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberParameterShouldBeCompoundWord">In member {0}, the discrete term '{1}' in parameter name {2} should be expressed as a compound word, '{3}'.</Resolution>
   <Resolution Name="MemberParameterShouldBeDiscreteTerm">In member {0}, the compound word '{1}' in parameter name {2} exists as a discrete term. If your usage is intended to be single word, case it as '{3}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare event handlers correctly</Name>
   <Description>By convention, .NET events have two parameters that specify the event sender and event data. Event handler signatures should follow this form: void MyEventHandler(object sender, EventArgs e). The 'sender' parameter is always of type System.Object, even if it is possible to employ a more specific type. The 'e' parameter is always of type System.EventArgs. Events that do not provide event data should use the System.EventHandler delegate type. Event handlers return void so that they can send each event to multiple target methods. Any value returned by a target would be lost after the first call.</Description>
   <Resolution Name="First">Declare the first parameter of {0} as an object named 'sender'.</Resolution>
   <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   <Resolution Name="TooMany">Remove all but the first two parameters of {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213">
   <Name>Disposable fields should be disposed</Name>
   <Description>If a type that implements IDisposable owns fields that also implement IDisposable, the encapsulating type's Dispose() implementation should call Dispose() on each disposable field.</Description>
   <Resolution Name="Default">{0} contains field {1} that is of IDisposable type: {2}. Change the Dispose method on {0} to call Dispose or Close on this field.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182328.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 2082</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>Do not call overridable methods in constructors</Name>
   <Description>Virtual methods defined on the class should not be called from constructors. If a derived class has overridden the method, the derived class version will be called (before the derived class constructor is called).</Description>
   <Resolution Name="Default">{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
   <Name>Do not cast unnecessarily</Name>
   <Description>Avoid duplicate casts where possible, since there is a cost associated with them.</Description>
   <Resolution Name="Local">{0}, a variable, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182271.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>Do not ignore method results</Name>
   <Description>The result of methods that return new instances of strings should be assigned to a variable and subsequently used. If the result of a method that creates a new object, such as String.ToLower(), is not assigned to a variable, the call is wasted.</Description>
   <Resolution Name="ObjectCreation">{0} creates a new instance of {1} which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Resolution>
   <Resolution Name="StringCreation">{0} calls {1} but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Resolution>
   <Resolution Name="TryParse">{0} calls {1} but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>Do not raise reserved exception types</Name>
   <Description>User code should not create and raise exceptions of certain types that are reserved by the runtime or which are of a too general exception type. Exception types that are too general include Exception, SystemException, and ApplicationException. Exception types that are reserved by the runtime include ThreadAbortException, OutOfMemoryException, ExecutionEngineException, and IndexOutOfRangeException.</Description>
   <Resolution Name="Reserved">{0} creates an exception of type {1}, an exception type that is reserved by the runtime and should never be raised by managed code. If this exception instance might be thrown, use a different exception type.</Resolution>
   <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182338.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008">
   <Name>Enums should have zero value</Name>
   <Description>An enum should generally have a zero value. If the enum is not decorated with the Flags attribute, it should have a member with a value of zero that represents the empty state. Optionally, this value is named 'None'. For a Flags-attributed enum, a zero-valued member is optional and, if it exists, should always be named 'None'. This value should indicate that no values have been set in the enum. Using a zero-valued member for other purposes is contrary to the use of the Flags attribute in that the bitwise AND and OR operators are useless with the member.</Description>
   <Resolution Name="NotFlagsNoZeroValue">Add a member to {0} that has a value of zero with a suggested name of 'None'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182149.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberAbbreviation">Correct the casing of '{0}' in member name {1} by changing it to '{2}'. '{2}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="MemberParameterAbbreviation">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'. '{3}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="DelegateParameter">In delegate {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="DelegateParameterMoreMeaningfulName">In delegate {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberMoreMeaningfulName">Consider providing a more meaningful name than member name {0}.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708">
   <Name>Identifiers should differ by more than case</Name>
   <Description>Do not use names that require case sensitivity for uniqueness. Components must be fully usable from both case-sensitive and case-insensitive languages. Since case-insensitive languages cannot distinguish between two names within the same context that differ only by case, components must avoid this situation.</Description>
   <Resolution Name="Member">Change member names {0} and '{1}' so that they differ by more than case.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182242.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageSpecificMember">Consider replacing the language-specific data type identifier '{0}' in member name {1} with either a language-independent equivalent or a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, remove the underscores from parameter name {1}.</Resolution>
   <Resolution Name="Namespace">Remove the underscores from namespace name '{0}'.</Resolution>
   <Resolution Name="Type">Remove the underscores from type name {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
   <Name>Instantiate argument exceptions correctly</Name>
   <Description>String arguments passed to constructors of ArgumentException and its derived types should be correct. Types derived from ArgumentException have inconsistent constructor overloads with respect to the message and paramName parameters as compared to ArgumentException.</Description>
   <Resolution Name="IncorrectParameterName">Method {0} passes '{1}' as the {2} argument to a {3} constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182347.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkWindowsFormsEntryPointsWithStaThread" Category="Microsoft.Usage" CheckId="CA2232">
   <Name>Mark Windows Forms entry points with STAThread</Name>
   <Description>Assemblies that reference System.Windows.Forms should have the STAThreadAttribute. Failure to apply this attribute will most likely result in an application that does not work. Windows Forms relies on a number of components that use the STA model.</Description>
   <Resolution Name="Default">Mark the entry point method {0} in assembly {1} with an STAThreadAttribute.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182351.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>Nested types should not be visible</Name>
   <Description>Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</Description>
   <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
   <Name>Non-constant fields should not be visible</Name>
   <Description>Static fields should be constant unless you carefully manage access to the field using locks. Using static variables without making them thread safe can compromise execution state. This rule applies to managed code libraries. If the analyzed assembly is an application, it is usually safe to exclude violations of this rule.</Description>
   <Resolution Name="Default">Consider making {0} non-public or a constant.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182353.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717">
   <Name>Only FlagsAttribute enums should have plural names</Name>
   <Description>Plural names indicate that the values of the enumeration can be combined. For example, an enumeration named 'Day' indicates a single day, and an enumeration named 'Days' indicates multiple days. Enumeration values should be combined using the bit-wise OR operator only if the Flags attribute is present on the enumeration.</Description>
   <Resolution Name="Default">If the name {0} is plural, change it to its singular form.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264487.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Provide correct arguments to formatting methods" Category="Microsoft.Usage" CheckId="CA2241">
   <Name>Provide correct arguments to formatting methods</Name>
   <Description>Provide the correct number of arguments to String.Format calls.</Description>
   <Resolution Name="MissingArgument">Method {0} calls {1} and does not provide an argument for format item {2}. The provided format string is: '{3}'</Resolution>
   <Resolution Name="MissingFormatItem">Method {0} calls {1} and does not provide a format item for argument {2}. The provided format string is: '{3}'</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182361.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100">
   <Name>Review SQL queries for security vulnerabilities</Name>
   <Description>A SQL command string built from user input is vulnerable to SQL injection attacks. Microsoft SQL Server and other database servers support stored procedures and parameterized SQL queries, which reduce the risk of injection attacks.</Description>
   <Resolution Name="WithNonLiterals">The query string passed to {0} in {1} could contain the following variables {2}. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306">
   <Name>Set locale for data types</Name>
   <Description>In most cases, Locale should be explicitly set to CultureInfo.InvariantCulture on DataSet and DataTable instances. Upon creation of a DataSet or DataTable instance, the Locale is set to the current culture. In most cases, the Locale should be set to CultureInfo.InvariantCulture to guarantee proper sorting behavior in all cultures.</Description>
   <Resolution Name="Default">Be sure to set the {0} Locale property wherever {1} creates an instance of that type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182188.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>Specify CultureInfo</Name>
   <Description>If an overload exists that takes a CultureInfo argument, it should always be called in favor of an overload that does not. The CultureInfo type contains culture-specific information required for performing numeric and string operations, such as casing, formatting, and string comparisons. In scenarios where conversion and parsing behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182189.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300">
   <Name>Specify MessageBoxOptions</Name>
   <Description>In order to run correctly on right-to-left systems, all calls to MessageBox.Show should use the overload that specifies MessageBoxOptions as an argument. Programs should detect whether they are running on a right-to-left system at run-time and pass the appropriate MessageBoxOptions value in order to display correctly.</Description>
   <Resolution Name="Default">Change {0} to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182191.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>Test for empty strings using string length</Name>
   <Description>To test for empty strings, check if String.Length is equal to zero. Constructs such as "".Equals(someString) and String.Empty.Equals(someString) are less efficient than testing the string length. Replace these with checks for someString.Length == 0.</Description>
   <Resolution Name="IsNullOrEmpty">Replace the call to {0} in {1} with a call to 'String.IsNullOrEmpty'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="TestForNaNCorrectly" Category="Microsoft.Usage" CheckId="CA2242">
   <Name>Test for NaN correctly</Name>
   <Description>Direct comparisons against 'Single.NaN' or 'Double.NaN' (not a number) always return true for inequality and false for all other comparisons; use 'Single.IsNaN' or 'Double.IsNaN' to check if a floating point value is NaN.</Description>
   <Resolution Name="Default">Because direct comparisons to 'Single.NaN' or 'Double.NaN' will always return true for inequality and false for all other comparisons, replace the comparison in {0} with a call to 'Single.IsNaN' or 'Double.IsNaN'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264491.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030">
   <Name>Use events where appropriate</Name>
   <Description>A method name suggestive of event functionality was encountered.</Description>
   <Resolution Name="Default">Consider making {0} an event.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182177.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="Member">Replace the term '{0}' in member name {1} with the preferred alternate '{2}'.</Resolution>
   <Resolution Name="MemberNoAlternate">Replace the term '{0}' in member name {1} with an appropriate alternate or remove it entirely.</Resolution>
   <Resolution Name="Type">Replace the term '{0}' in type name {1} with the preferred alternate '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182258.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500">
   <Name>Variable names should not match field names</Name>
   <Description>Instance field and variable names should not be identical within the same scope.</Description>
   <Resolution Name="Local">{0}, a variable declared in {1}, has the same name as an instance field on the type. Change the name of one of these items.</Resolution>
   <Resolution Name="Parameter">{0}, a parameter declared in {1}, has the same name as an instance field on the type. Change the name of one of these items.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182216.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="12.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
